<?xml version="1.0"?>

<project basedir="." name="portal-test-authentication" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build-test.xml" />

	<macrodef name="deploy-openam">
		<sequential>
			<delete dir="${app.server.deploy.dir}/openam" />

			<delete dir="${openam.config.dir}" />

			<if>
				<not>
					<available file="${app.server.dir}/openam.war" />
				</not>
				<then>
					<mirrors-get
						dest="${app.server.dir}/${openam.war.name}"
						src="http://files.liferay.com/private/apps/forgerock/openam/${openam.war.name}"
						verbose="true"
					/>

					<move
						file="${app.server.dir}/${openam.war.name}"
						tofile="${app.server.deploy.dir}/openam.war"
					/>
				</then>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="unzip-openam-admin-tools">
		<sequential>
			<delete dir="${openam.admin.tools.dir}" />

			<if>
				<not>
					<available file="${app.server.parent.dir}/${openam.admin.tools.zip.name}" />
				</not>
				<then>
					<mirrors-get
						dest="${app.server.parent.dir}/${openam.admin.tools.zip.name}"
						src="http://files.liferay.com/private/apps/forgerock/openam/${openam.admin.tools.zip.name}"
						verbose="true"
					/>
				</then>
			</if>

			<unzip
				dest="${openam.admin.tools.dir}"
				src="${app.server.parent.dir}/${openam.admin.tools.zip.name}"
			/>
		</sequential>
	</macrodef>

	<macrodef name="unzip-openam-configurator-tools">
		<sequential>
			<delete dir="${openam.configurator.tools.dir}" />

			<if>
				<not>
					<available file="${app.server.parent.dir}/${openam.configurator.tools.zip.name}" />
				</not>
				<then>
					<mirrors-get
						dest="${app.server.parent.dir}/${openam.configurator.tools.zip.name}"
						src="http://files.liferay.com/private/apps/forgerock/openam/${openam.configurator.tools.zip.name}"
						verbose="true"
					/>
				</then>
			</if>

			<unzip
				dest="${openam.configurator.tools.dir}"
				src="${app.server.parent.dir}/${openam.configurator.tools.zip.name}"
			/>
		</sequential>
	</macrodef>

	<target name="delete-openam-config">
		<delete dir="${openam.config.dir}" />
	</target>

	<target name="run-openam-tools">
		<sequential>
			<echo file="${openam.configurator.tools.dir}/config.properties">SERVER_URL=http://test.able.com:8080
DEPLOYMENT_URI=/openam
BASE_DIR=${openam.config.dir}
locale=en_US
PLATFORM_LOCALE=en_US
AM_ENC_KEY=
ADMIN_PWD=password
AMLDAPUSERPASSWD=liferay01
COOKIE_DOMAIN=.able.com
ACCEPT_LICENSES=true
DATA_STORE=embedded
DIRECTORY_SSL=SIMPLE
DIRECTORY_SERVER=test.able.com
DIRECTORY_PORT=50389
DIRECTORY_ADMIN_PORT=4444
DIRECTORY_JMX_PORT=1689
ROOT_SUFFIX=dc=openam,dc=forgerock,dc=org
DS_DIRMGRDN=cn=Directory Manager
DS_DIRMGRPASSWD=11111111</echo>

			<java failonerror="true" fork="true" jar="${openam.configurator.tools.dir}/openam-configurator-tool-12.0.0.jar">
				<arg line="--file ${openam.configurator.tools.dir}/config.properties" />
			</java>

			<echo file="${openam.admin.tools.dir}/datafile">com.iplanet.am.cookie.encode=true</echo>

			<echo file="${openam.admin.tools.dir}/passwordfile">password</echo>

			<if>
				<os family="unix" />
				<then>
					<chmod file="${openam.admin.tools.dir}/**" perm="a+x" />

					<exec dir="${openam.admin.tools.dir}" executable="/bin/bash" failonerror="true">
						<arg value="-c" />
						<arg value="./setup -p ${openam.config.dir} -d ${openam.admin.tools.dir}/debug -l ${openam.admin.tools.dir}/log --acceptLicense" />
					</exec>

					<chmod file="${openam.admin.tools.dir}/passwordfile" perm="400" />

					<exec dir="${openam.admin.tools.dir}/openam/bin" executable="/bin/bash" failonerror="true">
						<arg value="-c" />
						<arg value="./ssoadm update-server-cfg -u amAdmin -f ${openam.admin.tools.dir}/passwordfile -D ${openam.admin.tools.dir}/datafile -s http://test.able.com:8080/openam" />
					</exec>

					<exec dir="${openam.admin.tools.dir}/openam/bin" executable="/bin/bash" failonerror="true">
						<arg value="-c" />
						<arg value="./ssoadm create-identity -e / -i 'test' -t User -u amAdmin -f ${openam.admin.tools.dir}/passwordfile -a givenName=Test sn=Test userPassword=password mail=test@liferay.com" />
					</exec>
				</then>
				<elseif>
					<os family="windows" />
					<then>
						<exec dir="${openam.admin.tools.dir}" executable="cmd" failonerror="true">
							<arg value="/c" />
							<arg value="setup.bat -p ${openam.config.dir} -d ${openam.admin.tools.dir}/debug -l ${openam.admin.tools.dir}/log --acceptLicense" />
						</exec>

						<exec dir="${openam.admin.tools.dir}/openam/bin" executable="cmd" failonerror="true">
							<arg value="/c" />
							<arg value="ssoadm update-server-cfg -u amAdmin -f ${openam.admin.tools.dir}/passwordfile -D ${openam.admin.tools.dir}/datafile -s http://test.able.com:8080/openam" />
						</exec>

						<exec dir="${openam.admin.tools.dir}/openam/bin" executable="cmd" failonerror="true">
							<arg value="/c" />
							<arg value="ssoadm create-identity -e / -i 'Test Test' -t User -u amAdmin -f ${openam.admin.tools.dir}/passwordfile -a givenName=Test sn=Test userPassword=password mail=test@liferay.com" />
						</exec>
					</then>
				</elseif>
			</if>
		</sequential>
	</target>

	<target name="setup-openam">
		<deploy-openam />

		<unzip-openam-admin-tools />

		<unzip-openam-configurator-tools />
	</target>

	<target name="verify-token-based-login">
		<exec executable="curl" outputproperty="curl.output">
		    <arg line="-H SM_USER:test@liferay.com localhost:8080" />
		</exec>

		<echo>${curl.output}</echo>

		<if>
			<contains string="${curl.output}" substring="Test Test" />
			<then>
				<echo>Signed in successfully.</echo>
			</then>
			<else>
				<fail>Token-based SSO failed.</fail>
			</else>
		</if>
	</target>
</project>