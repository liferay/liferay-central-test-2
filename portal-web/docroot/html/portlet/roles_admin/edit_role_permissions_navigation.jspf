<%--
/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
boolean includeSystemPortlets = true;

List<Portlet> portlets = PortletLocalServiceUtil.getPortlets(company.getCompanyId(), includeSystemPortlets, false);

portlets = ListUtil.sort(portlets, new PortletTitleComparator(application, locale));
%>

<aui:form action="<%= currentURL %>" name="resourceSelection">
	<aui:fieldset>
		<aui:select changesContext="<%= true %>" name="add-permissions" onchange='<%= renderResponse.getNamespace() + "addPermissions(this);" %>'>
			<aui:option label="" />

			<c:choose>
				<c:when test="<%= role.getType() == RoleConstants.TYPE_SITE %>">
					<optgroup label="<liferay-ui:message key="administration" />">

						<%
						editPermissionsURL.setParameter("portletResource", PortletKeys.SITES_ADMIN);
						editPermissionsURL.setParameter("showModelResources", "1");
						%>

						<aui:option label="site-administration" selected="<%= _isCurrent(editPermissionsURL.toString(), portletResource, showModelResources) %>" value="<%= editPermissionsURL.toString() %>" />
					</optgroup>
				</c:when>
				<c:when test="<%= role.getType() == RoleConstants.TYPE_ORGANIZATION %>">
					<optgroup label="<liferay-ui:message key="administration" />">

						<%
						editPermissionsURL.setParameter("portletResource", PortletKeys.USERS_ADMIN);
						editPermissionsURL.setParameter("showModelResources", "1");
						%>

						<aui:option label="organization-administration" selected="<%= _isCurrent(editPermissionsURL.toString(), portletResource, showModelResources) %>" value="<%= editPermissionsURL.toString() %>" />
					</optgroup>
				</c:when>
				<c:otherwise>
					<optgroup label="<liferay-ui:message key="portal" />">

						<%
						if (role.getType() == RoleConstants.TYPE_REGULAR) {
							editPermissionsURL.setParameter("portletResource", PortletKeys.PORTAL);
							editPermissionsURL.setParameter("showModelResources", "0");
						%>

							<aui:option label="general" selected="<%= _isCurrent(editPermissionsURL.toString(), portletResource, showModelResources) %>" value="<%= editPermissionsURL.toString() %>" />

						<%
						}

						for (Portlet portlet : portlets) {
							if (Validator.isNull(portlet.getPortletId()) || !_isPortalPortlet(portlet.getPortletId())) {
								continue;
							}

							List<String> curModelResources = ResourceActionsUtil.getPortletModelResources(portlet.getPortletId());

							if (!portlet.getPortletId().equals(PortletKeys.PORTAL) && curModelResources.isEmpty()) {
								continue;
							}

							if ((role.getType() == RoleConstants.TYPE_SITE) && !_isSitePortlet(portlet.getPortletId())) {
								continue;
							}

							if ((role.getType() == RoleConstants.TYPE_ORGANIZATION) && !_isOrganizationPortlet(portlet.getPortletId())) {
								continue;
							}

							editPermissionsURL.setParameter("portletResource", portlet.getPortletId());
							editPermissionsURL.setParameter("showModelResources", "1");
						%>

							<aui:option label="<%= PortalUtil.getPortletLongTitle(portlet, application, locale) %>" selected="<%= _isCurrent(editPermissionsURL.toString(), portletResource, showModelResources) %>" value="<%= editPermissionsURL.toString() %>" />

						<%
						}
						%>

					</optgroup>
				</c:otherwise>
			</c:choose>

			<optgroup label="<liferay-ui:message key="site-content" />">

				<%
				for (Portlet portlet : portlets) {
					if (Validator.isNull(portlet.getPortletId()) || _isPortalPortlet(portlet.getPortletId())) {
						continue;
					}

					List<String> curModelResources = ResourceActionsUtil.getPortletModelResources(portlet.getPortletId());

					if (curModelResources.isEmpty()) {
						continue;
					}

					editPermissionsURL.setParameter("portletResource", portlet.getPortletId());
					editPermissionsURL.setParameter("showModelResources", "1");
				%>

					<aui:option label="<%= PortalUtil.getPortletLongTitle(portlet, application, locale) %>" selected="<%= _isCurrent(editPermissionsURL.toString(), portletResource, showModelResources) %>" value="<%= editPermissionsURL.toString() %>" />

				<%
				}
				%>

			</optgroup>

			<%
			Set<String> hiddenPortletIds = Collections.emptySet();

			PortletCategory portletCategory = (PortletCategory)WebAppPool.get(company.getCompanyId(), WebKeys.PORTLET_CATEGORY);

			PortletCategory hiddentPortletCategory = portletCategory.getCategory(PortletCategoryConstants.NAME_HIDDEN);

			if (hiddentPortletCategory != null) {
				hiddenPortletIds = hiddentPortletCategory.getPortletIds();
			}
			%>

			<optgroup label="<liferay-ui:message key="site-applications" />">

				<%
				for (Portlet portlet : portlets) {
					if (Validator.isNull(portlet.getPortletId()) || hiddenPortletIds.contains(portlet.getPortletId()) || portlet.isSystem()) {
						continue;
					}

					editPermissionsURL.setParameter("portletResource", portlet.getPortletId());
					editPermissionsURL.setParameter("showModelResources", "0");
				%>

					<aui:option label="<%= PortalUtil.getPortletLongTitle(portlet, application, locale) %>" selected="<%= _isCurrent(editPermissionsURL.toString(), portletResource, showModelResources) %>" value="<%= editPermissionsURL.toString() %>" />

				<%
				}
				%>

			</optgroup>

			<%
			String[] categories = ArrayUtil.append(PortletCategoryKeys.ALL, PortletCategoryKeys.MY);

			Map<String, List<Portlet>> portletsMap = new LinkedHashMap<String, List<Portlet>>(categories.length);

			for (Portlet portlet : portlets) {
				String controlPanelCategory = portlet.getControlPanelEntryCategory();

				if (Validator.isNull(portlet.getPortletId()) || Validator.isNull(controlPanelCategory)) {
					continue;
				}

				List<Portlet> categoryPortlets = portletsMap.get(controlPanelCategory);

				if (categoryPortlets == null) {
					categoryPortlets = new ArrayList<Portlet>();

					portletsMap.put(controlPanelCategory, categoryPortlets);
				}

				if (controlPanelCategory.startsWith(PortletCategoryKeys.SITE_ADMINISTRATION) ||
					(controlPanelCategory.equals(PortletCategoryKeys.APPS) && (role.getType() == RoleConstants.TYPE_REGULAR) && !Validator.equals(portlet.getControlPanelEntryClass(), OmniadminControlPanelEntry.class.getName())) ||
					(role.getType() == RoleConstants.TYPE_REGULAR)) {

					categoryPortlets.add(portlet);
				}
			}

			for (String controlPanelCategory : categories) {
				List<Portlet> categoryPortlets = portletsMap.get(controlPanelCategory);

				if (categoryPortlets == null) {
					continue;
				}
			%>

				<c:if test="<%= !categoryPortlets.isEmpty() %>">
					<optgroup label="<liferay-ui:message key='<%= "control-panel-" + controlPanelCategory %>' />">

						<%
						for (Portlet portlet : categoryPortlets) {
							editPermissionsURL.setParameter("portletResource", portlet.getPortletId());
							editPermissionsURL.setParameter("showModelResources", "0");
						%>

							<aui:option label="<%= PortalUtil.getPortletLongTitle(portlet, application, locale) %>" selected="<%= _isCurrent(editPermissionsURL.toString(), portletResource, showModelResources) %>" value="<%= editPermissionsURL.toString() %>" />

						<%
						}
						%>

					</optgroup>
				</c:if>

			<%
			}
			%>

		</aui:select>
	</aui:fieldset>
</aui:form>

<%!
private boolean _isSitePortlet(String portletId) {
	return _sitePortletIds.contains(portletId);
}

private boolean _isCurrent(String url, String portletResource, boolean showModelResources) {
	if (Validator.isNull(portletResource)) {
		return false;
	}

	String showModelResourcesString = "0";

	if (showModelResources) {
		showModelResourcesString = "1";
	}

	if (url.contains("portletResource=" + portletResource + StringPool.AMPERSAND) &&
		url.contains("showModelResources=" + showModelResourcesString)) {

		return true;
	}
	else {
		return false;
	}
}

private boolean _isOrganizationPortlet(String portletId) {
	return _organizationPortletIds.contains(portletId);
}

private boolean _isPortalPortlet(String portletId) {
	return _portalPortletIds.contains(portletId);
}

private static Set<String> _sitePortletIds = SetUtil.fromArray(
	new String[] {
		PortletKeys.SITES_ADMIN
	});

private static Set<String> _organizationPortletIds = SetUtil.fromArray(
	new String[] {
		PortletKeys.USERS_ADMIN
	});

private static Set<String> _portalPortletIds = SetUtil.fromArray(
	new String[] {
		PortletKeys.EXPANDO,
		PortletKeys.LAYOUT_PROTOTYPE,
		PortletKeys.LAYOUT_SET_PROTOTYPE,
		PortletKeys.MONITORING,
		PortletKeys.PASSWORD_POLICIES_ADMIN,
		PortletKeys.PLUGINS_ADMIN,
		PortletKeys.PORTAL_SETTINGS,
		PortletKeys.ROLES_ADMIN,
		PortletKeys.SITES_ADMIN,
		PortletKeys.USERS_ADMIN
	});
%>