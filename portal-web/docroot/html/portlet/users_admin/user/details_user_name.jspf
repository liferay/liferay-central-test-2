<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
List<Map<String,Object>> userFields = new ArrayList<Map<String, Object>>();

String[] userNameFields = StringUtil.split(LanguageUtil.get(locale, "user.name.fields"));
String userNameRequiredFields = LanguageUtil.get(locale, "user.name.required.fields");

for (String userNameField: userNameFields) {
	Map<String, Object> userFieldMap = new HashMap<String, Object>();

	userFieldMap.put("fieldName", userNameField);

	boolean required = StringUtil.contains(userNameRequiredFields, userNameField);

	userFieldMap.put("required", required);

	String testOptionsProperty = "user.name." + userNameField + ".options";

	String optionsString = LanguageUtil.get(locale, testOptionsProperty, StringPool.BLANK);

	if (!optionsString.isEmpty()) {
		userFieldMap.put("options", StringUtil.split(optionsString));
	}

	userFields.add(userFieldMap);
}
%>

<liferay-ui:error exception="<%= ContactFirstNameException.class %>" message="please-enter-a-valid-first-name" />
<liferay-ui:error exception="<%= ContactFullNameException.class %>" message="please-enter-a-valid-first-middle-and-last-name" />

<%
for (Map<String, Object> userField: userFields) {
	String fieldName = (String)userField.get("fieldName");
	boolean required = Boolean.valueOf((Boolean)userField.get("required"));
	String[] options = (String[])userField.get("options");

	fieldName = CamelCaseUtil.toCamelCase(fieldName);
%>

<c:choose>
	<c:when test="<%= Validator.isNull(options) %>">
		<aui:input disabled="<%= !UsersAdminUtil.hasUpdateFieldPermission(permissionChecker, user, selUser, fieldName) %>" name="<%= fieldName %>">
			<c:if test="<%= required %>">
				<aui:validator name="required" />
			</c:if>
		</aui:input>
	</c:when>
	<c:otherwise>
		<aui:select disabled="<%= !UsersAdminUtil.hasUpdateFieldPermission(permissionChecker, user, selUser, fieldName) %>" label="<%= fieldName %>" name='<%= fieldName.concat("Id") %>' showEmptyOption="<%= true %>">

		<%
		String selected = StringPool.BLANK;

		if (!Validator.isNull(selContact)) {
			int listTypeId = BeanParamUtil.getInteger(selContact, request, fieldName.concat("Id"));

			try {
				selected = ListTypeServiceUtil.getListType(listTypeId).getName();
			}
			catch (Exception e) {
			}
		}

		for (String option: options) {
		%>

			<aui:option label="<%= option %>" selected="<%= selected.equals(option) %>" value="<%= option %>" />

		<%
		}
		%>

		</aui:select>
	</c:otherwise>
</c:choose>

<%
}
%>