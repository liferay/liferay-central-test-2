<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
String tabs1 = layoutDisplayContext.getTabs1();

String redirect = ParamUtil.getString(request, "redirect");
String closeRedirect = ParamUtil.getString(request, "closeRedirect");
String backURL = ParamUtil.getString(request, "backURL", redirect);

if (portletName.equals(PortletKeys.LAYOUTS_ADMIN) || portletName.equals(PortletKeys.MY_ACCOUNT)) {
	portletDisplay.setURLBack(backURL);
}

Group selGroup = layoutDisplayContext.getSelGroup();

Group liveGroup = layoutDisplayContext.getLiveGroup();
Group stagingGroup = layoutDisplayContext.getStagingGroup();
Group group = layoutDisplayContext.getGroup();

long groupId = layoutDisplayContext.getGroupId();

long liveGroupId = layoutDisplayContext.getLiveGroupId();

long stagingGroupId = layoutDisplayContext.getStagingGroupId();

long selPlid = layoutDisplayContext.getSelPlid();

boolean privateLayout = layoutDisplayContext.isPrivateLayout();
long layoutId = layoutDisplayContext.getLayoutId();

UnicodeProperties groupTypeSettings = layoutDisplayContext.getGroupTypeSettings();

UnicodeProperties liveGroupTypeSettings = liveGroup.getTypeSettingsProperties();

Layout selLayout = layoutDisplayContext.getSelLayout();

Organization organization = layoutDisplayContext.getOrganization();
User selUser = layoutDisplayContext.getSelUser();
UserGroup userGroup = layoutDisplayContext.getUserGroup();

String tabs1Names = layoutDisplayContext.getTabs1Names();

LayoutSet selLayoutSet = layoutDisplayContext.getSelLayoutSet();

String pagesName = layoutDisplayContext.getPagesName();

String rootNodeName = layoutDisplayContext.getRootNodeName();

List<LayoutDescription> layoutDescriptions = layoutDisplayContext.getLayoutDescriptions();

request.setAttribute(WebKeys.LAYOUT_DESCRIPTIONS, layoutDescriptions);
%>

<liferay-portlet:renderURL varImpl="redirectURL">
	<portlet:param name="struts_action" value="/layouts_admin/edit_layouts" />
	<portlet:param name="tabs1" value="<%= tabs1 %>" />
	<portlet:param name="redirect" value="<%= redirect %>" />

	<c:if test="<%= (portletName.equals(PortletKeys.LAYOUTS_ADMIN) || portletName.equals(PortletKeys.MY_ACCOUNT) || portletName.equals(PortletKeys.USERS_ADMIN)) %>">
		<portlet:param name="backURL" value="<%= backURL %>" />
	</c:if>

	<portlet:param name="groupId" value="<%= String.valueOf(liveGroupId) %>" />
</liferay-portlet:renderURL>

<%
request.setAttribute("edit_pages.jsp-group", group);
request.setAttribute("edit_pages.jsp-selGroup", selGroup);
request.setAttribute("edit_pages.jsp-liveGroup", liveGroup);
request.setAttribute("edit_pages.jsp-stagingGroup", stagingGroup);
request.setAttribute("edit_pages.jsp-groupId", new Long(groupId));
request.setAttribute("edit_pages.jsp-liveGroupId", new Long(liveGroupId));
request.setAttribute("edit_pages.jsp-stagingGroupId", new Long(stagingGroupId));
request.setAttribute("edit_pages.jsp-selPlid", new Long(selPlid));
request.setAttribute("edit_pages.jsp-privateLayout", new Boolean(privateLayout));
request.setAttribute("edit_pages.jsp-layoutId", new Long(layoutId));
request.setAttribute("edit_pages.jsp-groupTypeSettings", groupTypeSettings);
request.setAttribute("edit_pages.jsp-liveGroupTypeSettings", liveGroupTypeSettings);
request.setAttribute("edit_pages.jsp-selLayout", selLayout);
request.setAttribute("edit_pages.jsp-selLayoutSet", selLayoutSet);

request.setAttribute("edit_pages.jsp-rootNodeName", rootNodeName);

request.setAttribute("edit_pages.jsp-redirectURL", redirectURL);
%>