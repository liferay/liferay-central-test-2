<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
String tabs1 = layoutsAdminDisplayContext.getTabs1();

String redirect = layoutsAdminDisplayContext.getRedirect();
String closeRedirect = ParamUtil.getString(request, "closeRedirect");
String backURL = layoutsAdminDisplayContext.getBackURL();

if (portletName.equals(PortletKeys.LAYOUTS_ADMIN) || portletName.equals(PortletKeys.MY_ACCOUNT)) {
	portletDisplay.setURLBack(backURL);
}

Group selGroup = layoutsAdminDisplayContext.getSelGroup();

Group liveGroup = layoutsAdminDisplayContext.getLiveGroup();
Group stagingGroup = layoutsAdminDisplayContext.getStagingGroup();
Group group = layoutsAdminDisplayContext.getGroup();

long groupId = layoutsAdminDisplayContext.getGroupId();

long liveGroupId = layoutsAdminDisplayContext.getLiveGroupId();

long stagingGroupId = layoutsAdminDisplayContext.getStagingGroupId();

long selPlid = layoutsAdminDisplayContext.getSelPlid();

boolean privateLayout = layoutsAdminDisplayContext.isPrivateLayout();
long layoutId = layoutsAdminDisplayContext.getLayoutId();

UnicodeProperties groupTypeSettings = layoutsAdminDisplayContext.getGroupTypeSettings();

UnicodeProperties liveGroupTypeSettings = liveGroup.getTypeSettingsProperties();

Layout selLayout = layoutsAdminDisplayContext.getSelLayout();

Organization organization = layoutsAdminDisplayContext.getOrganization();
User selUser = layoutsAdminDisplayContext.getSelUser();
UserGroup userGroup = layoutsAdminDisplayContext.getUserGroup();

String tabs1Names = layoutsAdminDisplayContext.getTabs1Names();

LayoutSet selLayoutSet = layoutsAdminDisplayContext.getSelLayoutSet();

String pagesName = layoutsAdminDisplayContext.getPagesName();

String rootNodeName = layoutsAdminDisplayContext.getRootNodeName();

List<LayoutDescription> layoutDescriptions = layoutsAdminDisplayContext.getLayoutDescriptions();

request.setAttribute(WebKeys.LAYOUT_DESCRIPTIONS, layoutDescriptions);

PortletURL redirectURL = layoutsAdminDisplayContext.getRedirectURL();
%>

<%
request.setAttribute("edit_pages.jsp-group", group);
request.setAttribute("edit_pages.jsp-selGroup", selGroup);
request.setAttribute("edit_pages.jsp-liveGroup", liveGroup);
request.setAttribute("edit_pages.jsp-stagingGroup", stagingGroup);
request.setAttribute("edit_pages.jsp-groupId", new Long(groupId));
request.setAttribute("edit_pages.jsp-liveGroupId", new Long(liveGroupId));
request.setAttribute("edit_pages.jsp-stagingGroupId", new Long(stagingGroupId));
request.setAttribute("edit_pages.jsp-selPlid", new Long(selPlid));
request.setAttribute("edit_pages.jsp-privateLayout", new Boolean(privateLayout));
request.setAttribute("edit_pages.jsp-layoutId", new Long(layoutId));
request.setAttribute("edit_pages.jsp-groupTypeSettings", groupTypeSettings);
request.setAttribute("edit_pages.jsp-liveGroupTypeSettings", liveGroupTypeSettings);
request.setAttribute("edit_pages.jsp-selLayout", selLayout);
request.setAttribute("edit_pages.jsp-selLayoutSet", selLayoutSet);

request.setAttribute("edit_pages.jsp-rootNodeName", rootNodeName);

request.setAttribute("edit_pages.jsp-redirectURL", redirectURL);
%>