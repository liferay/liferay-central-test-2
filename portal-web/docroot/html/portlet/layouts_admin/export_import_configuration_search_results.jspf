<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
ExportImportConfigurationSearchTerms searchTerms = (ExportImportConfigurationSearchTerms)searchContainer.getSearchTerms();

BaseModelSearchResult<ExportImportConfiguration> baseModelSearchResult = null;

Sort sort = SortFactoryUtil.getSort(ExportImportConfiguration.class, searchContainer.getOrderByCol(), searchContainer.getOrderByType());

if (searchTerms.isAdvancedSearch()) {
	baseModelSearchResult = ExportImportConfigurationLocalServiceUtil.searchExportImportConfigurations(company.getCompanyId(), groupId, exportImportConfigurationType, searchTerms.getName(), searchTerms.getDescription(), searchTerms.isAndOperator(), searchContainer.getStart(), searchContainer.getEnd(), sort);
}
else {
	baseModelSearchResult = ExportImportConfigurationLocalServiceUtil.searchExportImportConfigurations(company.getCompanyId(), groupId, exportImportConfigurationType, searchTerms.getKeywords(), searchContainer.getStart(), searchContainer.getEnd(), sort);
}

results = baseModelSearchResult.getBaseModels();

searchContainer.setResults(results);
searchContainer.setTotal(baseModelSearchResult.getLength());
%>