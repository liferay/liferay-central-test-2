<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<aui:button-row>
	<aui:button onClick='<%= renderResponse.getNamespace() + "addSearchProvider();" %>' value='<%= LanguageUtil.format(request, "add-x-as-a-search-provider", HtmlUtil.escape(company.getName()), false) %>' />
</aui:button-row>

<%
List<String> modelResources = new ArrayList<String>();

LinkedHashMap<String, Object> groupParams = new LinkedHashMap<String, Object>();

groupParams.put("active", Boolean.FALSE);

int inactiveGroupsCount = GroupLocalServiceUtil.searchCount(themeDisplay.getCompanyId(), null, null, groupParams);

List<OpenSearch> openSearchInstances = OpenSearchRegistryUtil.getOpenSearchInstances();

Iterator<OpenSearch> itr = openSearchInstances.iterator();

while (itr.hasNext()) {
	OpenSearch openSearch = itr.next();

	if (!openSearch.isEnabled()) {
		itr.remove();

		continue;
	}

	modelResources.add(ResourceActionsUtil.getModelResource(locale, openSearch.getClassName()));
}

String primarySearch = ParamUtil.getString(request, "primarySearch");

if (Validator.isNotNull(primarySearch)) {
	portalPreferences.setValue(PortletKeys.SEARCH, "primary-search", primarySearch);
}
else {
	primarySearch = portalPreferences.getValue(PortletKeys.SEARCH, "primary-search", StringPool.BLANK);
}

if (Validator.isNotNull(primarySearch)) {
	for (int i = 0; i < openSearchInstances.size(); i++) {
		OpenSearch openSearch = openSearchInstances.get(i);

		if (primarySearch.equals(openSearch.getClassName())) {
			if (i != 0) {
				openSearchInstances.remove(i);

				openSearchInstances.add(0, openSearch);
			}

			break;
		}
	}
}
%>

<div class="search-msg">
	<c:choose>
		<c:when test="<%= modelResources.isEmpty() %>">
			<liferay-ui:message key="no-portlets-were-searched" />
		</c:when>
		<c:otherwise>
			<liferay-ui:message key="searched" /> <%= StringUtil.merge(modelResources, StringPool.COMMA_AND_SPACE) %>
		</c:otherwise>
	</c:choose>
</div>

<%
int totalResults = 0;

for (int i = 0; i < openSearchInstances.size(); i++) {
	OpenSearch openSearch = openSearchInstances.get(i);

	//List<String> headerNames = new ArrayList<String>();

	//headerNames.add("#");
	//headerNames.add("summary");
	//headerNames.add("tags");
	//headerNames.add("score");

	SearchContainer openSearchSearchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM + i, 5, portletURL, null, LanguageUtil.format(request, "no-results-were-found-that-matched-the-keywords-x", "<strong>" + HtmlUtil.escape(keywords) + "</strong>", false));

	if (Validator.isNotNull(primarySearch) && primarySearch.equals(openSearch.getClassName())) {
		int delta = ParamUtil.getInteger(request, SearchContainer.DEFAULT_DELTA_PARAM + i);

		if (delta > 0) {
			openSearchSearchContainer.setDelta(delta);
		}
		else {
			openSearchSearchContainer.setDelta(SearchContainer.DEFAULT_DELTA);
		}
	}

	boolean filterSearch = false;

	if (openSearch instanceof HitsOpenSearchImpl) {
		HitsOpenSearchImpl hitsOpenSearchImpl = (HitsOpenSearchImpl)openSearch;

		Indexer hitsOpenSearchImplIndexer = hitsOpenSearchImpl.getIndexer();

		filterSearch = hitsOpenSearchImplIndexer.isFilterSearch();
	}

	List resultRows = new ArrayList();

	try {
		String xml = openSearch.search(request, groupId, themeDisplay.getUserId(), keywords, openSearchSearchContainer.getCur(), openSearchSearchContainer.getDelta(), format);

		xml = XMLFormatter.stripInvalidChars(xml);

		com.liferay.portal.kernel.xml.Document document = SAXReaderUtil.read(xml);

		Element rootElement = document.getRootElement();

		queryTerms = StringUtil.split(rootElement.elementText("queryTerms"), StringPool.COMMA_AND_SPACE);

		List<Element> entries = rootElement.elements("entry");

		int openSearchSearchContainerTotal = GetterUtil.getInteger(rootElement.elementText(OpenSearchUtil.getQName("totalResults", OpenSearchUtil.OS_NAMESPACE)));

		resultRows = openSearchSearchContainer.getResultRows();

		for (int j = 0; j < entries.size(); j++) {
			try {
				Element element = entries.get(j);

				ResultRow row = new ResultRow(document, String.valueOf(j), j);

				// Position

				//row.addText(SearchEntry.DEFAULT_ALIGN, "top", openSearchSearchContainer.getStart() + j + 1 + StringPool.PERIOD);

				// Summary

				String entryTitle = element.elementText("title");
				String summary = element.elementText("summary");

				// Group id

				long entryScopeGroupId = GetterUtil.getLong(element.elementText(OpenSearchUtil.getQName("scopeGroupId", OpenSearchUtil.LIFERAY_NAMESPACE)));

				if (Validator.isNotNull(entryScopeGroupId) && (inactiveGroupsCount > 0)) {
					Group entryGroup = GroupServiceUtil.getGroup(entryScopeGroupId);

					if (entryGroup.isLayout()) {
						entryGroup = GroupLocalServiceUtil.getGroup(entryGroup.getParentGroupId());
					}

					if (!entryGroup.isActive()) {
						openSearchSearchContainerTotal--;

						continue;
					}
				}

				PortletURL viewFullContentURL = renderResponse.createRenderURL();

				viewFullContentURL.setParameter("struts_action", "/search/view_content");
				viewFullContentURL.setParameter("redirect", currentURL);
				viewFullContentURL.setPortletMode(PortletMode.VIEW);
				viewFullContentURL.setWindowState(WindowState.MAXIMIZED);

				StringBundler rowSB = new StringBundler();

				rowSB.append("<a class=\"entry-title\" href=\"");
				rowSB.append(viewFullContentURL.toString());
				rowSB.append("\">");
				rowSB.append(SearchUtil.highlight(HtmlUtil.escape(entryTitle), queryTerms));
				rowSB.append("</a>");

				if (Validator.isNotNull(summary)) {
					rowSB.append("<br />");
					rowSB.append(SearchUtil.highlight(HtmlUtil.escape(summary), queryTerms));
				}

				rowSB.append("<br />");

				// Tags

				String tagsString = element.elementText("tags");

				tagsString = tagsString.replaceAll("[\\[\\]]","");

				String[] tags = StringUtil.split(tagsString);

				String[] tagsQueryTerms = queryTerms;

				if (StringUtil.startsWith(keywords, Field.ASSET_TAG_NAMES + StringPool.COLON)) {
					tagsQueryTerms = new String[] {StringUtil.replace(keywords, Field.ASSET_TAG_NAMES + StringPool.COLON, StringPool.BLANK)};
				}

				for (int k = 0; k < tags.length; k++) {
					String tag = tags[k];

					String newKeywords = tag.trim();

					if (newKeywords.matches(".+\\s.+")) {
						newKeywords = StringPool.QUOTE + tag + StringPool.QUOTE;
					}

					PortletURL tagURL = PortletURLUtil.clone(portletURL, renderResponse);

					tagURL.setParameter("keywords", Field.ASSET_TAG_NAMES + StringPool.COLON + newKeywords);
					tagURL.setParameter("format", format);

					if (k == 0) {
						rowSB.append("<div class=\"entry-tags\">");
						rowSB.append("<div class=\"taglib-asset-tags-summary\">");
					}

					rowSB.append("<a class=\"tag\" href=\"");
					rowSB.append(tagURL.toString());
					rowSB.append("\">");
					rowSB.append(SearchUtil.highlight(tag, tagsQueryTerms));
					rowSB.append("</a>");

					if ((k + 1) == tags.length) {
						rowSB.append("</div>");
						rowSB.append("</div>");
					}
				}

				row.addText(rowSB.toString());

				// Ratings

				//String ratings = element.elementText("ratings");

				//row.addText(ratings);

				// Score

				//String score = element.elementText(OpenSearchUtil.getQName("score", OpenSearchUtil.RELEVANCE_NAMESPACE));

				//row.addText(score);

				// Add result row

				resultRows.add(row);
			}
			catch (Exception e) {
				_log.error("Error retrieving individual search result of type " + openSearch.getClassName(), e);

				openSearchSearchContainerTotal--;
			}
		}

		openSearchSearchContainer.setTotal(openSearchSearchContainerTotal);
	}
	catch (Exception e) {
		_log.error("Error displaying content of type " + openSearch.getClassName(), e);
	}
%>

	<c:if test="<%= !resultRows.isEmpty() %>">

		<%
		totalResults = totalResults + openSearchSearchContainer.getTotal();
		%>

		<div class="section-title">
			<c:choose>

				<%
				// When the total is <= to the delta, we know the result is accurate
				// since we've filtered the entire result set. Otherwise, we simply
				// indicate that there are possibly many more. (ï¿½ la Google)
				%>

				<c:when test="<%= filterSearch && (openSearchSearchContainer.getTotal() > openSearchSearchContainer.getDelta())%>">
					<%= ResourceActionsUtil.getModelResource(locale, openSearch.getClassName()) %> (<%= openSearchSearchContainer.getDelta()%> <liferay-ui:message key="of-many" />)
				</c:when>
				<c:otherwise>
					<%= ResourceActionsUtil.getModelResource(locale, openSearch.getClassName()) %> (<%= openSearchSearchContainer.getTotal() %>)
				</c:otherwise>
			</c:choose>
		</div>

		<liferay-ui:search-iterator paginate="<%= false %>" searchContainer="<%= openSearchSearchContainer %>" />

		<c:choose>
			<c:when test="<%= (openSearchSearchContainer.getTotal() == resultRows.size()) || (Validator.isNotNull(primarySearch) && openSearch.getClassName().equals(primarySearch)) %>">
				<div class="search-paginator-container">
					<liferay-ui:search-paginator searchContainer="<%= openSearchSearchContainer %>" type="more" />
				</div>
			</c:when>
			<c:otherwise>
				<div class="more-results">
					<portlet:renderURL var="moreResultsURL">
						<portlet:param name="struts_action" value="/search/search" />
						<portlet:param name="groupId" value="<%= String.valueOf(groupId) %>" />
						<portlet:param name="primarySearch" value="<%= openSearch.getClassName() %>" />
						<portlet:param name="keywords" value="<%= HtmlUtil.escape(keywords) %>" />
						<portlet:param name="format" value="<%= format %>" />
					</portlet:renderURL>

					<aui:a href="<%= moreResultsURL %>">
						<liferay-ui:message arguments="<%= ResourceActionsUtil.getModelResource(locale, openSearch.getClassName()) %>" key="more-x-results" translateArguments="<%= false %>" /> &raquo;
					</aui:a>
				</div>
			</c:otherwise>
		</c:choose>
	</c:if>

<%
}
%>

<c:if test="<%= totalResults == 0 %>">
	<div class="no-results">
		<%= LanguageUtil.format(request, "no-results-were-found-that-matched-the-keywords-x", "<strong>" + HtmlUtil.escape(keywords) + "</strong>", false) %>
	</div>
</c:if>

<%
String pageDescription = LanguageUtil.get(request, "search-results");

if (!modelResources.isEmpty()) {
	pageDescription = LanguageUtil.get(request, "searched") + StringPool.SPACE + StringUtil.merge(modelResources, StringPool.COMMA_AND_SPACE);
}

PortalUtil.setPageDescription(pageDescription, request);
%>