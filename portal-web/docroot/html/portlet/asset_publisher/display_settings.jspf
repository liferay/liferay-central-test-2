<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<aui:fieldset cssClass="general-display-settings">
	<c:if test="<%= !rootPortletId.equals(PortletKeys.HIGHEST_RATED_ASSETS) && !rootPortletId.equals(PortletKeys.MOST_VIEWED_ASSETS) %>">
		<aui:input helpMessage="show-add-content-button-help" name="preferences--showAddContentButton--" type="checkbox" value="<%= assetPublisherDisplayContext.isShowAddContentButton() %>" />
	</c:if>

	<div class="display-template">

		<%
		TemplateHandler templateHandler = TemplateHandlerRegistryUtil.getTemplateHandler(AssetEntry.class.getName());
		%>

		<liferay-ui:ddm-template-selector
			classNameId="<%= PortalUtil.getClassNameId(templateHandler.getClassName()) %>"
			displayStyle="<%= assetPublisherDisplayContext.getDisplayStyle() %>"
			displayStyleGroupId="<%= assetPublisherDisplayContext.getDisplayStyleGroupId() %>"
			displayStyles="<%= Arrays.asList(PropsValues.ASSET_PUBLISHER_DISPLAY_STYLES) %>"
			label="display-template"
			refreshURL="<%= configurationRenderURL.toString() %>"
		/>
	</div>

	<aui:select cssClass="hidden-field abstract-length" helpMessage="abstract-length-key-help" name="preferences--abstractLength--" value="<%= assetPublisherDisplayContext.getAbstractLength() %>">
		<aui:option label="100" />
		<aui:option label="200" />
		<aui:option label="300" />
		<aui:option label="400" />
		<aui:option label="500" />
	</aui:select>

	<aui:input cssClass="hidden-field show-asset-title" name="preferences--showAssetTitle--" type="checkbox" value="<%= assetPublisherDisplayContext.isShowAssetTitle() %>" />

	<aui:input cssClass="hidden-field show-context-link" name="preferences--showContextLink--" type="checkbox" value="<%= assetPublisherDisplayContext.isShowContextLink() %>" />

	<aui:input cssClass="hidden-field show-extra-info" name="preferences--showExtraInfo--" type="checkbox" value="<%= assetPublisherDisplayContext.isShowExtraInfo() %>" />

	<aui:select cssClass="hidden-field asset-link-behavior" name="preferences--assetLinkBehavior--">
		<aui:option label="show-full-content" selected="<%= assetPublisherDisplayContext.isAssetLinkBehaviorShowFullContent() %>" value="showFullContent" />
		<aui:option label="view-in-context" selected="<%= assetPublisherDisplayContext.isAssetLinkBehaviorViewInPortlet() %>" value="viewInPortlet" />
	</aui:select>

	<aui:select helpMessage="number-of-items-to-display-help" label="number-of-items-to-display" name="preferences--delta--">

		<%
		int[] deltas = {1, 2, 3, 4, 5, 10, 15, 20, 25, 30, 40, 50, 60, 70, 80, 90, 100};

		for (int currentDelta: deltas) {
		%>

			<aui:option label="<%= currentDelta %>" selected="<%= (assetPublisherDisplayContext.getDelta() == currentDelta) %>" />

		<%
		}
		%>

	</aui:select>

	<aui:select name="preferences--paginationType--">
		<aui:option label="none" selected="<%= assetPublisherDisplayContext.isPaginationTypeNone() %>" />
		<aui:option label="simple" selected="<%= assetPublisherDisplayContext.isPaginationTypeSimple() %>" />
		<aui:option label="regular" selected="<%= assetPublisherDisplayContext.isPaginationTypeRegular() %>" />
	</aui:select>

	<c:if test="<%= !PropsValues.ASSET_PUBLISHER_SEARCH_WITH_INDEX %>">
		<c:if test="<%= assetPublisherDisplayContext.isSelectionStyleDynamic() %>">
			<aui:input label="exclude-assets-with-0-views" name="preferences--excludeZeroViewCount--" type="checkbox" value="<%= assetPublisherDisplayContext.isExcludeZeroViewCount() %>" />
		</c:if>
	</c:if>

	<%
	String helpMessage1 = "<em>" + LanguageUtil.format(pageContext, "content-related-to-x", StringPool.DOUBLE_PERIOD, false) + "</em>";
	String helpMessage2 = "<em>" + LanguageUtil.format(pageContext, "content-with-tag-x", StringPool.DOUBLE_PERIOD, false) + "</em>";
	%>

	<aui:input helpMessage='<%= LanguageUtil.format(pageContext, "such-as-x-or-x", new Object[] {helpMessage1, helpMessage2}, false) %>' name="preferences--showMetadataDescriptions--" type="checkbox" value="<%= assetPublisherDisplayContext.isShowMetadataDescriptions() %>" />

	<aui:input name="preferences--showAvailableLocales--" type="checkbox" value="<%= assetPublisherDisplayContext.isShowAvailableLocales() %>" />

	<aui:input helpMessage="set-as-the-default-asset-publisher-for-this-page-help" label="set-as-the-default-asset-publisher-for-this-page" name="defaultAssetPublisher" type="checkbox" value="<%= AssetUtil.isDefaultAssetPublisher(layout, portletDisplay.getId(), portletResource) %>" />

	<aui:field-wrapper helpMessage='<%= !assetPublisherDisplayContext.isOpenOfficeServerEnabled() ? "enabling-openoffice-integration-provides-document-conversion-functionality" : StringPool.BLANK %>' label="enable-conversion-to">
		<div class="field-row">

			<%
			String[] conversions = DocumentConversionUtil.getConversions("html");

			for (String conversion : conversions) {
			%>

			<aui:field-wrapper inlineField="<%= true %>" inlineLabel="left" label="<%= StringUtil.toUpperCase(conversion) %>" name='<%= "extensions" + conversion %>'>
				<input <%= ArrayUtil.contains(assetPublisherDisplayContext.getExtensions(), conversion) ? "checked": "" %> <%= !assetPublisherDisplayContext.isOpenOfficeServerEnabled() ? "disabled" : "" %> id="<portlet:namespace />extensions<%= conversion %>" name="<portlet:namespace />extensions" type="checkbox" value="<%= conversion %>" />
			</aui:field-wrapper>

			<%
			}
			%>

		</div>
	</aui:field-wrapper>

	<aui:input name="preferences--enablePrint--" type="checkbox" value="<%= assetPublisherDisplayContext.isEnablePrint() %>" />

	<aui:input name="preferences--enableFlags--" type="checkbox" value="<%= assetPublisherDisplayContext.isEnableFlags() %>" />

	<c:if test="<%= assetPublisherDisplayContext.isShowEnablePermissions() %>">
		<aui:input name="preferences--enablePermissions--" type="checkbox" value="<%= assetPublisherDisplayContext.isEnablePermissions() %>" />
	</c:if>

	<c:choose>
		<c:when test="<%= rootPortletId.equals(PortletKeys.RELATED_ASSETS) %>">
			<aui:input name="preferences--enableRelatedAssets--" type="hidden" value="<%= assetPublisherDisplayContext.isEnableRelatedAssets() %>" />
		</c:when>
		<c:otherwise>
			<aui:input name="preferences--enableRelatedAssets--" type="checkbox" value="<%= assetPublisherDisplayContext.isEnableRelatedAssets() %>" />
		</c:otherwise>
	</c:choose>

	<aui:input name="preferences--enableRatings--" type="checkbox" value="<%= assetPublisherDisplayContext.isEnableRatings() %>" />

	<aui:input name="preferences--enableComments--" type="checkbox" value="<%= assetPublisherDisplayContext.isEnableComments() %>" />

	<aui:input name="preferences--enableCommentRatings--" type="checkbox" value="<%= assetPublisherDisplayContext.isEnableCommentRatings() %>" />

	<liferay-ui:social-bookmarks-settings
		displayPosition="<%= assetPublisherDisplayContext.getSocialBookmarksDisplayPosition() %>"
		displayStyle="<%= assetPublisherDisplayContext.getSocialBookmarksDisplayStyle() %>"
		enabled="<%= assetPublisherDisplayContext.isEnableSocialBookmarks() %>"
	/>

	<c:if test="<%= assetPublisherDisplayContext.isSelectionStyleManual() %>">
		<aui:input helpMessage="enable-tag-based-navigation-help" label="enable-tag-based-navigation" name="preferences--enableTagBasedNavigation--" type="checkbox" value="<%= assetPublisherDisplayContext.isEnableTagBasedNavigation() %>" />
	</c:if>
</aui:fieldset>

<aui:fieldset label="show-metadata">
	<br />

	<aui:input name="preferences--metadataFields--" type="hidden" />

	<aui:field-wrapper label="metadata-fields">

		<%

		// Left list

		List leftList = new ArrayList();

		String[] metadataFields = assetPublisherDisplayContext.getMetadataFields();

		for (int i = 0; i < metadataFields.length; i++) {
			String folderColumn = metadataFields[i];

			leftList.add(new KeyValuePair(folderColumn, LanguageUtil.get(pageContext, folderColumn)));
		}

		// Right list

		List rightList = new ArrayList();

		Arrays.sort(metadataFields);

		String[] allMetadataFields = new String[] {"create-date", "modified-date", "publish-date", "expiration-date", "priority", "author", "view-count", "categories", "tags"};

		for (String folderColumn : allMetadataFields) {
			if (Arrays.binarySearch(metadataFields, folderColumn) < 0) {
				rightList.add(new KeyValuePair(folderColumn, LanguageUtil.get(pageContext, folderColumn)));
			}
		}

		rightList = ListUtil.sort(rightList, new KeyValuePairComparator(false, true));
		%>

		<liferay-ui:input-move-boxes
			leftBoxName="currentMetadataFields"
			leftList="<%= leftList %>"
			leftReorder="true"
			leftTitle="current"
			rightBoxName="availableMetadataFields"
			rightList="<%= rightList %>"
			rightTitle="available"
		/>
	</aui:field-wrapper>
</aui:fieldset>

<aui:script use="aui-base">
	var selectDisplayStyle = A.one('#<portlet:namespace />displayStyle');

	function showHiddenFields () {
		var assetLinkBehavior = A.one('.asset-link-behavior');
		var hiddenFields = A.all('.hidden-field');
		var selectDisplayStyle = A.one('#<portlet:namespace />displayStyle');

		if (hiddenFields) {
			hiddenFields.get('parentNode').hide();
		}

		if (selectDisplayStyle) {
			var displayStyle = selectDisplayStyle.val();

			if (displayStyle == 'full-content') {
				var showAssetTitle = A.one('.show-asset-title');
				var showContextLink = A.one('.show-context-link');
				var showExtraInfo = A.one('.show-extra-info');

				if (showAssetTitle) {
					showAssetTitle.get('parentNode').show();
				}

				if (showContextLink) {
					showContextLink.get('parentNode').show();
				}

				if (showExtraInfo) {
					showExtraInfo.get('parentNode').show();
				}
			}
			else {
				if (displayStyle == 'abstracts') {
					var abstractLength = A.one('.abstract-length');

					if (abstractLength) {
						abstractLength.get('parentNode').show();
					}
				}

				if (assetLinkBehavior) {
					assetLinkBehavior.get('parentNode').show();
				}
			}
		}
	}

	showHiddenFields();

	if (selectDisplayStyle) {
		selectDisplayStyle.on('change', showHiddenFields);
	}
</aui:script>