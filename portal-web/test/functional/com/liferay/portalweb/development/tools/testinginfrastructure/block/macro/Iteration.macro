<definition>
	<command name="loopContainingContainsIfConditional" priority="5">
		<echo message="Test loops: loop containing contains if conditional" />

		<var name="letter" value="a" />

		<for list="abc,def,ghi,jkl" param="letters">
			<if>
				<contains string="${letters}" substring="${letter}" />
				<then>
					<execute macro="TestUtils#pass" />
				</then>
			</if>
		</for>
	</command>

	<command name="loopContainingEchoStatement" priority="5">
		<echo message="Test loops: loop containing echo statement" />

		<var name="list" value="4,5" />

		<for list="1,2,3,${list}" param="param">
			<echo message="${param}" />
		</for>

		<execute macro="TestUtils#pass" />
	</command>

	<command name="loopContainingEqualsIfConditional" priority="5">
		<echo message="Test loops: loop containing equals if conditional" />

		<var name="numberFound" value="" />
		<var name="numberToMatch" value="4" />

		<for list="1,2,3,4,5" param="number">
			<if>
				<equals arg1="${number}" arg2="${numberToMatch}" />
				<then>
					<var name="numberFound" value="${number}" />
				</then>
			</if>
		</for>

		<execute macro="TestUtils#assertEquals">
			<var name="actual" value="${numberFound}" />
			<var name="expected" value="${numberToMatch}" />
		</execute>
	</command>

	<command name="loopOnEmptyList" priority="5">
		<echo message="Test loops: loop on empty list" />

		<var name="list" value="" />

		<for list="${list}" param="param">
			<execute macro="TestUtils#fail" />
		</for>

		<execute macro="TestUtils#pass" />
	</command>

	<command name="nestedForLoops" priority="5">
		<echo message="Test loops: checking to make sure that you can have nested loops" />

		<var name="string" value="" />

		<for list="1,2,3" param="number">
			<for list="a,b,c" param="letter">
				<var name="string" value="${string}${number}${letter}," />
			</for>
		</for>

		<execute macro="TestUtils#assertEquals">
			<var name="actual" value="${string}" />
			<var name="expected" value="1a,1b,1c,2a,2b,2c,3a,3b,3c," />
		</execute>
	</command>
</definition>