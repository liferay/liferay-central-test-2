<definition default="assertClick" summary="Click on '${locator1}' that should have a value of '${value1}'">
	<command name="assertClick">
		<execute function="WaitForSPARefresh" />

		<if>
			<contains string="${locator1}" substring="/input" />
			<then>
				<execute function="AssertClick#assertValueClickAt" />
			</then>
			<else>
				<execute function="AssertClick#assertTextClickAt" />
			</else>
		</if>
	</command>

	<command name="assertPartialTextClickAt">
		<execute function="WaitForSPARefresh" />

		<execute function="AssertTextEquals#assertPartialText" />

		<execute selenium="mouseOver" />

		<execute selenium="clickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertPartialTextClickAtAndWait">
		<execute function="WaitForSPARefresh" />

		<execute function="AssertTextEquals#assertPartialText" />

		<execute selenium="mouseOver" />

		<execute selenium="clickAtAndWait" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertPartialTextClickAtCPNavigation">
		<execute function="WaitForSPARefresh" />

		<execute argument1="//script[contains(@src,'/liferay/message.js')]" selenium="waitForElementPresent" />

		<execute function="AssertClick#assertPartialTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClick">
		<execute function="WaitForSPARefresh" />

		<execute function="AssertTextEquals#assertText" />

		<execute selenium="mouseOver" />

		<execute selenium="click" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickAt">
		<execute function="WaitForSPARefresh" />

		<execute function="AssertTextEquals#assertText" />

		<execute selenium="mouseOver" />

		<execute selenium="clickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickAtAddApplication">
		<execute function="WaitForSPARefresh" />

		<execute argument1="//script[contains(@src,'/liferay/dockbar_add_application.js')] | //script[contains(@src,'/liferay/dockbar_add_page.js')] | //script[contains(@src,'liferay/toggler_interaction.js')]" selenium="waitForElementPresent" />

		<execute argument1="1000" selenium="pause" />

		<execute function="AssertClick#assertTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickAtAndPause">
		<execute function="WaitForSPARefresh" />

		<execute function="AssertTextEquals#assertText" />

		<execute selenium="mouseOver" />

		<execute selenium="clickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />

		<execute argument1="1000" selenium="pause" />
	</command>

	<command name="assertTextClickAtAndWait">
		<execute function="WaitForSPARefresh" />

		<execute function="AssertTextEquals#assertText" />

		<execute selenium="mouseOver" />

		<execute selenium="clickAtAndWait" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickAtAndWaitCKEditor">
		<execute function="WaitForSPARefresh" />

		<execute argument1="//a[contains(@class,'cke_button__unlink') and contains(@class,'cke_button_disabled')]" selenium="waitForVisible" />

		<execute function="AssertClick#assertTextClickAtAndWait" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickAtCKEditor">
		<execute function="WaitForSPARefresh" />

		<execute argument1="//a[contains(@class,'cke_button__unlink') and contains(@class,'cke_button_disabled')]" selenium="waitForVisible" />

		<execute argument1="1000" selenium="pause" />

		<execute function="AssertClick#assertTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickAtClickDockbar">
		<execute function="WaitForSPARefresh" />

		<execute argument1="1000" selenium="pause" />

		<execute argument1="//div[@id='_145_dockbar']" selenium="waitForElementPresent" />

		<execute selenium="mouseOver" />

		<execute argument1="//script[contains(@src,'/liferay/node.js')]" selenium="waitForElementPresent" />

		<execute function="AssertClick#assertTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickAtNavigation">
		<execute function="WaitForSPARefresh" />

		<execute argument1="1000" selenium="pause" />

		<if>
			<condition argument1="//a[@id='_145_addPanel']" selenium="isElementPresent" />
			<then>
				<execute argument1="//nav[@id='navigation']" selenium="clickAt" />

				<execute argument1="//script[contains(@src,'/aui/sortable/sortable')]" selenium="waitForElementPresent" />

				<execute selenium="mouseOver" />

				<execute argument1="//li[contains(@class,'lfr-nav-hover')]" selenium="waitForElementPresent" />
			</then>
		</if>

		<execute function="AssertClick#assertTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickAtViewHistory">
		<execute function="WaitForSPARefresh" />

		<execute argument1="//div[contains(@id,'articleToolbar')]/div/a[contains(.,'View History')]" selenium="waitForVisible" />

		<execute argument1="1000" selenium="pause" />

		<execute function="AssertClick#assertTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickAtWaitForLastScript">
		<execute function="WaitForSPARefresh" />

		<execute selenium="waitForVisible" />

		<execute function="AssertClick#assertTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />

		<execute argument1="xpath=(//script)[last()]" selenium="waitForElementPresent" />
	</command>

	<command name="assertTextClickNoMouseOver">
		<execute function="WaitForSPARefresh" />

		<execute function="AssertTextEquals#assertText" />

		<execute selenium="click" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickTagSelector">
		<execute function="WaitForSPARefresh" />

		<execute function="AssertClick#assertTextClick" />

		<execute function="SelectFrameTop" />

		<execute argument1="//div[contains(@class,'lfr-tag-selector-popup')]" selenium="waitForVisible" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertTextClickWaitForInlineCKEditor">
		<execute function="WaitForSPARefresh" />

		<if>
			<condition argument1="//div[contains(@class,'cke_editable_inline')]" selenium="isElementPresent" />
			<then>
				<execute argument1="//script[contains(@src,'http://localhost:8080/o/frontend-editors-web/ckeditor/plugins/wsc/lang/en.js')]" selenium="waitForElementPresent" />
			</then>
		</if>

		<execute function="AssertClick#assertTextClick" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertValueClickAt">
		<execute function="WaitForSPARefresh" />

		<execute function="AssertTextEquals#assertValue" />

		<execute selenium="mouseOver" />

		<execute selenium="clickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertValueClickAtAndWait">
		<execute function="WaitForSPARefresh" />

		<execute function="AssertTextEquals#assertValue" />

		<execute selenium="mouseOver" />

		<execute selenium="clickAtAndWait" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="assertValueClickAtAndWaitCKEditor">
		<execute function="WaitForSPARefresh" />

		<execute argument1="//a[contains(@class,'cke_button cke_button__cut') and contains(@class,'cke_button_disabled')]" selenium="waitForVisible" />

		<execute function="AssertClick#assertValueClickAtAndWait" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="pauseAssertPartialTextClickAt">
		<execute function="WaitForSPARefresh" />

		<execute argument1="1000" selenium="pause" />

		<execute function="AssertClick#assertPartialTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="pauseAssertTextClickAt">
		<execute function="WaitForSPARefresh" />

		<execute argument1="1000" selenium="pause" />

		<execute function="AssertClick#assertTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="pauseAssertTextClickAtAndWait">
		<execute function="WaitForSPARefresh" />

		<execute argument1="1000" selenium="pause" />

		<execute function="AssertClick#assertTextClickAtAndWait" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="pauseMakeVisibleAssertTextEqualsClickAt">
		<execute function="WaitForSPARefresh" />

		<execute argument1="1000" selenium="pause" />

		<execute selenium="makeVisible" />

		<execute selenium="waitForVisible" />

		<execute selenium="waitForText" />

		<execute selenium="mouseDown" />

		<execute argument1="1000" selenium="pause" />

		<execute selenium="mouseUp" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="waitForDMHomeAssertTextEqualsClick">
		<execute function="WaitForSPARefresh" />

		<execute argument1="//div[contains(@id,'documentLibraryContainer')]" selenium="waitForElementPresent" />

		<execute argument1="1500" selenium="pause" />

		<execute function="AssertClick#assertTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>

	<command name="waitForNodeScriptAssertTextEqualsClick">
		<execute function="WaitForSPARefresh" />

		<execute argument1="//script[contains(@src,'/liferay/node.js')]" selenium="waitForElementPresent" />

		<execute function="AssertClick#assertTextClickAt" />

		<execute selenium="assertJavaScriptErrors" />

		<execute selenium="assertLiferayErrors" />
	</command>
</definition>