<html>
<head>
<title>PortalSettingsAuthentication</title>
</head>
<body>
<table cellpadding="1" cellspacing="1" border="1">
<thead>
<tr><td rowspan="1" colspan="3">PortalSettingsAuthentication</td></tr>
</thead>
<tbody>
<tr>
	<td></td>
	<td></td>
	<td></td>
</tr>
<!--AUTHENTICATION_GENERAL-->
<tr>
	<td>AUTHENTICATION_GENERAL_ALLOW_USERS_TO_AUTOMATICALLY_LOGIN_CHECKBOX</td>
	<td>//input[contains(@id,'company-security-auto-login')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_GENERAL_ALLOW_USERS_TO_REQUEST_FORGOTTEN_PASSWORDS_CHECKBOX</td>
	<td>//input[contains(@id,'company-security-send-password')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_GENERAL_ALLOW_USERS_TO_REQUEST_PASSWORD_RESET_LINKS_CHECKBOX</td>
	<td>//input[contains(@id,'company-security-send-password-reset-link')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_GENERAL_ALLOW_STRANGERS_TO_CREATE_ACCOUNTS_CHECKBOX</td>
	<td>//input[contains(@id,'company-security-strangers')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_GENERAL_ALLOW_STRANGERS_TO_CREATE_ACCOUNTS_WITH_A_COMPANY_EMAIL_ADDRESS_CHECKBOX</td>
	<td>//input[contains(@id,'company-security-strangers-with-mx')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_GENERAL_REQUIRE_STRANGERS_TO_VERIFY_THEIR_EMAIL_ADDRESS_CHECKBOX</td>
	<td>//input[contains(@id,'company-security-strangers-verify')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_GENERAL_HOW_DO_USERS_AUTHENTICATE_SELECT</td>
	<td>//select[contains(@id,'company-security-auth-type')]</td>
	<td></td>
</tr>
<tr>
	<td></td>
	<td></td>
	<td></td>
</tr>
<!--AUTHENTICATION_CAS-->
<tr>
	<td>AUTHENTICATION_CAS_ENABLED_CHECKBOX</td>
	<td>//input[contains(@name,'cas_enabled')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_IMPORT_FROM_LDAP_CHECKBOX</td>
	<td>//input[contains(@name,'cas_importFromLDAP')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_LOGIN_URL_FIELD</td>
	<td>//input[contains(@name,'cas_loginURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_LOGIN_URL_HEADER</td>
	<td>//label[contains(.,'CAS server login URL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_LOGOUT_URL_FIELD</td>
	<td>//input[contains(@name,'cas_logoutURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_LOGOUT_URL_HEADER</td>
	<td>//label[contains(.,'CAS server logout URL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_NO_SUCH_USER_REDIRECT_URL_FIELD</td>
	<td>//input[contains(@name,'cas_noSuchUserRedirectURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_NO_SUCH_USER_REDIRECT_URL_HEADER</td>
	<td>//label[contains(@for,'noSuchUserRedirectU')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_SERVER_NAME_FIELD</td>
	<td>//input[contains(@name,'cas_serverName')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_SERVER_NAME_HEADER</td>
	<td>//label[contains(@for,'serverNa')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_SERVER_URL_FIELD</td>
	<td>//input[contains(@name,'cas_serverURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_SERVER_URL_HEADER</td>
	<td>//label[following-sibling::input[contains(@name,'cas_serverURL')]]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_SERVICE_URL_FIELD</td>
	<td>//input[contains(@name,'cas_serviceURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_SERVICE_URL_HEADER</td>
	<td>//label[following-sibling::input[contains(@name,'cas_serviceURL')]]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_CAS_TEST_CAS_CONFIGURATION_BUTTON</td>
	<td>//button[contains(.,'Test CAS Configuration')]</td>
	<td></td>
</tr>
<tr>
	<td></td>
	<td></td>
	<td></td>
</tr>
<!--AUTHENTICATION_GOOGLE-->
<tr>
	<td>AUTHENTICATION_GOOGLE_ENABLED_CHECKBOX</td>
	<td>//input[contains(@name,'google_enabled')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_GOOGLE_CLIENT_ID</td>
	<td>//input[contains(@name,'google_clientId')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_GOOGLE_CLIENT_SECRET</td>
	<td>//input[contains(@name,'google_clientSecret')]</td>
	<td></td>
</tr>
<tr>
	<td></td>
	<td></td>
	<td></td>
</tr>
<!--AUTHENTICATION_FACEBOOK-->
<tr>
	<td>AUTHENTICATION_FACEBOOK_ENABLED_CHECKBOX</td>
	<td>//input[contains(@name,'facebook_enabled')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_FACEBOOK_APPLICATION_ID</td>
	<td>//input[contains(@name,'facebook_appId')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_FACEBOOK_APPLICATION_SECRET</td>
	<td>//input[contains(@name,'facebook_appSecre')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_FACEBOOK_GRAPH_URL</td>
	<td>//input[contains(@name,'facebook_graphURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_FACEBOOK_OAUTH_AUTHENTICATION_URL</td>
	<td>//input[contains(@name,'facebook_oauthAuthURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_FACEBOOK_OAUTH_TOKEN_URL</td>
	<td>//input[contains(@name,'facebook_oauthTokenURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_FACEBOOK_REDIRECT_URL</td>
	<td>//input[contains(@name,'facebook_oauthRedirectURL')]</td>
	<td></td>
</tr>
<tr>
	<td></td>
	<td></td>
	<td></td>
</tr>
<!--AUTHENTICATION_LDAP-->
<tr>
	<td>AUTHENTICATION_LDAP_ENABLED_CHECKBOX</td>
	<td>//input[contains(@name,'ldap--enabled')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_LDAP_REQUIRED_CHECKBOX</td>
	<td>//input[contains(@name,'ldap--required')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_LDAP_IMPORT_ENABLED_CHECKBOX</td>
	<td>//input[contains(@id,'ldapImportEnabled')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_LDAP_IMPORT_ON_STARTUP_ENABLED_CHECKBOX</td>
	<td>//input[contains(@id,'importOnStartup')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_LDAP_EXPORT_ENABLED_CHECKBOX</td>
	<td>//input[contains(@id,'ldapExportEnabled')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_LDAP_USE_LDAP_PASSWORD_POLICY_CHECKBOX</td>
	<td>//input[contains(@name,'ldap--passwordPolicyEnabled')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_LDAP_ADD_BUTTON</td>
	<td>//a[contains(@id,'addButton')]</td>
	<td></td>
</tr>
<tr>
	<td></td>
	<td></td>
	<td></td>
</tr>
<!--LDAP_SERVERS_TABLE-->
<tr>
	<td>LDAP_SERVERS_TABLE_LDAP_SERVER_ID</td>
	<td>//tr[contains(.,'${key_LDAPServerName}')]/td[1]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVERS_TABLE_NAME</td>
	<td>//tr[contains(.,'${key_LDAPServerName}')]/td[2]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVERS_TABLE_EDIT</td>
	<td>//tr[contains(.,'${key_LDAPServerName}')]/td[3]//span[.='Edit']/preceding-sibling::i</td>
	<td></td>
</tr>
<tr>
	<td></td>
	<td></td>
	<td></td>
</tr>
<!--LDAP_SERVER-->
<tr>
	<td>LDAP_SERVER_SERVER_NAME</td>
	<td>//input[contains(@name,'ldap--serverName')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_DEFAULT_VALUES_APACHE_DIRECTORY_SERVER_RADIO</td>
	<td>//input[@value='apache']</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_DEFAULT_VALUES_MICROSOFT_ACTIVE_DIRECTORY_SERVER_RADIO</td>
	<td>//input[@value='microsoft']</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_RESET_VALUES_BUTTON</td>
	<td>//button[contains(.,'Reset Values')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_CONNECTION_BASE_PROVIDER_URL_HEADER</td>
	<td>//label[contains(@for,'baseProviderURL')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_CONNECTION_BASE_PROVIDER_URL_FIELD</td>
	<td>//input[contains(@name,'ldap--baseProviderURL')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_CONNECTION_BASE_DN_HEADER</td>
	<td>//label[contains(@for,'baseDN')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_CONNECTION_BASE_DN_FIELD</td>
	<td>//input[contains(@name,'ldap--baseDN')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_CONNECTION_PRINCIPAL_HEADER</td>
	<td>//label[contains(@for,'securityPrincipal')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_CONNECTION_PRINCIPAL_FIELD</td>
	<td>//input[contains(@name,'ldap--securityPrincipal')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_CONNECTION_CREDENTIALS_HEADER</td>
	<td>//label[contains(@for,'securityCredential')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_CONNECTION_CREDENTIALS_FIELD</td>
	<td>//input[contains(@name,'ldap--securityCredential')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_TEST_LDAP_CONNECTION_BUTTON</td>
	<td>//button[contains(.,'Test LDAP Connection')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_TEST_LDAP_USERS_BUTTON</td>
	<td>//button[contains(.,'Test LDAP Users')]</td>
	<td></td>
</tr>
<tr>
	<td>LDAP_SERVER_TEST_LDAP_GROUPS_BUTTON</td>
	<td>//button[contains(.,'Test LDAP Groups')]</td>
	<td></td>
</tr>
<tr>
	<td></td>
	<td></td>
	<td></td>
</tr>
<!--AUTHENTICATION_NTLM-->
<tr>
	<td>AUTHENTICATION_NTLM_ENABLED_CHECKBOX</td>
	<td>//input[contains(@name,'ntlm_enabled')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_NTLM_DOMAIN_CONTROLLER_HEADER</td>
	<td>//label[contains(@for,'ntlm_domainController')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_NTLM_DOMAIN_CONTROLLER_FIELD</td>
	<td>//input[contains(@name,'ntlm_domainController')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_NTLM_DOMAIN_CONTROLLER_NAME_HEADER</td>
	<td>//label[contains(@for,'ntlm_domainControllerName')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_NTLM_DOMAIN_CONTROLLER_NAME_FIELD</td>
	<td>//input[contains(@name,'ntlm_domainControllerName')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_NTLM_DOMAIN_HEADER</td>
	<td>//label[contains(@for,'ntlm_domain') and .=' Domain ']</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_NTLM_DOMAIN_FIELD</td>
	<td>xpath=(//input[contains(@name,'ntlm_domain')])[3]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_NTLM_SERVICE_ACCOUNT_HEADER</td>
	<td>//label[contains(@for,'ntlm_serviceAccount')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_NTLM_SERVICE_ACCOUNT_FIELD</td>
	<td>//input[contains(@name,'ntlm_serviceAccount')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_NTLM_SERVICE_PASSWORD_HEADER</td>
	<td>//label[contains(@for,'ntlm_servicePassword')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_NTLM_SERVICE_PASSWORD_FIELD</td>
	<td>//input[contains(@name,'ntlm_servicePassword')]</td>
	<td></td>
</tr>
<tr>
	<td></td>
	<td></td>
	<td></td>
</tr>
<!--AUTHENTICATION_OPEN_ID-->
<tr>
	<td>AUTHENTICATION_OPEN_ID_ENABLED_CHECKBOX</td>
	<td>//input[contains(@name,'openid_enabled')]</td>
	<td></td>
</tr>
<tr>
	<td></td>
	<td></td>
	<td></td>
</tr>
<!--AUTHENTICATION_OPEN_SSO-->
<tr>
	<td>AUTHENTICATION_OPEN_SSO_ENABLED_CHECKBOX</td>
	<td>//input[contains(@name,'opensso_enabled')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_IMPORT_FROM_LDAP_CHECKBOX</td>
	<td>//input[contains(@name,'opensso_importFromLDAP')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_LOGIN_URL_HEADER</td>
	<td>//label[contains(@for,'loginU')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_LOGIN_URL_FIELD</td>
	<td>//input[contains(@name,'opensso_loginURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_LOGOUT_URL_HEADER</td>
	<td>//label[contains(@for,'logoutU')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_LOGOUT_URL_FIELD</td>
	<td>//input[contains(@name,'opensso_logoutURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_SERVICE_URL_HEADER</td>
	<td>//label[contains(@for,'serviceU')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_SERVICE_URL_FIELD</td>
	<td>//input[contains(@name,'opensso_serviceURL')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_SCREEN_NAME_ATTRIBUTE_HEADER</td>
	<td>//label[contains(@for,'screenNameAt')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_SCREEN_NAME_ATTRIBUTE_FIELD</td>
	<td>//input[contains(@name,'opensso_screenNameAttr')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_EMAIL_ADDRESS_ATTRIBUTE_HEADER</td>
	<td>//label[contains(@for,'emailAddressAt')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_EMAIL_ADDRESS_ATTRIBUTE_FIELD</td>
	<td>//input[contains(@name,'opensso_emailAddressAttr')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_FIRST_NAME_ATTRIBUTE_HEADER</td>
	<td>//label[contains(@for,'firstNameAt')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_FIRST_NAME_ATTRIBUTE_FIELD</td>
	<td>//input[contains(@name,'opensso_firstNameAttr')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_LAST_NAME_ATTRIBUTE_HEADER</td>
	<td>//label[contains(@for,'lastNameAt')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_LAST_NAME_ATTRIBUTE_FIELD</td>
	<td>//input[contains(@name,'opensso_lastNameAttr')]</td>
	<td></td>
</tr>
<tr>
	<td>AUTHENTICATION_OPEN_SSO_TEST_OPEN_SSO_CONFIGURATION_BUTTON</td>
	<td>//button[contains(.,'Test OpenSSO Configuration')]</td>
	<td></td>
</tr>
</tbody>
</table>
</body>
</html>