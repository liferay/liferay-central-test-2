<?xml version="1.0"?>
<workflow-definition xmlns="urn:liferay.com:liferay-workflow_6.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:liferay.com:liferay-workflow_6.1.0 http://www.liferay.com/dtd/liferay-workflow-definition_6_1_0.xsd">
	<name>Ticket Process</name>
	<description>
	</description>
	<version>1</version>
	<condition>
		<name>Passed QA</name>
		<metadata>
			<![CDATA[{"xy":[305,105]}]]>
		</metadata>
		<script>
			<![CDATA[
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import com.liferay.portal.model.Role;
				import com.liferay.portlet.dynamicdatalists.service.DDLRecordLocalServiceUtil
				import com.liferay.portal.service.RoleLocalServiceUtil;
				import com.liferay.portlet.dynamicdatalists.model.DDLRecord;
				import com.liferay.portlet.dynamicdatamapping.storage.Field;
				import com.liferay.portal.service.ServiceContext;
				import com.liferay.portal.kernel.json.JSONFactoryUtil;
				import com.liferay.portal.kernel.json.JSONArray;

				long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));

				ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);

				long ddlRecordId = GetterUtil.getLong(serviceContext.getAttribute("ddlRecordId"));

				DDLRecord ddlRecord = DDLRecordLocalServiceUtil.getRecord(ddlRecordId);

				Field field = ddlRecord.getField("status");

				String json = GetterUtil.getString(field.getValue());

				JSONArray jsonArray = JSONFactoryUtil.createJSONArray(json)

				String status = jsonArray.getString(0);

				if (status.equals("closed")) {
						returnValue = "Yes"
				} else {
						returnValue = "No"
				}

				]]>
		</script>
		<script-language>groovy</script-language>
		<transitions>
			<transition>
				<name>No</name>
				<target>Developer</target>
				<default>true</default>
			</transition>
			<transition>
				<name>Yes</name>
				<target>Project Manager Review</target>
				<default>false</default>
			</transition>
		</transitions>
	</condition>
	<fork>
		<name>Pass to QA</name>
		<metadata>
			<![CDATA[{"xy":[55,305]}]]>
		</metadata>
		<transitions>
			<transition>
				<name>Audit</name>
				<target>QA Management</target>
				<default>true</default>
			</transition>
			<transition>
				<name>Test</name>
				<target>QA</target>
				<default>false</default>
			</transition>
		</transitions>
	</fork>
	<join>
		<name>Join</name>
		<metadata>
			<![CDATA[{"xy":[305,405]}]]>
		</metadata>
		<transitions>
			<transition>
				<name>Pass QA</name>
				<target>Passed QA</target>
				<default>true</default>
			</transition>
		</transitions>
	</join>
	<state>
		<name>StartNode</name>
		<metadata>
			<![CDATA[{"xy":[65,10]}]]>
		</metadata>
		<initial>true</initial>
		<transitions>
			<transition>
				<name>Assign</name>
				<target>Developer</target>
				<default>true</default>
			</transition>
		</transitions>
	</state>
	<state>
		<name>EndNode</name>
		<metadata>
			<![CDATA[{"terminal":true,"xy":[185,10]}]]>
		</metadata>
		<actions>
			<action>
				<name>Approve</name>
				<description>Approve</description>
				<script>
	<![CDATA[Packages.com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil.updateStatus(Packages.com.liferay.portal.kernel.workflow.WorkflowConstants.toStatus("approved"), workflowContext);]]>
				</script>
				<script-language>javascript</script-language>
				<execution-type>onEntry</execution-type>
			</action>
		</actions>
	</state>
	<task>
		<name>Developer</name>
		<metadata>
			<![CDATA[{"xy":[50,100]}]]>
		</metadata>
		<assignments>
			<scripted-assignment>
				<script>
					<![CDATA[
						import com.liferay.portal.kernel.util.GetterUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;
						import com.liferay.portal.model.Role;
						import com.liferay.portlet.dynamicdatalists.service.DDLRecordLocalServiceUtil;
						import com.liferay.portal.service.RoleLocalServiceUtil;
						import com.liferay.portlet.dynamicdatalists.model.DDLRecord;
						import com.liferay.portlet.dynamicdatamapping.storage.Field;
						import com.liferay.portal.service.ServiceContext;
						import com.liferay.portal.kernel.json.JSONFactoryUtil;
						import com.liferay.portal.kernel.json.JSONArray;

						long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));

						ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);

						long ddlRecordId = GetterUtil.getLong(
						serviceContext.getAttribute("ddlRecordId"));

						DDLRecord ddlRecord = DDLRecordLocalServiceUtil.getRecord(ddlRecordId);

						Field field = ddlRecord.getField("component_name");

						String json = GetterUtil.getString(field.getValue());

						JSONArray jsonArray = JSONFactoryUtil.createJSONArray(json)

						String component = jsonArray.getString(0);

						roles = new ArrayList < Role > ();

						if (component.equals("Javascript")) {
							Role role = RoleLocalServiceUtil.getRole(companyId, "Javascript Developer");

							roles.add(role);
						} else if (component.equals("Kaleo")) {
							Role role = RoleLocalServiceUtil.getRole(companyId, "Kaleo Developer");roles.add(role);
						}

						user=null;

						]]>
				</script>
				<script-language>groovy</script-language>
			</scripted-assignment>
		</assignments>
		<transitions>
			<transition>
				<name>Submit</name>
				<target>Code Review</target>
				<default>true</default>
			</transition>
		</transitions>
	</task>
	<task>
		<name>QA Management</name>
		<metadata>
			<![CDATA[{"xy":[50,400]}]]>
		</metadata>
		<assignments>
			<roles>
				<role>
					<role-type>regular</role-type>
					<name>QA Manager</name>
					<auto-create>false</auto-create>
				</role>
			</roles>
		</assignments>
		<transitions>
			<transition>
				<name>ok</name>
				<target>Join</target>
				<default>true</default>
			</transition>
		</transitions>
	</task>
	<task>
		<name>QA</name>
		<metadata>
			<![CDATA[{"xy":[170,300]}]]>
		</metadata>
		<assignments>
			<roles>
				<role>
					<role-type>regular</role-type>
					<name>QA Engineer</name>
					<auto-create>false</auto-create>
				</role>
			</roles>
		</assignments>
		<transitions>
			<transition>
				<name>ok</name>
				<target>Join</target>
				<default>true</default>
			</transition>
		</transitions>
	</task>
	<task>
		<name>Project Manager Review</name>
		<metadata>
			<![CDATA[{"xy":[300,5]}]]>
		</metadata>
		<assignments>
			<roles>
				<role>
					<role-type>regular</role-type>
					<name>Project Manager</name>
					<auto-create>false</auto-create>
				</role>
			</roles>
		</assignments>
		<transitions>
			<transition>
				<name>Completed</name>
				<target>EndNode</target>
				<default>true</default>
			</transition>
		</transitions>
	</task>
	<task>
		<name>Code Review</name>
		<metadata>
			<![CDATA[{"xy":[50,200]}]]>
		</metadata>
		<assignments>
			<roles>
				<role>
					<role-type>regular</role-type>
					<name>Code Reviewer</name>
					<auto-create>false</auto-create>
				</role>
			</roles>
		</assignments>
		<transitions>
			<transition>
				<name>Pass</name>
				<target>Pass to QA</target>
				<default>true</default>
			</transition>
			<transition>
				<name>Rollback</name>
				<target>Developer</target>
				<default>false</default>
			</transition>
		</transitions>
	</task>
</workflow-definition>