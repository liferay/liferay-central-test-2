import com.liferay.gradle.util.GradleUtil

buildscript {
	repositories {
		if (!Boolean.getBoolean("maven.local.ignore")) {
			mavenLocal()
		}

		maven {
			url "http://cdn.repository.liferay.com/nexus/content/groups/public"
		}
	}

	dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.poshi.runner", version: "1.0.8"
	}
}

apply plugin: "com.liferay.poshi.runner"

poshiRunner {
	File poshiRunnerExtProperties = new File("portal-web/poshi-runner-ext.properties")

	if (poshiRunnerExtProperties.exists()) {
		project.ext.testProperties = new Properties()

		testProperties.load(new FileInputStream("portal-web/poshi-runner-ext.properties"))

		setPoshiProperties testProperties
	}

	version = "1.0.12"
}

repositories {
	if (!Boolean.getBoolean("maven.local.ignore")) {
		mavenLocal()
	}

	maven {
		url "http://cdn.repository.liferay.com/nexus/content/groups/public"
	}
}

File localPoshiDir = new File(buildDir, "poshi")

task copyLocalPoshi(type: GradleBuild)

copyLocalPoshi {
	configure(startParameter) {
		configureOnDemand = true
		gradleUserHomeDir = file("../.gradle")
		projectProperties = ["destinationDir": localPoshiDir]
	}

	dir = file("../modules/test/poshi-runner")
	tasks = ["deployWithDependencies"]
}

runPoshi {
	jvmArgs "-Dfile.encoding=UTF-8"
}

if (GradleUtil.getProperty(project, "local", false)) {
	dependencies {
		poshiRunner fileTree(localPoshiDir) {
			builtBy copyLocalPoshi
			include "*.jar"
		}
	}
}