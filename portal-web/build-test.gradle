import com.liferay.gradle.util.GradleUtil

buildscript {
	repositories {
		if (!Boolean.getBoolean("maven.local.ignore")) {
			mavenLocal()
		}

		maven {
			url "http://cdn.repository.liferay.com/nexus/content/groups/public"
		}
	}

	dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.poshi.runner", version: "1.0.7"
	}
}

apply plugin: "com.liferay.poshi.runner"

poshiRunner {
	if (project.hasProperty("componentNames")) {
		poshiProperty "component.names", project.properties["componentNames"]
	}

	poshiProperty "ignore.errors.file.name", "test-ignorable-error-lines.xml"

	if (project.hasProperty("portalProjectDir")) {
		poshiProperty "project.dir", project.properties["portalProjectDir"]
	}

	if (project.hasProperty("poshiTestName")) {
		poshiProperty "test.name", project.properties["poshiTestName"]
	}

	if (project.hasProperty("productNames")) {
		poshiProperty "product.names", project.properties["productNames"]
	}

	if (project.hasProperty("saveScreenshot")) {
		poshiProperty "save.screenshot", project.properties["saveScreenshot"]
	}

	if (project.hasProperty("seleniumLoggerEnabled")) {
		poshiProperty "selenium.logger.enabled", project.properties["seleniumLoggerEnabled"]
	}

	if (project.hasProperty("testBaseDirName")) {
		poshiProperty "test.base.dir.name", project.properties["testBaseDirName"]
	}

	if (project.hasProperty("testCaseAvailablePropertyNames")) {
		poshiProperty "test.case.available.property.names", project.properties["testCaseAvailablePropertyNames"]
	}

	if (project.hasProperty("testConsoleLogFileName")) {
		poshiProperty "test.console.log.file.name", project.properties["testConsoleLogFileName"]
	}

	if (project.hasProperty("testConsoleShutDownFileName")) {
		poshiProperty "test.console.shut.down.file.name", project.properties["testConsoleShutDownFileName"]
	}

	poshiProperty "test.dependencies.dir.name", "com/liferay/portalweb/dependencies"

	if (project.hasProperty("testSkipTearDown")) {
		poshiProperty "test.skip.tear.down", project.properties["testSkipTearDown"]
	}

	if (project.hasProperty("testPoshiWarningsFileName")) {
		poshiProperty "test.poshi.warnings.file.name", project.properties["testPoshiWarningsFileName"]
	}

	version = "1.0.12"
}

repositories {
	if (!Boolean.getBoolean("maven.local.ignore")) {
		mavenLocal()
	}

	maven {
		url "http://cdn.repository.liferay.com/nexus/content/groups/public"
	}
}

File localPoshiDir = new File(buildDir, "poshi")

task copyLocalPoshi(type: GradleBuild)

copyLocalPoshi {
	configure(startParameter) {
		configureOnDemand = true
		gradleUserHomeDir = file("../.gradle")
		projectProperties = ["destinationDir": localPoshiDir]
	}

	dir = file("../modules/test/poshi-runner")
	tasks = ["deployWithDependencies"]
}

runPoshi {
	jvmArgs "-Dfile.encoding=UTF-8"
}

if (GradleUtil.getProperty(project, "local", false)) {
	dependencies {
		poshiRunner fileTree(localPoshiDir) {
			builtBy copyLocalPoshi
			include "*.jar"
		}
	}
}