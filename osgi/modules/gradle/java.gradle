allprojects {
	repositories {
		mavenCentral()
	}
}

subprojects {
	apply from: "../../gradle/baseline.gradle"
	apply plugin: "java"

	ext.liferayProjectDir = "${rootDir}/../../.."

	sourceCompatibility = 1.6
	targetCompatibility = 1.6

	dependencies {
		compile files(["${liferayProjectDir}/portal-service/classes"])
		compile files(["${liferayProjectDir}/util-java/classes"])

		compile fileTree(
			dir:"${liferayProjectDir}/lib/development",
			includes: ["**/*.jar"]
		)

		compile fileTree(
			dir:"${liferayProjectDir}/lib/global",
			includes: ["**/*.jar"]
		)

		compile fileTree(
			dir:"${liferayProjectDir}/lib/portal",
			includes: ["**/*.jar"]
		)
	}

	jar {
		actions = []

		doLast {
			tasks.baseline.execute()
		}
	}

	task deploy(dependsOn: jar) << {
		if (project.hasProperty('deployDir') && (project.deployDir != null)) {
			def buildLibDir = new File("${projectDir}/build/libs")

			logger.quiet "Copying ${buildLibDir}/${project.name}.jar to " + project.deployDir + "."

			copy {
				from "${buildLibDir}/${project.name}.jar"
				into project.deployDir
			}
		}
		else {
			logger.quiet "Skipping deploy because ${project.name}\"s \"deployDir\" property is not set."
			logger.quiet "First, see if it\"s build.gradle file contains the property"
			logger.quiet "\"project.ext.deployDir\". Second, make sure to execute the deploy using Ant."
		}
	}
}