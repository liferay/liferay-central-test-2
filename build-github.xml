<?xml version="1.0"?>

<project name="portal-github" basedir="." default="test" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build-common.xml" />

	<fail message="Please set the property ${github.access.token}." unless="github.access.token" />
	<fail message="Please set the property ${github.repository}." unless="github.repository" />
	<fail message="Please set the property ${github.username}." unless="github.username" />

	<macrodef name="github-post">
		<attribute name="github.post.data" />
		<attribute name="github.post.url" />

		<sequential>
			<script classpathref="project.classpath" language="beanshell">
				<![CDATA[
					StringBuilder sb = new StringBuilder();

					sb.append("curl ");

					sb.append("--data '");
					sb.append(project.getProperty("github.post.data"));
					sb.append("' ");

					sb.append("--header \"Authorization: token ");
					sb.append(project.getProperty("github.access.token"));
					sb.append("\" ");

					sb.append("--request POST ");

					sb.append(project.getProperty("github.post.url"));

					project.setProperty("github.curl.command", sb.toString());
				]]>
			</script>

			<execute>
				${github.curl.command}
			</execute>
		</sequential>
	</macrodef>

	<macrodef name="github-post-comment">
		<attribute name="github.post.comment.body" />

		<sequential>
			<fail message="Please set the property ${github.pull.request.number}." unless="github.pull.request.number" />

			<propertyregex
				input="@{github.post.comment.body}"
				override="true"
				property="github.post.comment.body"
				regexp="&quot;"
				replace="\\&quot;"
			/>

			<script classpathref="project.classpath" language="beanshell">
				<![CDATA[
					StringBuilder sb = new StringBuilder();

					sb.append("{");

					sb.append("\"body\":\"");
					sb.append(project.getProperty("github.post.comment.body"));
					sb.append("\"");

					sb.append("}");

					project.setProperty("github.post.data", sb.toString());

					StringBuilder sb = new StringBuilder();

					sb.append("https://api.github.com/repos/");
					sb.append(project.getProperty("github.username"));
					sb.append("/");
					sb.append(project.getProperty("github.repository"));
					sb.append("/issues/");
					sb.append(project.getProperty("github.pull.request.number"));
					sb.append("/comments");

					project.setProperty("github.post.url", sb.toString());
				]]>
			</script>

			<github-post
				github.post.data="${github.post.data}"
				github.post.url="${github.post.url}"
			/>
		</sequential>
	</macrodef>

	<macrodef name="github-post-status">
		<attribute name="github.post.status.description" />
		<attribute name="github.post.status.state" />
		<attribute name="github.post.status.url" />

		<sequential>
			<fail message="Please set the property ${github.pull.request.git.id}." unless="github.pull.request.git.id" />

			<script classpathref="project.classpath" language="beanshell">
				<![CDATA[
					StringBuilder sb = new StringBuilder();

					sb.append("{");
					sb.append("\"description\":\"@{github.post.status.description}\",");
					sb.append("\"state\":\"@{github.post.status.state}\",");
					sb.append("\"target_url\":\"@{github.post.status.url}\"");
					sb.append("}");

					project.setProperty("github.post.data", sb.toString());

					sb = new StringBuilder();

					sb.append("https://api.github.com/repos/");
					sb.append(project.getProperty("github.username"));
					sb.append("/");
					sb.append(project.getProperty("github.repository"));
					sb.append("/statuses/");
					sb.append(project.getProperty("github.pull.request.git.id"));

					project.setProperty("github.post.url", sb.toString());
				]]>
			</script>

			<github-post
				github.post.data="${github.post.data}"
				github.post.url="${github.post.url}"
			/>
		</sequential>
	</macrodef>

	<target name="github-post-comment-failure">
		<fail message="Please set the property ${github.jenkins.failure.url.paths}" unless="github.jenkins.failure.url.paths" />
		<fail message="Please set the property ${github.jenkins.url}" unless="github.jenkins.url" />

		<script classpathref="project.classpath" language="beanshell">
			<![CDATA[
				import org.json.JSONObject;

				public String fixURL(String url) {
					if (url.contains("(")) {
						url = url.replace("(", "%28");
					}

					if (url.contains(")")) {
						url = url.replace(")", "%29");
					}

					if (url.contains("[")) {
						url = url.replace("[", "%5B");
					}

					if (url.contains("]")) {
						url = url.replace("]", "%5D");
					}

					return url;
				}

				public JSONObject toJSONObject(String url) {
					StringBuilder sb = new StringBuilder();

					URL urlObject = new URL(fixURL(url));

					InputStreamReader inputStreamReader = new InputStreamReader(urlObject.openStream());

					BufferedReader bufferedReader = new BufferedReader(inputStreamReader);

					String line = null;

					while ((line = bufferedReader.readLine()) != null) {
						sb.append(line);
					}

					bufferedReader.close();

					return new JSONObject(sb.toString());
				}

				StringBuilder sb = new StringBuilder();

				sb.append("<h1>Some tests have FAILED!</h1>");

				String githubJenkinsResultsURL = project.getProperty("github.jenkins.results.url");

				if (githubJenkinsResultsURL != null) {
					sb.append("<p>Click <a href=\\\"");
					sb.append(githubJenkinsResultsURL);
					sb.append("\\\">here</a> for more information.</p>");
				}

				sb.append("<h1>");

				String githubJenkinsFailureURLPathsString = project.getProperty("github.jenkins.failure.url.paths");

				String[] githubJenkinsFailureURLPaths = githubJenkinsFailureURLPathsString.split(" ");

				sb.append(githubJenkinsFailureURLPaths.length);
				sb.append(" Failure");

				if (githubJenkinsFailureURLPaths.length != 1) {
					sb.append("s");
				}

				sb.append(":</h1>");
				sb.append("<ul>");

				for (String githubJenkinsFailureURLPath : githubJenkinsFailureURLPaths) {
					String githubJenkinsFailureURL = project.getProperty("github.jenkins.url") + githubJenkinsFailureURLPath;

					JSONObject jsonObject = toJSONObject(githubJenkinsFailureURL + "/api/json");

					sb.append("<li>");
					sb.append("<a href=\\\"");
					sb.append(githubJenkinsFailureURL);
					sb.append("\\\">");
					sb.append(jsonObject.get("className"));
					sb.append(".");
					sb.append(jsonObject.get("name"));
					sb.append("</a>");
					sb.append("<pre>");
					sb.append(jsonObject.get("errorDetails"));
					sb.append("<br /><br />");

					String errorStackTrace = jsonObject.get("errorStackTrace");

					errorStackTrace = errorStackTrace.replaceAll("\n", "<br />");

					sb.append(errorStackTrace);

					sb.append("</pre>");
					sb.append("</li>");
				}

				sb.append("</ul>");

				project.setProperty("github.post.comment.body", sb.toString());
			]]>
		</script>

		<github-post-comment
			github.post.comment.body="${github.post.comment.body}"
		/>
	</target>

	<target name="github-post-comment-success">
		<script classpathref="project.classpath" language="beanshell">
			<![CDATA[
				StringBuilder sb = new StringBuilder();

				sb.append("<h1>All tests have PASSED!</h1>");

				String githubJenkinsResultsURL = project.getProperty("github.jenkins.results.url");

				if (githubJenkinsResultsURL != null) {
					sb.append("<p>Click <a href=\\\"");
					sb.append(githubJenkinsResultsURL);
					sb.append("\\\">here</a> for more information.</p>");
				}

				project.setProperty("github.post.comment.body", sb.toString());
			]]>
		</script>

		<github-post-comment
			github.post.comment.body="${github.post.comment.body}"
		/>
	</target>

	<target name="github-post-status-failure">
		<github-post-status
			github.post.status.description="Some tests have FAILED!"
			github.post.status.state="failure"
			github.post.status.url="${github.jenkins.results.url}"
		/>
	</target>

	<target name="github-post-status-pending">
		<github-post-status
			github.post.status.description="Tests are running on Jenkins."
			github.post.status.state="pending"
			github.post.status.url="${github.jenkins.results.url}"
		/>
	</target>

	<target name="github-post-status-success">
		<github-post-status
			github.post.status.description="All tests have PASSED!"
			github.post.status.state="success"
			github.post.status.url="${github.jenkins.results.url}"
		/>
	</target>
</project>