package com.liferay.tools.jsc.libsass;
import com.ochafik.lang.jnaerator.runtime.LibraryExtractor;
import com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper;
import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.ochafik.lang.jnaerator.runtime.globals.GlobalInt;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.PointerByReference;

import java.nio.ByteBuffer;
import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
/**
 * JNA Wrapper for library <b>sass</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface SassLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = LibraryExtractor.getLibraryPath("sass", true, SassLibrary.class);
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(SassLibrary.JNA_LIBRARY_NAME, MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final SassLibrary INSTANCE = (SassLibrary)Native.loadLibrary(SassLibrary.JNA_LIBRARY_NAME, SassLibrary.class, MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final int FP_NAN = (int)0;
	public static final int FP_INFINITE = (int)1;
	public static final int FP_ZERO = (int)2;
	public static final int FP_SUBNORMAL = (int)3;
	public static final int FP_NORMAL = (int)4;
	/**
	 * <i>native declaration : /usr/include/math.h</i><br>
	 * enum values
	 */
	/**
	 * <i>native declaration : /usr/include/math.h</i><br>
	 * enum values
	 */
	public static interface _LIB_VERSION_TYPE {
		/**
		 * According to IEEE 754/IEEE 854.<br>
		 * <i>native declaration : /usr/include/math.h:171</i>
		 */
		public static final int _IEEE_ = (int)-1;
		/**
		 * According to System V, release 4.<br>
		 * <i>native declaration : /usr/include/math.h:172</i>
		 */
		public static final int _SVID_ = (int)0;
		/**
		 * Nowadays also Unix98.<br>
		 * <i>native declaration : /usr/include/math.h:173</i>
		 */
		public static final int _XOPEN_ = (int)1;
		/// <i>native declaration : /usr/include/math.h:174</i>
		public static final int _POSIX_ = (int)2;
		/**
		 * Actually this is ISO C99.<br>
		 * <i>native declaration : /usr/include/math.h:175</i>
		 */
		public static final int _ISOC_ = (int)3;
	};
	/**
	 * Type for Sass values<br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:11</i><br>
	 * enum values
	 */
	/**
	 * Type for Sass values<br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:11</i><br>
	 * enum values
	 */
	public static interface Sass_Tag {
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:12</i>
		public static final int SASS_BOOLEAN = (int)0;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:13</i>
		public static final int SASS_NUMBER = (int)1;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:14</i>
		public static final int SASS_COLOR = (int)2;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:15</i>
		public static final int SASS_STRING = (int)3;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:16</i>
		public static final int SASS_LIST = (int)4;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:17</i>
		public static final int SASS_MAP = (int)5;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:18</i>
		public static final int SASS_NULL = (int)6;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:19</i>
		public static final int SASS_ERROR = (int)7;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:20</i>
		public static final int SASS_WARNING = (int)8;
	};
	/**
	 * Tags for denoting Sass list separators<br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:24</i><br>
	 * enum values
	 */
	/**
	 * Tags for denoting Sass list separators<br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:24</i><br>
	 * enum values
	 */
	public static interface Sass_Separator {
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:25</i>
		public static final int SASS_COMMA = (int)0;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:26</i>
		public static final int SASS_SPACE = (int)1;
	};
	/**
	 * Different render styles<br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:27</i><br>
	 * enum values
	 */
	/**
	 * Different render styles<br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:27</i><br>
	 * enum values
	 */
	public static interface Sass_Output_Style {
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:28</i>
		public static final int SASS_STYLE_NESTED = (int)0;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:29</i>
		public static final int SASS_STYLE_EXPANDED = (int)1;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:30</i>
		public static final int SASS_STYLE_COMPACT = (int)2;
		/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:31</i>
		public static final int SASS_STYLE_COMPRESSED = (int)3;
	};
	/// <i>native declaration : /usr/include/c++/4.8.2/tr1/stdbool.h</i>
	public static final int _TR1_STDBOOL_H = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int SING = (int)2;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int UNDERFLOW = (int)4;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int math_errhandling = (int)(1 | 2);
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int _SVID_SOURCE = (int)1;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_XOPEN2K = (int)1;
	/// <i>native declaration : /usr/include/c++/4.8.2/bits/c++0x_warning.h</i>
	public static final int _CXX0X_WARNING_H = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_SQRT1_2 = (double)0.70710678118654752440;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __GLIBC_MINOR__ = (int)19;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int MATH_ERREXCEPT = (int)2;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int OVERFLOW = (int)3;
	/// <i>native declaration : /usr/include/bits/wordsize.h</i>
	public static final int __WORDSIZE_TIME64_COMPAT32 = (int)1;
	/// <i>native declaration : /usr/include/stdc-predef.h</i>
	public static final int __STDC_NO_THREADS__ = (int)1;
	/**
	 * define<br>
	 * Conversion Error : __ld<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/bits/huge_vall.h:0</i><br>
	 * __ld
	 */
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_2_SQRTPI = (double)1.12837916709551257390;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int _BSD_SOURCE = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int _MATH_H = (int)1;
	/**
	 * define<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/math.h</i><br>
	 * 3
	 */
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_POSIX = (int)1;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_SVID = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_E = (double)2.7182818284590452354;
	/// <i>native declaration : /usr/include/bits/wordsize.h</i>
	public static final int __SYSCALL_WORDSIZE = (int)64;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int __MATH_DECLARE_LDOUBLE = (int)1;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_ISOC99 = (int)1;
	/**
	 * define<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/math.h</i><br>
	 * 2
	 */
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_ISOC95 = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int MATH_ERRNO = (int)1;
	/// <i>native declaration : /usr/include/bits/wordsize.h</i>
	public static final int __WORDSIZE = (int)64;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int _FEATURES_H = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_PI = (double)3.14159265358979323846;
	/// <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h</i>
	public static final String LIBSASS_VERSION = (String)"[NA]";
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_POSIX2 = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_2_PI = (double)0.63661977236758134308;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int _POSIX_SOURCE = (int)1;
	/// <i>native declaration : /usr/include/bits/mathdef.h</i>
	public static final int _MATH_H_MATHDEF = (int)1;
	/// <i>native declaration : /usr/include/stdc-predef.h</i>
	public static final int __STDC_IEC_559__ = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_LN10 = (double)2.30258509299404568402;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_XOPEN2K8 = (int)1;
	/// <i>native declaration : /usr/include/c++/4.8.2/condition_variable</i>
	public static final int _GLIBCXX_CONDITION_VARIABLE = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_LOG10E = (double)0.43429448190325182765;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_LN2 = (double)0.69314718055994530942;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_ATFILE = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final float HUGE = (float)3.40282347e+38F;
	/**
	 * define<br>
	 * Conversion Error : { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/bits/huge_vall.h:0</i><br>
	 * { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }
	 */
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_FORTIFY_LEVEL = (int)0;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __GLIBC__ = (int)2;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_SQRT2 = (double)1.41421356237309504880;
	/// <i>native declaration : /usr/include/stdc-predef.h</i>
	public static final int __STDC_ISO_10646__ = (int)201103;
	/// <i>native declaration : /usr/include/sys/cdefs.h</i>
	public static final int _SYS_CDEFS_H = (int)1;
	/// <i>native declaration : /usr/include/stdc-predef.h</i>
	public static final int __STDC_IEC_559_COMPLEX__ = (int)1;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int _DEFAULT_SOURCE = (int)1;
	/**
	 * define<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/math.h</i><br>
	 * 4
	 */
	/// <i>native declaration : /usr/include/stdc-predef.h</i>
	public static final int _STDC_PREDEF_H = (int)1;
	/// <i>native declaration : /usr/include/bits/mathdef.h</i>
	public static final int FP_ILOGB0 = (int)(-2147483647 - 1);
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_POSIX199309 = (int)1;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_POSIX199506 = (int)1;
	/**
	 * define<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/math.h</i><br>
	 * 0
	 */
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_PI_4 = (double)0.78539816339744830962;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_POSIX_IMPLICITLY = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int PLOSS = (int)6;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_1_PI = (double)0.31830988618379067154;
	/// <i>native declaration : /usr/include/c++/4.8.2/tr1/cstdbool</i>
	public static final int _GLIBCXX_TR1_CSTDBOOL = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_LOG2E = (double)1.4426950408889634074;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_BSD = (int)1;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __USE_MISC = (int)1;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int DOMAIN = (int)1;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int _ATFILE_SOURCE = (int)1;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int __GNU_LIBRARY__ = (int)6;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final int TLOSS = (int)5;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double M_PI_2 = (double)1.57079632679489661923;
	/// <i>native declaration : /usr/include/math.h</i>
	public static final double X_TLOSS = (double)1.41484755040568800000e+16;
	/// <i>native declaration : /usr/include/features.h</i>
	public static final int _POSIX_C_SOURCE = (int)200809;
	/// <i>native declaration : /usr/include/bits/mathdef.h</i>
	public static final int FP_ILOGBNAN = (int)(-2147483647 - 1);
	/**
	 * define<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/math.h</i><br>
	 * 1
	 */
	/**
	 * Typedef defining the importer c function prototype<br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:16</i>
	 */
	/**
	 * Typedef defining the importer c function prototype<br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:16</i>
	 */
	public interface Sass_C_Import_Fn extends Callback {
		PointerByReference apply(Pointer url, Pointer prev, Pointer cookie);
	};
	/**
	 * Typedef defining custom function prototype and its return value type<br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:63</i>
	 */
	/**
	 * Typedef defining custom function prototype and its return value type<br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:63</i>
	 */
	public interface Sass_C_Function extends Callback {
		SassLibrary.Sass_Value apply(SassLibrary.Sass_Value Sass_ValuePtr1, Pointer cookie);
	};
	/**
	 * Arc cosine of X.<br>
	 * Original signature : <code>double acos(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:54</i>
	 */
	double acos(double __x);
	/**
	 * Original signature : <code>double __acos(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:54</i>
	 */
	double __acos(double __x);
	/**
	 * Arc sine of X.<br>
	 * Original signature : <code>double asin(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:56</i>
	 */
	double asin(double __x);
	/**
	 * Original signature : <code>double __asin(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:56</i>
	 */
	double __asin(double __x);
	/**
	 * Arc tangent of X.<br>
	 * Original signature : <code>double atan(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:58</i>
	 */
	double atan(double __x);
	/**
	 * Original signature : <code>double __atan(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:58</i>
	 */
	double __atan(double __x);
	/**
	 * Arc tangent of Y/X.<br>
	 * Original signature : <code>double atan2(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:60</i>
	 */
	double atan2(double __y, double __x);
	/**
	 * Original signature : <code>double __atan2(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:60</i>
	 */
	double __atan2(double __y, double __x);
	/**
	 * Cosine of X.<br>
	 * Original signature : <code>double cos(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:63</i>
	 */
	double cos(double __x);
	/**
	 * Original signature : <code>double __cos(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:63</i>
	 */
	double __cos(double __x);
	/**
	 * Sine of X.<br>
	 * Original signature : <code>double sin(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:65</i>
	 */
	double sin(double __x);
	/**
	 * Original signature : <code>double __sin(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:65</i>
	 */
	double __sin(double __x);
	/**
	 * Tangent of X.<br>
	 * Original signature : <code>double tan(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:67</i>
	 */
	double tan(double __x);
	/**
	 * Original signature : <code>double __tan(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:67</i>
	 */
	double __tan(double __x);
	/**
	 * Hyperbolic cosine of X.<br>
	 * Original signature : <code>double cosh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:72</i>
	 */
	double cosh(double __x);
	/**
	 * Original signature : <code>double __cosh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:72</i>
	 */
	double __cosh(double __x);
	/**
	 * Hyperbolic sine of X.<br>
	 * Original signature : <code>double sinh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:74</i>
	 */
	double sinh(double __x);
	/**
	 * Original signature : <code>double __sinh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:74</i>
	 */
	double __sinh(double __x);
	/**
	 * Hyperbolic tangent of X.<br>
	 * Original signature : <code>double tanh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:76</i>
	 */
	double tanh(double __x);
	/**
	 * Original signature : <code>double __tanh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:76</i>
	 */
	double __tanh(double __x);
	/**
	 * Hyperbolic arc cosine of X.<br>
	 * Original signature : <code>double acosh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:88</i>
	 */
	double acosh(double __x);
	/**
	 * Original signature : <code>double __acosh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:88</i>
	 */
	double __acosh(double __x);
	/**
	 * Hyperbolic arc sine of X.<br>
	 * Original signature : <code>double asinh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:90</i>
	 */
	double asinh(double __x);
	/**
	 * Original signature : <code>double __asinh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:90</i>
	 */
	double __asinh(double __x);
	/**
	 * Hyperbolic arc tangent of X.<br>
	 * Original signature : <code>double atanh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:92</i>
	 */
	double atanh(double __x);
	/**
	 * Original signature : <code>double __atanh(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:92</i>
	 */
	double __atanh(double __x);
	/**
	 * Exponential function of X.<br>
	 * Original signature : <code>double exp(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:100</i>
	 */
	double exp(double __x);
	/**
	 * Original signature : <code>double __exp(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:100</i>
	 */
	double __exp(double __x);
	/**
	 * Break VALUE into a normalized fraction and an integral power of 2.<br>
	 * Original signature : <code>double frexp(double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:103</i><br>
	 * @deprecated use the safer methods {@link #frexp(double, java.nio.IntBuffer)} and {@link #frexp(double, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	double frexp(double __x, IntByReference __exponent);
	/**
	 * Break VALUE into a normalized fraction and an integral power of 2.<br>
	 * Original signature : <code>double frexp(double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:103</i>
	 */
	double frexp(double __x, IntBuffer __exponent);
	/**
	 * Original signature : <code>double __frexp(double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:103</i><br>
	 * @deprecated use the safer methods {@link #__frexp(double, java.nio.IntBuffer)} and {@link #__frexp(double, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	double __frexp(double __x, IntByReference __exponent);
	/**
	 * Original signature : <code>double __frexp(double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:103</i>
	 */
	double __frexp(double __x, IntBuffer __exponent);
	/**
	 * X times (two to the EXP power).<br>
	 * Original signature : <code>double ldexp(double, int)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:106</i>
	 */
	double ldexp(double __x, int __exponent);
	/**
	 * Original signature : <code>double __ldexp(double, int)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:106</i>
	 */
	double __ldexp(double __x, int __exponent);
	/**
	 * Natural logarithm of X.<br>
	 * Original signature : <code>double log(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:109</i>
	 */
	double log(double __x);
	/**
	 * Original signature : <code>double __log(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:109</i>
	 */
	double __log(double __x);
	/**
	 * Base-ten logarithm of X.<br>
	 * Original signature : <code>double log10(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:112</i>
	 */
	double log10(double __x);
	/**
	 * Original signature : <code>double __log10(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:112</i>
	 */
	double __log10(double __x);
	/**
	 * Break VALUE into integral and fractional parts.<br>
	 * Original signature : <code>double modf(double, double*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:115</i><br>
	 * @deprecated use the safer methods {@link #modf(double, java.nio.DoubleBuffer)} and {@link #modf(double, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	double modf(double __x, DoubleByReference __iptr);
	/**
	 * Break VALUE into integral and fractional parts.<br>
	 * Original signature : <code>double modf(double, double*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:115</i>
	 */
	double modf(double __x, DoubleBuffer __iptr);
	/**
	 * Original signature : <code>double __modf(double, double*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:115</i><br>
	 * @deprecated use the safer methods {@link #__modf(double, java.nio.DoubleBuffer)} and {@link #__modf(double, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	double __modf(double __x, DoubleByReference __iptr);
	/**
	 * Original signature : <code>double __modf(double, double*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:115</i>
	 */
	double __modf(double __x, DoubleBuffer __iptr);
	/**
	 * Return exp(X) - 1.<br>
	 * Original signature : <code>double expm1(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:128</i>
	 */
	double expm1(double __x);
	/**
	 * Original signature : <code>double __expm1(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:128</i>
	 */
	double __expm1(double __x);
	/**
	 * Return log(1 + X).<br>
	 * Original signature : <code>double log1p(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:131</i>
	 */
	double log1p(double __x);
	/**
	 * Original signature : <code>double __log1p(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:131</i>
	 */
	double __log1p(double __x);
	/**
	 * Return the base 2 signed integral exponent of X.<br>
	 * Original signature : <code>double logb(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:134</i>
	 */
	double logb(double __x);
	/**
	 * Original signature : <code>double __logb(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:134</i>
	 */
	double __logb(double __x);
	/**
	 * Compute base-2 exponential of X.<br>
	 * Original signature : <code>double exp2(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:141</i>
	 */
	double exp2(double __x);
	/**
	 * Original signature : <code>double __exp2(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:141</i>
	 */
	double __exp2(double __x);
	/**
	 * Compute base-2 logarithm of X.<br>
	 * Original signature : <code>double log2(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:144</i>
	 */
	double log2(double __x);
	/**
	 * Original signature : <code>double __log2(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:144</i>
	 */
	double __log2(double __x);
	/**
	 * Return X to the Y power.<br>
	 * Original signature : <code>double pow(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:153</i>
	 */
	double pow(double __x, double __y);
	/**
	 * Original signature : <code>double __pow(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:153</i>
	 */
	double __pow(double __x, double __y);
	/**
	 * Return the square root of X.<br>
	 * Original signature : <code>double sqrt(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:156</i>
	 */
	double sqrt(double __x);
	/**
	 * Original signature : <code>double __sqrt(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:156</i>
	 */
	double __sqrt(double __x);
	/**
	 * Return `sqrt(X*X + Y*Y)'.<br>
	 * Original signature : <code>double hypot(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:162</i>
	 */
	double hypot(double __x, double __y);
	/**
	 * Original signature : <code>double __hypot(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:162</i>
	 */
	double __hypot(double __x, double __y);
	/**
	 * Return the cube root of X.<br>
	 * Original signature : <code>double cbrt(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:169</i>
	 */
	double cbrt(double __x);
	/**
	 * Original signature : <code>double __cbrt(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:169</i>
	 */
	double __cbrt(double __x);
	/**
	 * Smallest integral value not less than X.<br>
	 * Original signature : <code>double ceil(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:178</i>
	 */
	double ceil(double __x);
	/**
	 * Original signature : <code>double __ceil(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:178</i>
	 */
	double __ceil(double __x);
	/**
	 * Absolute value of X.<br>
	 * Original signature : <code>double fabs(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:181</i>
	 */
	double fabs(double __x);
	/**
	 * Original signature : <code>double __fabs(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:181</i>
	 */
	double __fabs(double __x);
	/**
	 * Largest integer not greater than X.<br>
	 * Original signature : <code>double floor(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:184</i>
	 */
	double floor(double __x);
	/**
	 * Original signature : <code>double __floor(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:184</i>
	 */
	double __floor(double __x);
	/**
	 * Floating-point modulo remainder of X/Y.<br>
	 * Original signature : <code>double fmod(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:187</i>
	 */
	double fmod(double __x, double __y);
	/**
	 * Original signature : <code>double __fmod(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:187</i>
	 */
	double __fmod(double __x, double __y);
	/**
	 * Return 0 if VALUE is finite or NaN, +1 if it<br>
	 * is +Infinity, -1 if it is -Infinity.<br>
	 * Original signature : <code>int __isinf(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:192</i>
	 */
	int __isinf(double __value);
	/**
	 * Return nonzero if VALUE is finite and not NaN.<br>
	 * Original signature : <code>int __finite(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:195</i>
	 */
	int __finite(double __value);
	/**
	 * Return 0 if VALUE is finite or NaN, +1 if it<br>
	 * is +Infinity, -1 if it is -Infinity.<br>
	 * Original signature : <code>int isinf(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:201</i>
	 */
	int isinf(double __value);
	/**
	 * Return nonzero if VALUE is finite and not NaN.<br>
	 * Original signature : <code>int finite(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:204</i>
	 */
	int finite(double __value);
	/**
	 * Return the remainder of X/Y.<br>
	 * Original signature : <code>double drem(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:207</i>
	 */
	double drem(double __x, double __y);
	/**
	 * Original signature : <code>double __drem(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:207</i>
	 */
	double __drem(double __x, double __y);
	/**
	 * Return the fractional part of X after dividing out `ilogb (X)'.<br>
	 * Original signature : <code>double significand(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:211</i>
	 */
	double significand(double __x);
	/**
	 * Original signature : <code>double __significand(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:211</i>
	 */
	double __significand(double __x);
	/**
	 * Return X with its signed changed to Y's.<br>
	 * Original signature : <code>double copysign(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:217</i>
	 */
	double copysign(double __x, double __y);
	/**
	 * Original signature : <code>double __copysign(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:217</i>
	 */
	double __copysign(double __x, double __y);
	/**
	 * Return representation of qNaN for double type.<br>
	 * Original signature : <code>double nan(const char*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:224</i><br>
	 * @deprecated use the safer methods {@link #nan(java.lang.String)} and {@link #nan(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	double nan(Pointer __tagb);
	/**
	 * Return representation of qNaN for double type.<br>
	 * Original signature : <code>double nan(const char*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:224</i>
	 */
	double nan(String __tagb);
	/**
	 * Original signature : <code>double __nan(const char*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:224</i><br>
	 * @deprecated use the safer methods {@link #__nan(java.lang.String)} and {@link #__nan(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	double __nan(Pointer __tagb);
	/**
	 * Original signature : <code>double __nan(const char*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:224</i>
	 */
	double __nan(String __tagb);
	/**
	 * Return nonzero if VALUE is not a number.<br>
	 * Original signature : <code>int __isnan(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:230</i>
	 */
	int __isnan(double __value);
	/**
	 * Return nonzero if VALUE is not a number.<br>
	 * Original signature : <code>int isnan(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:234</i>
	 */
	int isnan(double __value);
	/**
	 * Bessel functions.<br>
	 * Original signature : <code>double j0(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:237</i>
	 */
	double j0(double double1);
	/**
	 * Original signature : <code>double __j0(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:237</i>
	 */
	double __j0(double double1);
	/**
	 * Original signature : <code>double j1(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:238</i>
	 */
	double j1(double double1);
	/**
	 * Original signature : <code>double __j1(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:238</i>
	 */
	double __j1(double double1);
	/**
	 * Original signature : <code>double jn(int, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:239</i>
	 */
	double jn(int int1, double double1);
	/**
	 * Original signature : <code>double __jn(int, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:239</i>
	 */
	double __jn(int int1, double double1);
	/**
	 * Original signature : <code>double y0(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:240</i>
	 */
	double y0(double double1);
	/**
	 * Original signature : <code>double __y0(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:240</i>
	 */
	double __y0(double double1);
	/**
	 * Original signature : <code>double y1(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:241</i>
	 */
	double y1(double double1);
	/**
	 * Original signature : <code>double __y1(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:241</i>
	 */
	double __y1(double double1);
	/**
	 * Original signature : <code>double yn(int, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:242</i>
	 */
	double yn(int int1, double double1);
	/**
	 * Original signature : <code>double __yn(int, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:242</i>
	 */
	double __yn(int int1, double double1);
	/**
	 * Error and gamma functions.<br>
	 * Original signature : <code>double erf(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:249</i>
	 */
	double erf(double double1);
	/**
	 * Original signature : <code>double __erf(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:249</i>
	 */
	double __erf(double double1);
	/**
	 * Original signature : <code>double erfc(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:250</i>
	 */
	double erfc(double double1);
	/**
	 * Original signature : <code>double __erfc(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:250</i>
	 */
	double __erfc(double double1);
	/**
	 * Original signature : <code>double lgamma(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:251</i>
	 */
	double lgamma(double double1);
	/**
	 * Original signature : <code>double __lgamma(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:251</i>
	 */
	double __lgamma(double double1);
	/**
	 * True gamma function.<br>
	 * Original signature : <code>double tgamma(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:258</i>
	 */
	double tgamma(double double1);
	/**
	 * Original signature : <code>double __tgamma(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:258</i>
	 */
	double __tgamma(double double1);
	/**
	 * Obsolete alias for `lgamma'.<br>
	 * Original signature : <code>double gamma(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:264</i>
	 */
	double gamma(double double1);
	/**
	 * Original signature : <code>double __gamma(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:264</i>
	 */
	double __gamma(double double1);
	/**
	 * Reentrant version of lgamma.  This function uses the global variable<br>
	 * `signgam'.  The reentrant version instead takes a pointer and stores<br>
	 * the value through it.<br>
	 * Original signature : <code>double lgamma_r(double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:271</i><br>
	 * @deprecated use the safer methods {@link #lgamma_r(double, java.nio.IntBuffer)} and {@link #lgamma_r(double, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	double lgamma_r(double double1, IntByReference __signgamp);
	/**
	 * Reentrant version of lgamma.  This function uses the global variable<br>
	 * `signgam'.  The reentrant version instead takes a pointer and stores<br>
	 * the value through it.<br>
	 * Original signature : <code>double lgamma_r(double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:271</i>
	 */
	double lgamma_r(double double1, IntBuffer __signgamp);
	/**
	 * Original signature : <code>double __lgamma_r(double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:271</i><br>
	 * @deprecated use the safer methods {@link #__lgamma_r(double, java.nio.IntBuffer)} and {@link #__lgamma_r(double, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	double __lgamma_r(double double1, IntByReference __signgamp);
	/**
	 * Original signature : <code>double __lgamma_r(double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:271</i>
	 */
	double __lgamma_r(double double1, IntBuffer __signgamp);
	/**
	 * Return the integer nearest X in the direction of the<br>
	 * prevailing rounding mode.<br>
	 * Original signature : <code>double rint(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:279</i>
	 */
	double rint(double __x);
	/**
	 * Original signature : <code>double __rint(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:279</i>
	 */
	double __rint(double __x);
	/**
	 * Return X + epsilon if X < Y, X - epsilon if X > Y.<br>
	 * Original signature : <code>double nextafter(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:282</i>
	 */
	double nextafter(double __x, double __y);
	/**
	 * Original signature : <code>double __nextafter(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:282</i>
	 */
	double __nextafter(double __x, double __y);
	/**
	 * Original signature : <code>double nexttoward(double, long double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:284</i>
	 */
	double nexttoward(double __x, double __y);
	/**
	 * Original signature : <code>double __nexttoward(double, long double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:284</i>
	 */
	double __nexttoward(double __x, double __y);
	/**
	 * Return the remainder of integer divison X / Y with infinite precision.<br>
	 * Original signature : <code>double remainder(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:288</i>
	 */
	double remainder(double __x, double __y);
	/**
	 * Original signature : <code>double __remainder(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:288</i>
	 */
	double __remainder(double __x, double __y);
	/**
	 * Return X times (2 to the Nth power).<br>
	 * Original signature : <code>double scalbn(double, int)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:292</i>
	 */
	double scalbn(double __x, int __n);
	/**
	 * Original signature : <code>double __scalbn(double, int)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:292</i>
	 */
	double __scalbn(double __x, int __n);
	/**
	 * Return the binary exponent of X, which must be nonzero.<br>
	 * Original signature : <code>int ilogb(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:296</i>
	 */
	int ilogb(double __x);
	/**
	 * Original signature : <code>int __ilogb(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:296</i>
	 */
	int __ilogb(double __x);
	/**
	 * Return X times (2 to the Nth power).<br>
	 * Original signature : <code>double scalbln(double, long)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:301</i>
	 */
	double scalbln(double __x, NativeLong __n);
	/**
	 * Original signature : <code>double __scalbln(double, long)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:301</i>
	 */
	double __scalbln(double __x, NativeLong __n);
	/**
	 * Round X to integral value in floating-point format using current<br>
	 * rounding direction, but do not raise inexact exception.<br>
	 * Original signature : <code>double nearbyint(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:305</i>
	 */
	double nearbyint(double __x);
	/**
	 * Original signature : <code>double __nearbyint(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:305</i>
	 */
	double __nearbyint(double __x);
	/**
	 * Round X to nearest integral value, rounding halfway cases away from<br>
	 * zero.<br>
	 * Original signature : <code>double round(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:309</i>
	 */
	double round(double __x);
	/**
	 * Original signature : <code>double __round(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:309</i>
	 */
	double __round(double __x);
	/**
	 * Round X to the integral value in floating-point format nearest but<br>
	 * not larger in magnitude.<br>
	 * Original signature : <code>double trunc(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:313</i>
	 */
	double trunc(double __x);
	/**
	 * Original signature : <code>double __trunc(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:313</i>
	 */
	double __trunc(double __x);
	/**
	 * Compute remainder of X and Y and put in *QUO a value with sign of x/y<br>
	 * and magnitude congruent `mod 2^n' to the magnitude of the integral<br>
	 * quotient x/y, with n >= 3.<br>
	 * Original signature : <code>double remquo(double, double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:318</i><br>
	 * @deprecated use the safer methods {@link #remquo(double, double, java.nio.IntBuffer)} and {@link #remquo(double, double, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	double remquo(double __x, double __y, IntByReference __quo);
	/**
	 * Compute remainder of X and Y and put in *QUO a value with sign of x/y<br>
	 * and magnitude congruent `mod 2^n' to the magnitude of the integral<br>
	 * quotient x/y, with n >= 3.<br>
	 * Original signature : <code>double remquo(double, double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:318</i>
	 */
	double remquo(double __x, double __y, IntBuffer __quo);
	/**
	 * Original signature : <code>double __remquo(double, double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:318</i><br>
	 * @deprecated use the safer methods {@link #__remquo(double, double, java.nio.IntBuffer)} and {@link #__remquo(double, double, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	double __remquo(double __x, double __y, IntByReference __quo);
	/**
	 * Original signature : <code>double __remquo(double, double, int*)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:318</i>
	 */
	double __remquo(double __x, double __y, IntBuffer __quo);
	/**
	 * Round X to nearest integral value according to current rounding<br>
	 * direction.<br>
	 * Original signature : <code>long lrint(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:325</i>
	 */
	NativeLong lrint(double __x);
	/**
	 * Original signature : <code>long __lrint(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:325</i>
	 */
	NativeLong __lrint(double __x);
	/**
	 * Original signature : <code>long long llrint(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:327</i>
	 */
	NativeLong llrint(double __x);
	/**
	 * Original signature : <code>long long __llrint(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:327</i>
	 */
	NativeLong __llrint(double __x);
	/**
	 * Round X to nearest integral value, rounding halfway cases away from<br>
	 * zero.<br>
	 * Original signature : <code>long lround(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:331</i>
	 */
	NativeLong lround(double __x);
	/**
	 * Original signature : <code>long __lround(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:331</i>
	 */
	NativeLong __lround(double __x);
	/**
	 * Original signature : <code>long long llround(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:333</i>
	 */
	NativeLong llround(double __x);
	/**
	 * Original signature : <code>long long __llround(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:333</i>
	 */
	NativeLong __llround(double __x);
	/**
	 * Return positive difference between X and Y.<br>
	 * Original signature : <code>double fdim(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:337</i>
	 */
	double fdim(double __x, double __y);
	/**
	 * Original signature : <code>double __fdim(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:337</i>
	 */
	double __fdim(double __x, double __y);
	/**
	 * Return maximum numeric value from X and Y.<br>
	 * Original signature : <code>double fmax(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:340</i>
	 */
	double fmax(double __x, double __y);
	/**
	 * Original signature : <code>double __fmax(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:340</i>
	 */
	double __fmax(double __x, double __y);
	/**
	 * Return minimum numeric value from X and Y.<br>
	 * Original signature : <code>double fmin(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:343</i>
	 */
	double fmin(double __x, double __y);
	/**
	 * Original signature : <code>double __fmin(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:343</i>
	 */
	double __fmin(double __x, double __y);
	/**
	 * Classify given number.<br>
	 * Original signature : <code>int __fpclassify(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:347</i>
	 */
	int __fpclassify(double __value);
	/**
	 * Test for negative number.<br>
	 * Original signature : <code>int __signbit(double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:351</i>
	 */
	int __signbit(double __value);
	/**
	 * Multiply-add function computed as a ternary operation.<br>
	 * Original signature : <code>double fma(double, double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:356</i>
	 */
	double fma(double __x, double __y, double __z);
	/**
	 * Original signature : <code>double __fma(double, double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:356</i>
	 */
	double __fma(double __x, double __y, double __z);
	/**
	 * Return X times (2 to the Nth power).<br>
	 * Original signature : <code>double scalb(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:371</i>
	 */
	double scalb(double __x, double __n);
	/**
	 * Original signature : <code>double __scalb(double, double)</code><br>
	 * <i>native declaration : /usr/include/bits/mathcalls.h:371</i>
	 */
	double __scalb(double __x, double __n);
	/**
	 * Original signature : <code>int matherr(__exception*)</code><br>
	 * <i>native declaration : /usr/include/math.h:205</i>
	 */
	int matherr(__exception __exc);
	/**
	 * Check is needed before accessing specific values!<br>
	 * Original signature : <code>Sass_Tag sass_value_get_tag(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:31</i>
	 */
	int sass_value_get_tag(SassLibrary.Sass_Value v);
	/**
	 * Can also be used before accessing properties!<br>
	 * Original signature : <code>bool sass_value_is_null(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:35</i>
	 */
	byte sass_value_is_null(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>bool sass_value_is_number(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:36</i>
	 */
	byte sass_value_is_number(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>bool sass_value_is_string(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:37</i>
	 */
	byte sass_value_is_string(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>bool sass_value_is_boolean(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:38</i>
	 */
	byte sass_value_is_boolean(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>bool sass_value_is_color(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:39</i>
	 */
	byte sass_value_is_color(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>bool sass_value_is_list(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:40</i>
	 */
	byte sass_value_is_list(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>bool sass_value_is_map(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:41</i>
	 */
	byte sass_value_is_map(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>bool sass_value_is_error(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:42</i>
	 */
	byte sass_value_is_error(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>bool sass_value_is_warning(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:43</i>
	 */
	byte sass_value_is_warning(SassLibrary.Sass_Value v);
	/**
	 * Getters and setters for Sass_Number<br>
	 * Original signature : <code>double sass_number_get_value(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:46</i>
	 */
	double sass_number_get_value(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_number_set_value(Sass_Value*, double)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:47</i>
	 */
	void sass_number_set_value(SassLibrary.Sass_Value v, double value);
	/**
	 * Original signature : <code>char* sass_number_get_unit(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:48</i>
	 */
	Pointer sass_number_get_unit(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_number_set_unit(Sass_Value*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:49</i><br>
	 * @deprecated use the safer methods {@link #sass_number_set_unit(sass.SassLibrary.Sass_Value, java.nio.ByteBuffer)} and {@link #sass_number_set_unit(sass.SassLibrary.Sass_Value, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void sass_number_set_unit(SassLibrary.Sass_Value v, Pointer unit);
	/**
	 * Original signature : <code>void sass_number_set_unit(Sass_Value*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:49</i>
	 */
	void sass_number_set_unit(SassLibrary.Sass_Value v, ByteBuffer unit);
	/**
	 * Getters and setters for Sass_String<br>
	 * Original signature : <code>char* sass_string_get_value(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:52</i>
	 */
	Pointer sass_string_get_value(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_string_set_value(Sass_Value*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:53</i><br>
	 * @deprecated use the safer methods {@link #sass_string_set_value(sass.SassLibrary.Sass_Value, java.nio.ByteBuffer)} and {@link #sass_string_set_value(sass.SassLibrary.Sass_Value, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void sass_string_set_value(SassLibrary.Sass_Value v, Pointer value);
	/**
	 * Original signature : <code>void sass_string_set_value(Sass_Value*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:53</i>
	 */
	void sass_string_set_value(SassLibrary.Sass_Value v, ByteBuffer value);
	/**
	 * Getters and setters for Sass_Boolean<br>
	 * Original signature : <code>bool sass_boolean_get_value(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:56</i>
	 */
	byte sass_boolean_get_value(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_boolean_set_value(Sass_Value*, bool)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:57</i>
	 */
	void sass_boolean_set_value(SassLibrary.Sass_Value v, byte value);
	/**
	 * Getters and setters for Sass_Color<br>
	 * Original signature : <code>double sass_color_get_r(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:60</i>
	 */
	double sass_color_get_r(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_color_set_r(Sass_Value*, double)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:61</i>
	 */
	void sass_color_set_r(SassLibrary.Sass_Value v, double r);
	/**
	 * Original signature : <code>double sass_color_get_g(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:62</i>
	 */
	double sass_color_get_g(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_color_set_g(Sass_Value*, double)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:63</i>
	 */
	void sass_color_set_g(SassLibrary.Sass_Value v, double g);
	/**
	 * Original signature : <code>double sass_color_get_b(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:64</i>
	 */
	double sass_color_get_b(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_color_set_b(Sass_Value*, double)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:65</i>
	 */
	void sass_color_set_b(SassLibrary.Sass_Value v, double b);
	/**
	 * Original signature : <code>double sass_color_get_a(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:66</i>
	 */
	double sass_color_get_a(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_color_set_a(Sass_Value*, double)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:67</i>
	 */
	void sass_color_set_a(SassLibrary.Sass_Value v, double a);
	/**
	 * Getter for the number of items in list<br>
	 * Original signature : <code>size_t sass_list_get_length(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:70</i>
	 */
	NativeSize sass_list_get_length(SassLibrary.Sass_Value v);
	/**
	 * Getters and setters for Sass_List<br>
	 * Original signature : <code>Sass_Separator sass_list_get_separator(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:72</i>
	 */
	int sass_list_get_separator(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_list_set_separator(Sass_Value*, Sass_Separator)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:73</i>
	 */
	void sass_list_set_separator(SassLibrary.Sass_Value v, int value);
	/**
	 * Getters and setters for Sass_List values<br>
	 * Original signature : <code>Sass_Value* sass_list_get_value(Sass_Value*, size_t)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:75</i>
	 */
	SassLibrary.Sass_Value sass_list_get_value(SassLibrary.Sass_Value v, NativeSize i);
	/**
	 * Original signature : <code>void sass_list_set_value(Sass_Value*, size_t, Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:76</i>
	 */
	void sass_list_set_value(SassLibrary.Sass_Value v, NativeSize i, SassLibrary.Sass_Value value);
	/**
	 * Getter for the number of items in map<br>
	 * Original signature : <code>size_t sass_map_get_length(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:79</i>
	 */
	NativeSize sass_map_get_length(SassLibrary.Sass_Value v);
	/**
	 * Getters and setters for Sass_List keys and values<br>
	 * Original signature : <code>Sass_Value* sass_map_get_key(Sass_Value*, size_t)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:81</i>
	 */
	SassLibrary.Sass_Value sass_map_get_key(SassLibrary.Sass_Value v, NativeSize i);
	/**
	 * Original signature : <code>void sass_map_set_key(Sass_Value*, size_t, Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:82</i>
	 */
	void sass_map_set_key(SassLibrary.Sass_Value v, NativeSize i, SassLibrary.Sass_Value Sass_ValuePtr1);
	/**
	 * Original signature : <code>Sass_Value* sass_map_get_value(Sass_Value*, size_t)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:83</i>
	 */
	SassLibrary.Sass_Value sass_map_get_value(SassLibrary.Sass_Value v, NativeSize i);
	/**
	 * Original signature : <code>void sass_map_set_value(Sass_Value*, size_t, Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:84</i>
	 */
	void sass_map_set_value(SassLibrary.Sass_Value v, NativeSize i, SassLibrary.Sass_Value Sass_ValuePtr1);
	/**
	 * Getters and setters for Sass_Error<br>
	 * Original signature : <code>char* sass_error_get_message(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:87</i>
	 */
	Pointer sass_error_get_message(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_error_set_message(Sass_Value*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:88</i><br>
	 * @deprecated use the safer methods {@link #sass_error_set_message(sass.SassLibrary.Sass_Value, java.nio.ByteBuffer)} and {@link #sass_error_set_message(sass.SassLibrary.Sass_Value, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void sass_error_set_message(SassLibrary.Sass_Value v, Pointer msg);
	/**
	 * Original signature : <code>void sass_error_set_message(Sass_Value*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:88</i>
	 */
	void sass_error_set_message(SassLibrary.Sass_Value v, ByteBuffer msg);
	/**
	 * Getters and setters for Sass_Warning<br>
	 * Original signature : <code>char* sass_warning_get_message(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:91</i>
	 */
	Pointer sass_warning_get_message(SassLibrary.Sass_Value v);
	/**
	 * Original signature : <code>void sass_warning_set_message(Sass_Value*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:92</i><br>
	 * @deprecated use the safer methods {@link #sass_warning_set_message(sass.SassLibrary.Sass_Value, java.nio.ByteBuffer)} and {@link #sass_warning_set_message(sass.SassLibrary.Sass_Value, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void sass_warning_set_message(SassLibrary.Sass_Value v, Pointer msg);
	/**
	 * Original signature : <code>void sass_warning_set_message(Sass_Value*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:92</i>
	 */
	void sass_warning_set_message(SassLibrary.Sass_Value v, ByteBuffer msg);
	/**
	 * Creator functions for all value types<br>
	 * Original signature : <code>Sass_Value* sass_make_null()</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:95</i>
	 */
	SassLibrary.Sass_Value sass_make_null();
	/**
	 * Original signature : <code>Sass_Value* sass_make_boolean(bool)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:96</i>
	 */
	SassLibrary.Sass_Value sass_make_boolean(byte val);
	/**
	 * Original signature : <code>Sass_Value* sass_make_string(const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:97</i><br>
	 * @deprecated use the safer methods {@link #sass_make_string(java.lang.String)} and {@link #sass_make_string(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	SassLibrary.Sass_Value sass_make_string(Pointer val);
	/**
	 * Original signature : <code>Sass_Value* sass_make_string(const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:97</i>
	 */
	SassLibrary.Sass_Value sass_make_string(String val);
	/**
	 * Original signature : <code>Sass_Value* sass_make_number(double, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:98</i><br>
	 * @deprecated use the safer methods {@link #sass_make_number(double, java.lang.String)} and {@link #sass_make_number(double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	SassLibrary.Sass_Value sass_make_number(double val, Pointer unit);
	/**
	 * Original signature : <code>Sass_Value* sass_make_number(double, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:98</i>
	 */
	SassLibrary.Sass_Value sass_make_number(double val, String unit);
	/**
	 * Original signature : <code>Sass_Value* sass_make_color(double, double, double, double)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:99</i>
	 */
	SassLibrary.Sass_Value sass_make_color(double r, double g, double b, double a);
	/**
	 * Original signature : <code>Sass_Value* sass_make_list(size_t, Sass_Separator)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:100</i>
	 */
	SassLibrary.Sass_Value sass_make_list(NativeSize len, int sep);
	/**
	 * Original signature : <code>Sass_Value* sass_make_map(size_t)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:101</i>
	 */
	SassLibrary.Sass_Value sass_make_map(NativeSize len);
	/**
	 * Original signature : <code>Sass_Value* sass_make_error(const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:102</i><br>
	 * @deprecated use the safer methods {@link #sass_make_error(java.lang.String)} and {@link #sass_make_error(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	SassLibrary.Sass_Value sass_make_error(Pointer msg);
	/**
	 * Original signature : <code>Sass_Value* sass_make_error(const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:102</i>
	 */
	SassLibrary.Sass_Value sass_make_error(String msg);
	/**
	 * Original signature : <code>Sass_Value* sass_make_warning(const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:103</i><br>
	 * @deprecated use the safer methods {@link #sass_make_warning(java.lang.String)} and {@link #sass_make_warning(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	SassLibrary.Sass_Value sass_make_warning(Pointer msg);
	/**
	 * Original signature : <code>Sass_Value* sass_make_warning(const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:103</i>
	 */
	SassLibrary.Sass_Value sass_make_warning(String msg);
	/**
	 * Means we will delete recursively for lists and maps<br>
	 * Original signature : <code>void sass_delete_value(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:108</i>
	 */
	void sass_delete_value(SassLibrary.Sass_Value val);
	/**
	 * Make a deep cloned copy of the given sass value<br>
	 * Original signature : <code>Sass_Value* sass_clone_value(Sass_Value*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_values.h:111</i>
	 */
	SassLibrary.Sass_Value sass_clone_value(SassLibrary.Sass_Value val);
	/**
	 * The pointer is mostly used to store the callback into the actual binding<br>
	 * Original signature : <code>Sass_C_Import_Callback sass_make_importer(Sass_C_Import_Fn, void*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:20</i>
	 */
	SassLibrary.Sass_C_Import_Callback sass_make_importer(SassLibrary.Sass_C_Import_Fn Sass_C_Import_Fn1, Pointer cookie);
	/**
	 * Getters for import function descriptors<br>
	 * Original signature : <code>Sass_C_Import_Fn sass_import_get_function(Sass_C_Import_Callback)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:23</i>
	 */
	SassLibrary.Sass_C_Import_Fn sass_import_get_function(SassLibrary.Sass_C_Import_Callback fn);
	/**
	 * Original signature : <code>void* sass_import_get_cookie(Sass_C_Import_Callback)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:24</i>
	 */
	Pointer sass_import_get_cookie(SassLibrary.Sass_C_Import_Callback fn);
	/**
	 * Deallocator for associated memory<br>
	 * Original signature : <code>void sass_delete_importer(Sass_C_Import_Callback)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:27</i>
	 */
	void sass_delete_importer(SassLibrary.Sass_C_Import_Callback fn);
	/**
	 * Creator for sass custom importer return argument list<br>
	 * Original signature : <code>Sass_Import** sass_make_import_list(size_t)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:30</i>
	 */
	SassLibrary.Sass_Import[] sass_make_import_list(NativeSize length);
	/**
	 * Creator for a single import entry returned by the custom importer inside the list<br>
	 * Original signature : <code>Sass_Import* sass_make_import_entry(const char*, char*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:32</i><br>
	 * @deprecated use the safer methods {@link #sass_make_import_entry(java.lang.String, java.nio.ByteBuffer, java.nio.ByteBuffer)} and {@link #sass_make_import_entry(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	SassLibrary.Sass_Import sass_make_import_entry(Pointer path, Pointer source, Pointer srcmap);
	/**
	 * Creator for a single import entry returned by the custom importer inside the list<br>
	 * Original signature : <code>Sass_Import* sass_make_import_entry(const char*, char*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:32</i>
	 */
	SassLibrary.Sass_Import sass_make_import_entry(String path, ByteBuffer source, ByteBuffer srcmap);
	/**
	 * Original signature : <code>Sass_Import* sass_make_import(const char*, const char*, char*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:33</i><br>
	 * @deprecated use the safer methods {@link #sass_make_import(java.lang.String, java.lang.String, java.nio.ByteBuffer, java.nio.ByteBuffer)} and {@link #sass_make_import(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	SassLibrary.Sass_Import sass_make_import(Pointer path, Pointer base, Pointer source, Pointer srcmap);
	/**
	 * Original signature : <code>Sass_Import* sass_make_import(const char*, const char*, char*, char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:33</i>
	 */
	SassLibrary.Sass_Import sass_make_import(String path, String base, ByteBuffer source, ByteBuffer srcmap);
	/**
	 * Since we are dealing with pointers they should have a guaranteed and fixed size<br>
	 * Original signature : <code>void sass_import_set_list_entry(Sass_Import**, size_t, Sass_Import*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:37</i><br>
	 * @deprecated use the safer method {@link #sass_import_set_list_entry(sass.SassLibrary.Sass_Import[], com.ochafik.lang.jnaerator.runtime.NativeSize, sass.SassLibrary.Sass_Import)} instead
	 */
	@Deprecated 
	void sass_import_set_list_entry(PointerByReference list, NativeSize idx, SassLibrary.Sass_Import entry);
	/**
	 * Since we are dealing with pointers they should have a guaranteed and fixed size<br>
	 * Original signature : <code>void sass_import_set_list_entry(Sass_Import**, size_t, Sass_Import*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:37</i>
	 */
	void sass_import_set_list_entry(SassLibrary.Sass_Import list[], NativeSize idx, SassLibrary.Sass_Import entry);
	/**
	 * Original signature : <code>Sass_Import* sass_import_get_list_entry(Sass_Import**, size_t)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:38</i><br>
	 * @deprecated use the safer method {@link #sass_import_get_list_entry(sass.SassLibrary.Sass_Import[], com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	SassLibrary.Sass_Import sass_import_get_list_entry(PointerByReference list, NativeSize idx);
	/**
	 * Original signature : <code>Sass_Import* sass_import_get_list_entry(Sass_Import**, size_t)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:38</i>
	 */
	SassLibrary.Sass_Import sass_import_get_list_entry(SassLibrary.Sass_Import list[], NativeSize idx);
	/**
	 * Getters for import entry<br>
	 * Original signature : <code>char* sass_import_get_path(Sass_Import*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:41</i>
	 */
	Pointer sass_import_get_path(SassLibrary.Sass_Import Sass_ImportPtr1);
	/**
	 * Original signature : <code>char* sass_import_get_base(Sass_Import*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:42</i>
	 */
	Pointer sass_import_get_base(SassLibrary.Sass_Import Sass_ImportPtr1);
	/**
	 * Original signature : <code>char* sass_import_get_source(Sass_Import*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:43</i>
	 */
	Pointer sass_import_get_source(SassLibrary.Sass_Import Sass_ImportPtr1);
	/**
	 * Original signature : <code>char* sass_import_get_srcmap(Sass_Import*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:44</i>
	 */
	Pointer sass_import_get_srcmap(SassLibrary.Sass_Import Sass_ImportPtr1);
	/**
	 * The property on our struct will be reset to NULL<br>
	 * Original signature : <code>char* sass_import_take_source(Sass_Import*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:47</i>
	 */
	Pointer sass_import_take_source(SassLibrary.Sass_Import Sass_ImportPtr1);
	/**
	 * Original signature : <code>char* sass_import_take_srcmap(Sass_Import*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:48</i>
	 */
	Pointer sass_import_take_srcmap(SassLibrary.Sass_Import Sass_ImportPtr1);
	/**
	 * Deallocator for associated memory (incl. entries)<br>
	 * Original signature : <code>void sass_delete_import_list(Sass_Import**)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:51</i><br>
	 * @deprecated use the safer method {@link #sass_delete_import_list(sass.SassLibrary.Sass_Import[])} instead
	 */
	@Deprecated 
	void sass_delete_import_list(PointerByReference Sass_ImportPtrPtr1);
	/**
	 * Deallocator for associated memory (incl. entries)<br>
	 * Original signature : <code>void sass_delete_import_list(Sass_Import**)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:51</i>
	 */
	void sass_delete_import_list(SassLibrary.Sass_Import Sass_ImportPtrPtr1[]);
	/**
	 * Just in case we have some stray import structs<br>
	 * Original signature : <code>void sass_delete_import(Sass_Import*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:53</i>
	 */
	void sass_delete_import(SassLibrary.Sass_Import Sass_ImportPtr1);
	/**
	 * Creators for sass function list and function descriptors<br>
	 * Original signature : <code>Sass_C_Function_List sass_make_function_list(size_t)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:67</i>
	 */
	SassLibrary.Sass_C_Function_List sass_make_function_list(NativeSize length);
	/**
	 * Original signature : <code>Sass_C_Function_Callback sass_make_function(const char*, Sass_C_Function, void*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:68</i><br>
	 * @deprecated use the safer methods {@link #sass_make_function(java.lang.String, sass.SassLibrary.Sass_C_Function, com.sun.jna.Pointer)} and {@link #sass_make_function(com.sun.jna.Pointer, sass.SassLibrary.Sass_C_Function, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	SassLibrary.Sass_C_Function_Callback sass_make_function(Pointer signature, SassLibrary.Sass_C_Function fn, Pointer cookie);
	/**
	 * Original signature : <code>Sass_C_Function_Callback sass_make_function(const char*, Sass_C_Function, void*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:68</i>
	 */
	SassLibrary.Sass_C_Function_Callback sass_make_function(String signature, SassLibrary.Sass_C_Function fn, Pointer cookie);
	/**
	 * Setters and getters for callbacks on function lists<br>
	 * Original signature : <code>Sass_C_Function_Callback sass_function_get_list_entry(Sass_C_Function_List, size_t)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:71</i>
	 */
	SassLibrary.Sass_C_Function_Callback sass_function_get_list_entry(SassLibrary.Sass_C_Function_List list, NativeSize pos);
	/**
	 * Original signature : <code>void sass_function_set_list_entry(Sass_C_Function_List, size_t, Sass_C_Function_Callback)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:72</i>
	 */
	void sass_function_set_list_entry(SassLibrary.Sass_C_Function_List list, NativeSize pos, SassLibrary.Sass_C_Function_Callback cb);
	/**
	 * Getters for custom function descriptors<br>
	 * Original signature : <code>char* sass_function_get_signature(Sass_C_Function_Callback)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:75</i>
	 */
	Pointer sass_function_get_signature(SassLibrary.Sass_C_Function_Callback fn);
	/**
	 * Original signature : <code>Sass_C_Function sass_function_get_function(Sass_C_Function_Callback)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:76</i>
	 */
	SassLibrary.Sass_C_Function sass_function_get_function(SassLibrary.Sass_C_Function_Callback fn);
	/**
	 * Original signature : <code>void* sass_function_get_cookie(Sass_C_Function_Callback)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_functions.h:77</i>
	 */
	Pointer sass_function_get_cookie(SassLibrary.Sass_C_Function_Callback fn);
	/**
	 * Some convenient string helper function<br>
	 * Original signature : <code>char* sass_string_quote(const char*, const char)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:35</i><br>
	 * @deprecated use the safer methods {@link #sass_string_quote(java.lang.String, byte)} and {@link #sass_string_quote(com.sun.jna.Pointer, byte)} instead
	 */
	@Deprecated 
	Pointer sass_string_quote(Pointer str, byte quotemark);
	/**
	 * Some convenient string helper function<br>
	 * Original signature : <code>char* sass_string_quote(const char*, const char)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:35</i>
	 */
	Pointer sass_string_quote(String str, byte quotemark);
	/**
	 * Original signature : <code>char* sass_string_unquote(const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:36</i><br>
	 * @deprecated use the safer methods {@link #sass_string_unquote(java.lang.String)} and {@link #sass_string_unquote(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer sass_string_unquote(Pointer str);
	/**
	 * Original signature : <code>char* sass_string_unquote(const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:36</i>
	 */
	Pointer sass_string_unquote(String str);
	/**
	 * Get compiled libsass version<br>
	 * Original signature : <code>char* libsass_version()</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass.h:39</i>
	 */
	Pointer libsass_version();
	/**
	 * Create and initialize an option struct<br>
	 * Original signature : <code>Sass_Options* sass_make_options()</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:22</i>
	 */
	SassLibrary.Sass_Options sass_make_options();
	/**
	 * Create and initialize a specific context<br>
	 * Original signature : <code>Sass_File_Context* sass_make_file_context(const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:24</i><br>
	 * @deprecated use the safer methods {@link #sass_make_file_context(java.lang.String)} and {@link #sass_make_file_context(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	SassLibrary.Sass_File_Context sass_make_file_context(Pointer input_path);
	/**
	 * Create and initialize a specific context<br>
	 * Original signature : <code>Sass_File_Context* sass_make_file_context(const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:24</i>
	 */
	SassLibrary.Sass_File_Context sass_make_file_context(String input_path);
	/**
	 * Original signature : <code>Sass_Data_Context* sass_make_data_context(char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:25</i><br>
	 * @deprecated use the safer methods {@link #sass_make_data_context(java.nio.ByteBuffer)} and {@link #sass_make_data_context(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	SassLibrary.Sass_Data_Context sass_make_data_context(Pointer source_string);
	/**
	 * Original signature : <code>Sass_Data_Context* sass_make_data_context(char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:25</i>
	 */
	SassLibrary.Sass_Data_Context sass_make_data_context(ByteBuffer source_string);
	/**
	 * Call the compilation step for the specific context<br>
	 * Original signature : <code>int sass_compile_file_context(Sass_File_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:28</i>
	 */
	int sass_compile_file_context(SassLibrary.Sass_File_Context ctx);
	/**
	 * Original signature : <code>int sass_compile_data_context(Sass_Data_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:29</i>
	 */
	int sass_compile_data_context(SassLibrary.Sass_Data_Context ctx);
	/**
	 * Create a sass compiler instance for more control<br>
	 * Original signature : <code>Sass_Compiler* sass_make_file_compiler(Sass_File_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:32</i>
	 */
	SassLibrary.Sass_Compiler sass_make_file_compiler(SassLibrary.Sass_File_Context file_ctx);
	/**
	 * Original signature : <code>Sass_Compiler* sass_make_data_compiler(Sass_Data_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:33</i>
	 */
	SassLibrary.Sass_Compiler sass_make_data_compiler(SassLibrary.Sass_Data_Context data_ctx);
	/**
	 * Usefull if you only want to query the included files<br>
	 * Original signature : <code>int sass_compiler_parse(Sass_Compiler*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:37</i>
	 */
	int sass_compiler_parse(SassLibrary.Sass_Compiler compiler);
	/**
	 * Original signature : <code>int sass_compiler_execute(Sass_Compiler*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:38</i>
	 */
	int sass_compiler_execute(SassLibrary.Sass_Compiler compiler);
	/**
	 * This does _not_ include any contexts or options<br>
	 * Original signature : <code>void sass_delete_compiler(Sass_Compiler*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:42</i>
	 */
	void sass_delete_compiler(SassLibrary.Sass_Compiler compiler);
	/**
	 * Release all memory allocated and also ourself<br>
	 * Original signature : <code>void sass_delete_file_context(Sass_File_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:45</i>
	 */
	void sass_delete_file_context(SassLibrary.Sass_File_Context ctx);
	/**
	 * Original signature : <code>void sass_delete_data_context(Sass_Data_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:46</i>
	 */
	void sass_delete_data_context(SassLibrary.Sass_Data_Context ctx);
	/**
	 * Getters for context from specific implementation<br>
	 * Original signature : <code>Sass_Context* sass_file_context_get_context(Sass_File_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:49</i>
	 */
	SassLibrary.Sass_Context sass_file_context_get_context(SassLibrary.Sass_File_Context file_ctx);
	/**
	 * Original signature : <code>Sass_Context* sass_data_context_get_context(Sass_Data_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:50</i>
	 */
	SassLibrary.Sass_Context sass_data_context_get_context(SassLibrary.Sass_Data_Context data_ctx);
	/**
	 * Getters for context options from Sass_Context<br>
	 * Original signature : <code>Sass_Options* sass_context_get_options(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:53</i>
	 */
	SassLibrary.Sass_Options sass_context_get_options(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>Sass_Options* sass_file_context_get_options(Sass_File_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:54</i>
	 */
	SassLibrary.Sass_Options sass_file_context_get_options(SassLibrary.Sass_File_Context file_ctx);
	/**
	 * Original signature : <code>Sass_Options* sass_data_context_get_options(Sass_Data_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:55</i>
	 */
	SassLibrary.Sass_Options sass_data_context_get_options(SassLibrary.Sass_Data_Context data_ctx);
	/**
	 * Original signature : <code>void sass_file_context_set_options(Sass_File_Context*, Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:56</i>
	 */
	void sass_file_context_set_options(SassLibrary.Sass_File_Context file_ctx, SassLibrary.Sass_Options opt);
	/**
	 * Original signature : <code>void sass_data_context_set_options(Sass_Data_Context*, Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:57</i>
	 */
	void sass_data_context_set_options(SassLibrary.Sass_Data_Context data_ctx, SassLibrary.Sass_Options opt);
	/**
	 * Getters for options<br>
	 * Original signature : <code>int sass_option_get_precision(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:61</i>
	 */
	int sass_option_get_precision(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>Sass_Output_Style sass_option_get_output_style(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:62</i>
	 */
	int sass_option_get_output_style(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>bool sass_option_get_source_comments(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:63</i>
	 */
	byte sass_option_get_source_comments(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>bool sass_option_get_source_map_embed(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:64</i>
	 */
	byte sass_option_get_source_map_embed(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>bool sass_option_get_source_map_contents(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:65</i>
	 */
	byte sass_option_get_source_map_contents(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>bool sass_option_get_omit_source_map_url(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:66</i>
	 */
	byte sass_option_get_omit_source_map_url(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>bool sass_option_get_is_indented_syntax_src(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:67</i>
	 */
	byte sass_option_get_is_indented_syntax_src(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>char* sass_option_get_input_path(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:68</i>
	 */
	Pointer sass_option_get_input_path(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>char* sass_option_get_output_path(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:69</i>
	 */
	Pointer sass_option_get_output_path(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>char* sass_option_get_image_path(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:70</i>
	 */
	Pointer sass_option_get_image_path(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>char* sass_option_get_include_path(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:71</i>
	 */
	Pointer sass_option_get_include_path(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>char* sass_option_get_source_map_file(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:72</i>
	 */
	Pointer sass_option_get_source_map_file(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>Sass_C_Function_List sass_option_get_c_functions(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:73</i>
	 */
	SassLibrary.Sass_C_Function_List sass_option_get_c_functions(SassLibrary.Sass_Options options);
	/**
	 * Original signature : <code>Sass_C_Import_Callback sass_option_get_importer(Sass_Options*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:74</i>
	 */
	SassLibrary.Sass_C_Import_Callback sass_option_get_importer(SassLibrary.Sass_Options options);
	/**
	 * Setters for options<br>
	 * Original signature : <code>void sass_option_set_precision(Sass_Options*, int)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:77</i>
	 */
	void sass_option_set_precision(SassLibrary.Sass_Options options, int precision);
	/**
	 * Original signature : <code>void sass_option_set_output_style(Sass_Options*, Sass_Output_Style)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:78</i>
	 */
	void sass_option_set_output_style(SassLibrary.Sass_Options options, int output_style);
	/**
	 * Original signature : <code>void sass_option_set_source_comments(Sass_Options*, bool)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:79</i>
	 */
	void sass_option_set_source_comments(SassLibrary.Sass_Options options, byte source_comments);
	/**
	 * Original signature : <code>void sass_option_set_source_map_embed(Sass_Options*, bool)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:80</i>
	 */
	void sass_option_set_source_map_embed(SassLibrary.Sass_Options options, byte source_map_embed);
	/**
	 * Original signature : <code>void sass_option_set_source_map_contents(Sass_Options*, bool)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:81</i>
	 */
	void sass_option_set_source_map_contents(SassLibrary.Sass_Options options, byte source_map_contents);
	/**
	 * Original signature : <code>void sass_option_set_omit_source_map_url(Sass_Options*, bool)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:82</i>
	 */
	void sass_option_set_omit_source_map_url(SassLibrary.Sass_Options options, byte omit_source_map_url);
	/**
	 * Original signature : <code>void sass_option_set_is_indented_syntax_src(Sass_Options*, bool)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:83</i>
	 */
	void sass_option_set_is_indented_syntax_src(SassLibrary.Sass_Options options, byte is_indented_syntax_src);
	/**
	 * Original signature : <code>void sass_option_set_input_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:84</i><br>
	 * @deprecated use the safer methods {@link #sass_option_set_input_path(sass.SassLibrary.Sass_Options, java.lang.String)} and {@link #sass_option_set_input_path(sass.SassLibrary.Sass_Options, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void sass_option_set_input_path(SassLibrary.Sass_Options options, Pointer input_path);
	/**
	 * Original signature : <code>void sass_option_set_input_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:84</i>
	 */
	void sass_option_set_input_path(SassLibrary.Sass_Options options, String input_path);
	/**
	 * Original signature : <code>void sass_option_set_output_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:85</i><br>
	 * @deprecated use the safer methods {@link #sass_option_set_output_path(sass.SassLibrary.Sass_Options, java.lang.String)} and {@link #sass_option_set_output_path(sass.SassLibrary.Sass_Options, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void sass_option_set_output_path(SassLibrary.Sass_Options options, Pointer output_path);
	/**
	 * Original signature : <code>void sass_option_set_output_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:85</i>
	 */
	void sass_option_set_output_path(SassLibrary.Sass_Options options, String output_path);
	/**
	 * Original signature : <code>void sass_option_set_image_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:86</i><br>
	 * @deprecated use the safer methods {@link #sass_option_set_image_path(sass.SassLibrary.Sass_Options, java.lang.String)} and {@link #sass_option_set_image_path(sass.SassLibrary.Sass_Options, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void sass_option_set_image_path(SassLibrary.Sass_Options options, Pointer image_path);
	/**
	 * Original signature : <code>void sass_option_set_image_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:86</i>
	 */
	void sass_option_set_image_path(SassLibrary.Sass_Options options, String image_path);
	/**
	 * Original signature : <code>void sass_option_set_include_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:87</i><br>
	 * @deprecated use the safer methods {@link #sass_option_set_include_path(sass.SassLibrary.Sass_Options, java.lang.String)} and {@link #sass_option_set_include_path(sass.SassLibrary.Sass_Options, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void sass_option_set_include_path(SassLibrary.Sass_Options options, Pointer include_path);
	/**
	 * Original signature : <code>void sass_option_set_include_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:87</i>
	 */
	void sass_option_set_include_path(SassLibrary.Sass_Options options, String include_path);
	/**
	 * Original signature : <code>void sass_option_set_source_map_file(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:88</i><br>
	 * @deprecated use the safer methods {@link #sass_option_set_source_map_file(sass.SassLibrary.Sass_Options, java.lang.String)} and {@link #sass_option_set_source_map_file(sass.SassLibrary.Sass_Options, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void sass_option_set_source_map_file(SassLibrary.Sass_Options options, Pointer source_map_file);
	/**
	 * Original signature : <code>void sass_option_set_source_map_file(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:88</i>
	 */
	void sass_option_set_source_map_file(SassLibrary.Sass_Options options, String source_map_file);
	/**
	 * Original signature : <code>void sass_option_set_c_functions(Sass_Options*, Sass_C_Function_List)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:89</i>
	 */
	void sass_option_set_c_functions(SassLibrary.Sass_Options options, SassLibrary.Sass_C_Function_List c_functions);
	/**
	 * Original signature : <code>void sass_option_set_importer(Sass_Options*, Sass_C_Import_Callback)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:90</i>
	 */
	void sass_option_set_importer(SassLibrary.Sass_Options options, SassLibrary.Sass_C_Import_Callback importer);
	/**
	 * Getter for context<br>
	 * Original signature : <code>char* sass_context_get_output_string(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:94</i>
	 */
	Pointer sass_context_get_output_string(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>int sass_context_get_error_status(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:95</i>
	 */
	int sass_context_get_error_status(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>char* sass_context_get_error_json(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:96</i>
	 */
	Pointer sass_context_get_error_json(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>char* sass_context_get_error_message(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:97</i>
	 */
	Pointer sass_context_get_error_message(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>char* sass_context_get_error_file(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:98</i>
	 */
	Pointer sass_context_get_error_file(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>size_t sass_context_get_error_line(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:99</i>
	 */
	NativeSize sass_context_get_error_line(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>size_t sass_context_get_error_column(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:100</i>
	 */
	NativeSize sass_context_get_error_column(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>char* sass_context_get_source_map_string(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:101</i>
	 */
	Pointer sass_context_get_source_map_string(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>char** sass_context_get_included_files(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:102</i>
	 */
	PointerByReference sass_context_get_included_files(SassLibrary.Sass_Context ctx);
	/**
	 * Take ownership of memory (value on context is set to 0)<br>
	 * Original signature : <code>char* sass_context_take_error_json(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:105</i>
	 */
	Pointer sass_context_take_error_json(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>char* sass_context_take_error_message(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:106</i>
	 */
	Pointer sass_context_take_error_message(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>char* sass_context_take_error_file(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:107</i>
	 */
	Pointer sass_context_take_error_file(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>char* sass_context_take_output_string(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:108</i>
	 */
	Pointer sass_context_take_output_string(SassLibrary.Sass_Context ctx);
	/**
	 * Original signature : <code>char* sass_context_take_source_map_string(Sass_Context*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:109</i>
	 */
	Pointer sass_context_take_source_map_string(SassLibrary.Sass_Context ctx);
	/**
	 * Push function for include paths (no manipulation support for now)<br>
	 * Original signature : <code>void sass_option_push_include_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:112</i><br>
	 * @deprecated use the safer methods {@link #sass_option_push_include_path(sass.SassLibrary.Sass_Options, java.lang.String)} and {@link #sass_option_push_include_path(sass.SassLibrary.Sass_Options, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void sass_option_push_include_path(SassLibrary.Sass_Options options, Pointer path);
	/**
	 * Push function for include paths (no manipulation support for now)<br>
	 * Original signature : <code>void sass_option_push_include_path(Sass_Options*, const char*)</code><br>
	 * <i>native declaration : /lrdev/repos/github/sass/node-sass/src/./libsass/sass_context.h:112</i>
	 */
	void sass_option_push_include_path(SassLibrary.Sass_Options options, String path);
	/// This variable is used by `gamma' and `lgamma'.
	public static final GlobalInt signgam = new GlobalInt(SassLibrary.JNA_NATIVE_LIB, "signgam");
	/**
	 * This variable can be changed at run-time to any of the values above to<br>
	 * affect floating point error handling behavior (it may also be necessary<br>
	 * to change the hardware FPU exception settings).
	 */
	public static final GlobalInt _LIB_VERSION = new GlobalInt(SassLibrary.JNA_NATIVE_LIB, "_LIB_VERSION");
	public static class Sass_Context extends PointerType {
		public Sass_Context(Pointer address) {
			super(address);
		}
		public Sass_Context() {
			super();
		}
	};
	public static class Sass_Import extends PointerType {
		public Sass_Import(Pointer address) {
			super(address);
		}
		public Sass_Import() {
			super();
		}
	};
	public static class Sass_Compiler extends PointerType {
		public Sass_Compiler(Pointer address) {
			super(address);
		}
		public Sass_Compiler() {
			super();
		}
	};
	public static class Sass_C_Function_List extends PointerType {
		public Sass_C_Function_List(Pointer address) {
			super(address);
		}
		public Sass_C_Function_List() {
			super();
		}
	};
	public static class Sass_Value extends PointerType {
		public Sass_Value(Pointer address) {
			super(address);
		}
		public Sass_Value() {
			super();
		}
	};
	public static class Sass_C_Function_Callback extends PointerType {
		public Sass_C_Function_Callback(Pointer address) {
			super(address);
		}
		public Sass_C_Function_Callback() {
			super();
		}
	};
	public static class Sass_File_Context extends PointerType {
		public Sass_File_Context(Pointer address) {
			super(address);
		}
		public Sass_File_Context() {
			super();
		}
	};
	public static class Sass_C_Import_Callback extends PointerType {
		public Sass_C_Import_Callback(Pointer address) {
			super(address);
		}
		public Sass_C_Import_Callback() {
			super();
		}
	};
	public static class Sass_Data_Context extends PointerType {
		public Sass_Data_Context(Pointer address) {
			super(address);
		}
		public Sass_Data_Context() {
			super();
		}
	};
	public static class Sass_Options extends PointerType {
		public Sass_Options(Pointer address) {
			super(address);
		}
		public Sass_Options() {
			super();
		}
	};
}
