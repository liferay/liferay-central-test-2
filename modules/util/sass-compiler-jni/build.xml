<?xml version="1.0"?>
<!DOCTYPE project>

<project>
	<import file="../../../tools/sdk/build-common-osgi-plugin.xml" />

	<macrodef name="build-libsass">
		<attribute name="libsass.lib.input.file" />
		<attribute name="libsass.lib.output.file" />
		<attribute name="libsass.make.exe" />
		<attribute name="libsass.resources.dir" />

		<sequential>
			<if>
				<not>
					<available file="libsass-3.2.5.zip" />
				</not>
				<then>
					<mirrors-get
						dest="libsass-3.2.5.zip"
						src="https://github.com/sass/libsass/archive/3.2.5.zip"
					/>
				</then>
			</if>

			<unzip
				dest="tmp"
				src="libsass-3.2.5.zip"
			/>

<!--
			<patch
				dir="tmp/libsass-3.2.5"
				patchfile="patches/LPS-52961.patch"
			/>
-->

			<exec
				command="@{libsass.make.exe} shared"
				dir="tmp/libsass-3.2.5"
			/>

			<copy todir="resources/@{libsass.resources.dir}">
				<fileset dir="tmp/libsass-3.2.5/lib">
					<filename name="@{libsass.lib.input.file}" />
				</fileset>
				<filtermapper>
					<replacestring
						from="@{libsass.lib.input.file}"
						to="@{libsass.lib.output.file}"
					/>
				</filtermapper>
			</copy>

			<delete dir="tmp" />
		</sequential>
	</macrodef>

	<target name="build-libsass-darwin">
		<build-libsass
			libsass.lib.input.file="libsass.dylib"
			libsass.lib.output.file="libliferaysass.dylib"
			libsass.make.exe="make"
			libsass.resources.dir="darwin"
		/>
	</target>

	<target name="build-libsass-linux-x86">
		<build-libsass
			libsass.lib.input.file="libsass.so"
			libsass.lib.output.file="libliferaysass.so"
			libsass.make.exe="make"
			libsass.resources.dir="linux-x86"
		/>
	</target>

	<target name="build-libsass-linux-x86-64">
		<build-libsass
			libsass.lib.input.file="libsass.so"
			libsass.lib.output.file="libliferaysass.so"
			libsass.make.exe="make"
			libsass.resources.dir="linux-x86-64"
		/>
	</target>

	<target name="build-libsass-win32-x86">
		<build-libsass
			libsass.lib.input.file="sass.dll"
			libsass.lib.output.file="liferaysass.dll"
			libsass.make.exe="mingw32-make.exe"
			libsass.resources.dir="win32-x86"
		/>
	</target>

	<target name="build-libsass-win32-x86-64">
		<build-libsass
			libsass.lib.input.file="sass.dll"
			libsass.lib.output.file="liferaysass.dll"
			libsass.make.exe="mingw32-make.exe"
			libsass.resources.dir="win32-x86-64"
		/>
	</target>

	<target name="compile">
		<if>
			<not>
				<available file="src/com/liferay/sass/compiler/jni/internal/libsass/LiferaysassLibrary.java" />
			</not>
			<then>
				<mirrors-get
					dest="libsass-3.2.5.zip"
					src="https://github.com/sass/libsass/archive/3.2.5.zip"
				/>

				<unzip
					dest="tmp"
					src="libsass-3.2.5.zip"
				/>

				<delete file="libsass-3.2.5.zip" />

				<mirrors-get
					dest="jnaerator-0.11-shaded.jar"
					src="https://oss.sonatype.org/content/groups/public/com/nativelibs4java/jnaerator/0.11/jnaerator-0.11-shaded.jar"
				/>

				<java
					dir="tmp/libsass-3.2.5"
					jar="jnaerator-0.11-shaded.jar"
					fork="true"
					failonerror="true"
				>
					<arg line="-f -library liferaysass -mode Directory -o ../../src -package com.liferay.sass.compiler.jni.internal.libsass -runtime JNAerator sass_context.h" />
				</java>

				<delete file="jnaerator-0.11-shaded.jar" />

				<move
					file="src/com/liferay/sass/compiler/jni/internal/libsass/LiferaysassLibrary.java"
					todir="tmp"
				/>

				<concat destfile="src/com/liferay/sass/compiler/jni/internal/libsass/LiferaysassLibrary.java">
					<header >/* @generated */</header>
					<filelist dir="tmp" files="LiferaysassLibrary.java" />
				</concat>

				<delete dir="tmp" />
			</then>
		</if>

		<if>
			<not>
				<available file="test/unit/com/liferay/sass/compiler/jni/internal/dependencies/sass-spec" />
			</not>
			<then>
				<mkdir dir="test/unit/com/liferay/sass/compiler/jni/internal/dependencies/sass-spec" />

				<mirrors-get
					dest="sass-spec.zip"
					src="https://github.com/sass/sass-spec/archive/3818b9d686765461add05e996d990b085e15a348.zip"
				/>

				<unzip
					dest="test/unit/com/liferay/sass/compiler/jni/internal/dependencies/sass-spec"
					src="sass-spec.zip"
				>
					<patternset>
						<include name="**/spec/basic/**" />
					</patternset>
					<cutdirsmapper dirs="3" />
				</unzip>

				<delete file="sass-spec.zip" />
			</then>
		</if>

		<compile
			module.dir="${basedir}"
		/>
	</target>
</project>