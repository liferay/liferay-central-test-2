<?xml version="1.0"?>
<!DOCTYPE project>

<project name="build-app">
	<property name="liferay.home" value="${basedir}/../bundles" />

	<property name="osgi.dir" value="${liferay.home}/osgi" />

	<macrodef name="set-artifact-versions-previous-release">
		<attribute name="app.version.previous.release" />

		<sequential>
			<property name="artifact.versions.previous.release" value="${app.artifacts-@{app.version.previous.release}}" />
		</sequential>
	</macrodef>

	<target depends="dist-module-artifacts,write-app-change-log" name="build-app">
		<delete file="${dist.dir}/ticket.list.tmp" />
	</target>

	<target depends="dist-module-artifacts-lpkg,write-lpkg-marketplace-properties" name="build-app-lpkg" unless="module.dirs.null">
		<zip basedir="${osgi.dir}/marketplace" destfile="${osgi.dir}/marketplace/${app.name}.lpkg" includes="*.jar,*.war,liferay-marketplace.properties" />

		<delete>
			<fileset dir="${osgi.dir}/marketplace" includes="*.jar,*.war,liferay-marketplace.properties" />
		</delete>
	</target>

	<target name="build-app-lpkg-all">
		<pathconvert pathsep="," property="app.names">
			<globmapper from="${modules.dir}${file.separator}apps${file.separator}*" to="*" />
			<path>
				<dirset dir="${basedir}" includes="apps/*" />
			</path>
		</pathconvert>

		<for list="${app.names}" param="app.name">
			<sequential>
				<antcall inheritall="false" target="build-app-lpkg">
					<param name="app.name" value="@{app.name}" />
				</antcall>
			</sequential>
		</for>

		<antcall target="index-modules-and-app-lpkgs" />
	</target>

	<target name="check-app-version">
		<fail message="Please provide a value for the property &quot;app.version&quot; when running this target.">
			<condition>
				<not>
					<isset property="app.version" />
				</not>
			</condition>
		</fail>
	</target>

	<target depends="check-app-version,init-build-app" name="check-stale-artifacts">
		<property location="${gradle.wrapper.path}" name="gradle.wrapper.path.absolute" />

		<exec dir="${app.dir}" executable="${gradle.wrapper.path.absolute}" outputproperty="stale.artifacts.output">
			<arg value="printStaleArtifact" />
			<arg value="-q" />
		</exec>

		<loadfile property="module.stale.artifacts">
			<filterchain>
				<linecontains>
					<contains value="${app.name}" />
				</linecontains>
			</filterchain>
			<propertyresource name="stale.artifacts.output" />
		</loadfile>

		<fail message="Stale artifacts detected:${line.separator}${module.stale.artifacts}">
			<condition>
				<not>
					<equals arg1="${stale.artifacts.output}" arg2="" />
				</not>
			</condition>
		</fail>
	</target>

	<target depends="init-build-app" name="clean-app">
		<delete dir="${dist.dir}" />

		<exec dir="${releng.app.dir}" executable="git">
			<arg line="clean" />
			<arg line="-f" />
		</exec>

		<exec dir="${releng.app.dir}" executable="git">
			<arg line="checkout" />
			<arg line="app.changelog" />
		</exec>
	</target>

	<target depends="check-stale-artifacts,get-artifact-versions-previous-release" name="dist-module-artifacts">
		<mkdir dir="${dist.dir}" />

		<subant genericantfile="${basedir}/build-app-module.xml" target="dist-module-artifact">
			<dirset dir="${modules.dir}" excludes="${build.modules.excludes}" includes="${app.module.dirs}" />
			<property name="app.first.version" value="${app.first.version}" />
			<property name="artifact.versions.previous.release" value="${artifact.versions.previous.release}" />
			<property name="dist.dir" value="${dist.dir}" />
		</subant>
	</target>

	<target depends="init-build-app" name="dist-module-artifacts-lpkg" unless="module.dirs.null">
		<subant genericantfile="${modules.dir}/build-app-module.xml" target="dist-module-artifact-lpkg">
			<dirset dir="${modules.dir}" excludes="${build.modules.excludes}" includes="${app.module.dirs}" />
			<property name="osgi.dir" value="${osgi.dir}" />
			<property name="osgi.static.modules" value="${osgi.static.modules}" />
		</subant>
	</target>

	<target depends="init-build-app" name="get-app-artifacts">
		<pathconvert pathsep=",\${line.separator}&#x0009;" property="module.versions.list">
			<flattenmapper />

			<path>
				<fileset dir="${dist.dir}" includes="*.jar" />
			</path>
		</pathconvert>

		<property name="app.artifacts" value="app.artifacts-${app.version}=\${line.separator}&#x0009;${module.versions.list}" />
	</target>

	<target depends="init-build-app" name="get-app-change-log">
		<loadfile failonerror="false" property="app.ticket.list" srcfile="${dist.dir}/ticket.list.tmp">
			<filterchain>
				<tokenfilter>
					<filetokenizer />
					<replacestring from=" " to="${line.separator}" />
				</tokenfilter>

				<sortfilter />

				<uniqfilter />

				<tokenfilter>
					<filetokenizer />
					<replacestring from="${line.separator}" to=" " />
					<replaceregex pattern="^ | $" replace="" />
				</tokenfilter>
			</filterchain>
		</loadfile>

		<property name="app.change.log" value="app.change.log-${app.version}=${app.ticket.list}" />
	</target>

	<target name="get-app-change-log-header">
		<condition else="${line.separator}${line.separator}" property="app.change.log.version.separator" value="">
			<istrue value="${app.first.version}" />
		</condition>

		<property name="app.change.log.header" value="${app.change.log.version.separator}#${line.separator}# Liferay App Version ${app.version}${line.separator}#" />
	</target>

	<target name="get-app-git-id">
		<exec executable="git" outputproperty="git.rev.parse.output">
			<arg value="rev-parse" />
			<arg value="head" />
		</exec>

		<property name="app.git.id" value="app.git.id-${app.version}=${git.rev.parse.output}" />
	</target>

	<target depends="init-build-app" name="get-app-version-previous-release">
		<loadfile failonerror="false" property="app.version.previous.release" srcfile="${releng.app.dir}/app.changelog">
			<filterchain>
				<linecontains>
					<contains value="# " />
				</linecontains>

				<striplinebreaks />

				<tailfilter lines="1" />

				<tokenfilter>
					<replaceregex pattern="^.*?(\d[\d.]+\d)$" replace="\1" />
				</tokenfilter>
			</filterchain>
		</loadfile>

		<property name="app.version.previous" value="0.0.0" />
	</target>

	<target depends="get-app-version-previous-release" name="get-artifact-versions-previous-release">
		<property file="${releng.app.dir}/app.changelog" />

		<set-artifact-versions-previous-release app.version.previous.release="${app.version.previous.release}" />
	</target>

	<target depends="dist-module-artifacts-lpkg" name="get-lpkg-artifacts-list" unless="module.dirs.null">
		<pathconvert pathsep="," property="lpkg.artifacts.list">
			<chainedmapper>
				<flattenmapper />

				<regexpmapper from="^(.+?)-(\d.*?)\.jar$" to="\1#\2##" />
			</chainedmapper>
			<fileset dir="${osgi.dir}/marketplace" includes="*.jar" />
		</pathconvert>
	</target>

	<target name="index-modules-and-app-lpkgs">
		<path id="target.platform.indexer.classpath">

			<!-- Order is important -->

			<fileset dir="${liferay.home}/tools/portal-target-platform-indexer-main" includes="com.liferay.portal.target.platform.indexer.jar,com.liferay.portal.target.platform.indexer.main.jar" />
			<fileset dir="${osgi.dir}/core" includes="com.liferay.portal.bootstrap.jar,org.eclipse.osgi.jar" />
		</path>

		<java
			classname="com.liferay.portal.target.platform.indexer.main.TargetPlatformMain"
			classpathref="target.platform.indexer.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dliferay.home=${liferay.home}" />
		</java>
	</target>

	<target name="init-build-app">
		<fail message="Please specify a value for &quot;app.name&quot; when running this command.">
			<condition>
				<not>
					<or>
						<isset property="app.name" />
						<istrue value="${build.all}" />
					</or>
				</not>
			</condition>
		</fail>

		<basename file="${basedir}" property="app.name" />

		<property name="app.dir" value="${basedir}/apps/${app.name}" />

		<property name="releng.app.dir" value="${basedir}/.releng/apps/${app.name}" />

		<property name="dist.dir" value="${releng.app.dir}/dist" />

		<pathconvert pathsep="," property="app.module.dirs.excludes">
			<chainedmapper>
				<globmapper from="${modules.dir}${file.separator}*" to="*" />

				<filtermapper>
					<linecontains>
						<contains value="-dxp" />
					</linecontains>

					<replacestring from="-dxp" to="" />
				</filtermapper>
			</chainedmapper>
			<path>
				<dirset dir="${basedir}" excludes="**/*-test*" includes="apps/${app.name}/**">
					<present targetdir="${basedir}">
						<mapper from="*" to="*/.lfrbuild-portal" type="glob" />
					</present>
				</dirset>
			</path>
		</pathconvert>

		<pathconvert pathsep="," property="app.module.dirs">
			<globmapper from="${modules.dir}${file.separator}*" to="*" />
			<path>
				<dirset dir="${basedir}" excludes="**/*-test*,${app.module.dirs.excludes}" includes="apps/${app.name}/**">
					<present targetdir="${basedir}">
						<mapper from="*" to="*/.lfrbuild-portal" type="glob" />
					</present>
				</dirset>
			</path>
		</pathconvert>

		<condition property="module.dirs.null">
			<or>
				<equals arg1="${app.module.dirs}" arg2="" />
				<not>
					<isset property="app.module.dirs" />
				</not>
			</or>
		</condition>

		<condition property="app.first.version">
			<not>
				<available file="${releng.app.dir}/app.changelog" />
			</not>
		</condition>

		<property file="${basedir}/../build.properties" />

		<pathconvert property="osgi.static.modules">
			<fileset dir="${osgi.dir}/static" includes="*.jar" />

			<flattenmapper />
		</pathconvert>
	</target>

	<target name="reset-all">
		<property location="${liferay.home}/deploy" name="deploy.dir.absolute" />
		<property location="${osgi.dir}" name="osgi.dir.absolute" />

		<fail message="${osgi.dir.absolute} and ${deploy.dir.absolute} cannot be reset if ${osgi.dir.absolute}_backup and/or ${deploy.dir.absolute}_backup are not present.">
			<condition>
				<not>
					<or>
						<available file="${deploy.dir.absolute}_backup" />
						<available file="${osgi.dir.absolute}_backup" />
					</or>
				</not>
			</condition>
		</fail>

		<delete dir="${deploy.dir.absolute}" />

		<copy todir="${deploy.dir.absolute}">
			<fileset dir="${deploy.dir.absolute}_backup" includes="**/*" />
		</copy>

		<delete dir="${osgi.dir.absolute}" />

		<copy todir="${osgi.dir.absolute}">
			<fileset dir="${osgi.dir.absolute}_backup" includes="**/*" />
		</copy>
	</target>

	<target name="reset-lpkg">
		<subant genericantfile="${basedir}/build-app-module.xml" target="reset-artifact">
			<dirset dir="${modules.dir}" excludes="${build.modules.excludes}" includes="${app.module.dirs}" />
			<property name="osgi.dir" value="${osgi.dir}" />
		</subant>
	</target>

	<target depends="dist-module-artifacts,get-app-artifacts,get-app-change-log,get-app-change-log-header,get-app-git-id" name="write-app-change-log">
		<property name="double.space" value="${line.separator}${line.separator}" />

		<echo append="true" file="${releng.app.dir}/app.changelog" message="${app.change.log.header}" />

		<echo append="true" file="${releng.app.dir}/app.changelog" message="${double.space}" />

		<echo append="true" file="${releng.app.dir}/app.changelog" message="${app.artifacts}" />

		<echo append="true" file="${releng.app.dir}/app.changelog" message="${double.space}" />

		<echo append="true" file="${releng.app.dir}/app.changelog" message="${app.change.log}" />

		<echo append="true" file="${releng.app.dir}/app.changelog" message="${double.space}" />

		<echo append="true" file="${releng.app.dir}/app.changelog" message="${app.git.id}" />
	</target>

	<target depends="get-lpkg-artifacts-list" name="write-lpkg-marketplace-properties" unless="module.dirs.null">
		<echo file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="bundles=${lpkg.artifacts.list}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="${line.separator}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="context-names=" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="${line.separator}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="remote-app-id=${app.name}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="${line.separator}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="version=1.0" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="${line.separator}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="category=${app.name}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="${line.separator}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="description=${app.name}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="${line.separator}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="title=${app.name}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="${line.separator}" />

		<echo append="true" file="${osgi.dir}/marketplace/liferay-marketplace.properties" message="icon-url=https://www.liferay.com/web/guest/marketplace/-/mp/asset/icon/71985553" />
	</target>
</project>