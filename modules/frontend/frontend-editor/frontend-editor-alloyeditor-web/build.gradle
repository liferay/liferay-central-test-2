import com.liferay.gradle.util.FileUtil
import com.liferay.gradle.util.copy.StripPathSegmentsAction

configurations {
	alloyEditor
}

task buildAlloyEditor(type: Copy)

String alloyEditorVersion = "0.7.0"

File editorDestinationDir = file("tmp/META-INF/resources")
File editorSrcDir = file("src/main/resources/META-INF/resources")

buildAlloyEditor {
	File alloyEditorDestinationDir = new File(editorDestinationDir, "alloyeditor")
	File alloyEditorSrcDir = new File(editorSrcDir, "_diffs")

	doFirst {
		delete alloyEditorDestinationDir
	}

	doLast {
		FileTree alloyEditorJsFileTree = fileTree(dir: alloyEditorDestinationDir, include : "alloy-editor*.js")
		FileTree buttonsJsFileTree = fileTree(dir: new File(alloyEditorSrcDir, "buttons"), include: "**/*.js")

		alloyEditorJsFileTree.each {
			File alloyEditorJsFile ->

			File liferayAlloyEditorJsFile = new File(alloyEditorDestinationDir, "liferay-" + alloyEditorJsFile.name)

			FileUtil.concatenate(liferayAlloyEditorJsFile, files(alloyEditorJsFile, buttonsJsFileTree))
		}
	}

	duplicatesStrategy = "exclude"

	from {
		zipTree(configurations.alloyEditor.singleFile)
	} {
		eachFile new StripPathSegmentsAction(7)
		include "META-INF/resources/webjars/alloyeditor/${alloyEditorVersion}/dist/alloy-editor/**"
	}

	from alloyEditorSrcDir
	includeEmptyDirs = false
	into alloyEditorDestinationDir
}

classes {
	dependsOn buildAlloyEditor
}

dependencies {
	alloyEditor group: "org.webjars.bower", name: "alloyeditor", transitive: false, version: alloyEditorVersion

	compile group: "com.liferay.portal", name: "portal-service", version: liferay.portalVersion
	compile group: "com.liferay.portal", name: "util-taglib", version: liferay.portalVersion
	compile group: "javax.portlet", name: "portlet-api", version: "2.0"
	compile group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	compile group: "javax.servlet.jsp", name: "jsp-api", version: "2.1"
	compile group: "org.osgi", name: "org.osgi.compendium", version: "5.0.0"
	compile group: "org.osgi", name: "org.osgi.core", version: "5.0.0"
	compile project(":frontend:frontend-editor:frontend-editor-lang")
}

liferay {
	deployDir = file("${liferayHome}/osgi/modules")
}