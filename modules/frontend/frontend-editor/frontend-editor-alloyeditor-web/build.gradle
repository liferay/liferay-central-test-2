import com.liferay.gradle.util.FileUtil
import com.liferay.gradle.util.copy.StripPathSegmentsAction

task buildAlloyEditor(type: Copy)

String alloyEditorVersion = "0.4.0-alpha.1"

File editorsDestinationDir = file("tmp/META-INF/resources")
File editorsSrcDir = file("src/main/resources/META-INF/resources")
File thirdPartyDir = file("../../../../portal-web/third-party")

buildAlloyEditor {
	File alloyEditorDestinationDir = new File(editorsDestinationDir, "alloyeditor")
	File alloyEditorSrcDir = new File(editorsSrcDir, "_diffs")
	File alloyEditorZipFile = new File(thirdPartyDir, "alloy-editor-${alloyEditorVersion}.zip")

	doFirst {
		delete alloyEditorDestinationDir
	}

	doLast {
		FileTree alloyEditorJsFileTree = fileTree(dir: alloyEditorDestinationDir, include : "alloy-editor*.js")
		FileTree buttonsJsFileTree = fileTree(dir: new File(alloyEditorSrcDir, "buttons"), include: "**/*.js")

		alloyEditorJsFileTree.each {
			File alloyEditorJsFile ->

			File liferayAlloyEditorJsFile = new File(alloyEditorDestinationDir, "liferay-" + alloyEditorJsFile.name)

			FileUtil.concatenate(liferayAlloyEditorJsFile, files(alloyEditorJsFile, buttonsJsFileTree))
		}
	}

	duplicatesStrategy = "exclude"

	from(zipTree(alloyEditorZipFile)) {
		eachFile new StripPathSegmentsAction(1)
		include "alloy-editor/**"
	}

	from alloyEditorSrcDir
	includeEmptyDirs = false
	into alloyEditorDestinationDir

	onlyIf {
		!FileUtil.isUpToDate(project, alloyEditorZipFile, alloyEditorDestinationDir)
	}
}

classes {
	dependsOn buildAlloyEditor
}

dependencies {
	compile group: "com.liferay.portal", name: "portal-service", version: liferay.portalVersion
	compile group: "com.liferay.portal", name: "util-taglib", version: liferay.portalVersion
	compile group: "javax.portlet", name: "portlet-api", version: "2.0"
	compile group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	compile group: "javax.servlet.jsp", name: "jsp-api", version: "2.1"
	compile group: "org.osgi", name: "org.osgi.compendium", version: "5.0.0"
	compile group: "org.osgi", name: "org.osgi.core", version: "5.0.0"
}

liferay {
	deployDir = file("${liferayHome}/osgi/modules")
}