{"version":3,"sources":["Popover.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAqDE,OAAO","file":"bower_components/crystal-popover/src/Popover.js","sourcesContent":["'use strict';\n\nimport core from 'bower:metal/src/core';\nimport TooltipBase from 'bower:crystal-tooltip/src/TooltipBase';\nimport './Popover.soy';\n\n/**\n * Popover component. Extends the behavior from `TooltipBase`, adding\n * just some UI to it.\n */\nclass Popover extends TooltipBase {\n\t/**\n\t * Attribute synchronization logic for `visible` attribute. Updates the\n\t * element's display, since bootstrap makes it 'none' by default, so we\n\t * need to change it to 'block' when the popover becomes visible.\n\t * @param {boolean} visible\n\t */\n\tsyncVisible(visible) {\n\t\tthis.element.style.display = visible ? 'block' : '';\n\t\tsuper.syncVisible(visible);\n\t}\n}\n\n/**\n * Attributes definition.\n * @type {!Object}\n * @static\n */\nPopover.ATTRS = {\n\ttitle: {\n\t\tvalidator: core.isString\n\t},\n\n\t/**\n\t * Trigger events used to bind handlers to show and hide popover.\n\t * @type {!Array<string>}\n\t * @default ['click', 'click']\n\t */\n\ttriggerEvents: {\n\t\tvalidator: Array.isArray,\n\t\tvalue: ['click', 'click']\n\t}\n};\n\n/**\n * @inheritDoc\n * @see `Align` class.\n * @static\n */\nPopover.Align = TooltipBase.Align;\n\nPopover.ELEMENT_CLASSES = 'popover';\n\nexport default Popover;\nimport JQueryAdapter from 'bower:metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('popover', Popover)"],"sourceRoot":"/source/"}