import com.liferay.gradle.util.copy.StripPathSegmentsAction

apply plugin: "com.liferay.cache"

configurations {
	metalComponents
}

task buildMetalComponents(type: Copy)

String defineRegex = "define(['exports', '../core', '../dom/dom', '../object/object', '../component/Component', '../component/ComponentRegistry', '../component/ComponentRenderer', './SoyAop', './SoyTemplates'], function (exports, _core, _dom, _object, _Component2, _ComponentRegistry, _ComponentRenderer2, _SoyAop, _SoyTemplates) {";
String defineReplace = "define(['exports', 'soyutils', '../core', '../dom/dom', '../object/object', '../component/Component', '../component/ComponentRegistry', '../component/ComponentRenderer', './SoyAop', './SoyTemplates'], function (exports, _soyutils, _core, _dom, _object, _Component2, _ComponentRegistry, _ComponentRenderer2, _SoyAop, _SoyTemplates) {";

String metalComponentsVersion = "1.0.0-rc.8"

buildMetalComponents {
	eachFile new StripPathSegmentsAction(7)

	eachFile {
		if (name.equals("SoyRenderer.js")) {
			filter {
				String line ->

				line.replace(defineRegex, defineReplace)
			}
		}
		else if (name.equals("SoyRenderer.js.map")) {
			filter {
				String line ->

				line.replace("import core from '../core';", "import soyutils from 'soyutils';\\nimport core from '../core';")
			}
		}
	}

	from {
		zipTree(configurations.metalComponents.singleFile)
	}

	include "META-INF/resources/webjars/metal-components/${metalComponentsVersion}/build/amd-jquery/"
	include "META-INF/resources/webjars/metal-components/${metalComponentsVersion}/build/soy/"

	includeEmptyDirs = false
	into "classes/META-INF/resources"
}

cache {
	task(classes) {
		baseDir = "classes/META-INF"
		cacheDir = ".task-cache"
		skipTaskDependency configJSModules

		testFile "bower.json"
		testFile "build.gradle"
	}
}

configJSModules {
	dependsOn buildMetalComponents

	include "**/*.js"
	include "**/*.js.map"
}

dependencies {
	metalComponents group: "com.liferay.webjars", name: "com.liferay.webjars.metal-components", transitive: false, version: metalComponentsVersion
}

liferay {
	deployDir = file("${liferayHome}/osgi/modules")
}