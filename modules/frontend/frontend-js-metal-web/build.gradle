import com.liferay.gradle.util.copy.StripPathSegmentsAction

apply plugin: "com.liferay.cache"

configurations {
	crystalComponents
}

task buildCrystalComponents(type: Copy)

String crystalComponentsVersion = "1.0.0-rc.3"

String defineRegex = "define(['exports', 'metal/src/core', 'metal/src/dom/dom', 'metal/src/object/object', 'metal/src/component/Component', 'metal/src/component/ComponentRegistry', 'metal/src/component/ComponentRenderer', 'metal/src/soy/SoyAop', 'metal/src/soy/SoyTemplates'], function (exports, _core, _dom, _object, _Component2, _ComponentRegistry, _ComponentRenderer2, _SoyAop, _SoyTemplates) {";
String defineReplace = "define(['exports', 'soyutils', 'metal/src/core', 'metal/src/dom/dom', 'metal/src/object/object', 'metal/src/component/Component', 'metal/src/component/ComponentRegistry', 'metal/src/component/ComponentRenderer', 'metal/src/soy/SoyAop', 'metal/src/soy/SoyTemplates'], function (exports, _soyutils, _core, _dom, _object, _Component2, _ComponentRegistry, _ComponentRenderer2, _SoyAop, _SoyTemplates) {";

buildCrystalComponents {
	eachFile new StripPathSegmentsAction(7)

	eachFile {
		if (name.equals("SoyRenderer.js")) {
			filter {
				String line ->

				line.replace(defineRegex, defineReplace)
			}
		}
		else if (name.equals("SoyRenderer.js.map")) {
			filter {
				String line ->

				line.replace("import core from '../core';", "import soyutils from 'soyutils';\\nimport core from '../core';")
			}
		}
	}

	from {
		zipTree(configurations.crystalComponents.singleFile)
	}

	include "META-INF/resources/webjars/crystal-components/${crystalComponentsVersion}/build/amd-jquery/**"
	include "META-INF/resources/webjars/crystal-components/${crystalComponentsVersion}/build/soy/**"

	includeEmptyDirs = false
	into "classes/META-INF/resources"
}

cache {
	task(classes) {
		baseDir = "classes/META-INF"
		cacheDir = ".task-cache"
		skipTaskDependency configJSModules

		testFile "bower.json"
		testFile "build.gradle"
	}
}

configJSModules {
	dependsOn buildCrystalComponents
	include "**/*.js"
}

dependencies {
	compile group: "org.osgi", name: "org.osgi.core", version: "5.0.0"

	crystalComponents group: "org.webjars.bower", name: "crystal-components", transitive: false, version: crystalComponentsVersion
}

liferay {
	deployDir = file("${liferayHome}/osgi/modules")
}