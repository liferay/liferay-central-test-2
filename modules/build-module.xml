<?xml version="1.0"?>
<!DOCTYPE project>

<project name="build-module">
	<import file="build-common.xml" />

	<target name="all">
		<print-gradle-alternative args="clean deploy" />
	</target>

	<target name="build-css">
		<print-gradle-alternative args="buildCSS" />
	</target>

	<target name="build-lang">
		<print-gradle-alternative args="buildLang" />
	</target>

	<target name="build-service">
		<print-gradle-alternative args="buildService" />
	</target>

	<target name="build-upgrade-table">
		<print-gradle-alternative args="buildUpgradeTable" />
	</target>

	<target name="build-wsdd">
		<print-gradle-alternative args="buildWSDD" />
	</target>

	<target name="build-wsdl">
		<print-gradle-alternative args="buildWSDL" />
	</target>

	<target name="build-xsd">
		<print-gradle-alternative args="buildXSD" />
	</target>

	<target name="clean">
		<print-gradle-alternative args="clean" />
	</target>

	<target name="compile">
		<print-gradle-alternative args="classes" />
	</target>

	<target name="compile-jsp">
		<print-gradle-alternative args="compileJSP" />
	</target>

	<target name="compile-test">
		<print-gradle-alternative args="testClasses testIntegrationClasses" />
	</target>

	<target name="compile-test-integration">
		<print-gradle-alternative args="testIntegrationClasses" />
	</target>

	<target name="compile-test-unit">
		<print-gradle-alternative args="testClasses" />
	</target>

	<target name="deploy">
		<print-gradle-alternative args="deploy" />
	</target>

	<target name="format-javadoc">
		<print-gradle-alternative args="formatJavadoc" />
	</target>

	<target name="format-source">
		<print-gradle-alternative args="formatSource" />
	</target>

	<target name="format-tld">
		<print-gradle-alternative args="formatTLD" />
	</target>

	<target name="format-wsdl">
		<print-gradle-alternative args="formatWSDL" />
	</target>

	<target name="format-xsd">
		<print-gradle-alternative args="formatXSD" />
	</target>

	<target name="install">
		<print-gradle-alternative args="install" />
	</target>

	<target name="jar">
		<print-gradle-alternative args="jar" />
	</target>

	<target name="jar-javadoc">
		<print-gradle-alternative args="zipJavadoc" />
	</target>

	<target name="jar-source">
		<print-gradle-alternative args="jarSources" />
	</target>

	<target name="javadoc">
		<print-gradle-alternative args="javadoc" />
	</target>

	<target name="publish-local-m2-release">
		<print-gradle-alternative args="install" />
	</target>

	<target name="publish-local-m2-snapshot">
		<print-gradle-alternative args="install -Psnapshot" />
	</target>

	<target name="publish-remote-m2-release">
		<print-gradle-alternative args="uploadArchives" />
	</target>

	<target name="publish-remote-m2-snapshot">
		<print-gradle-alternative args="uploadArchives -Psnapshot" />
	</target>

	<target name="run-findbugs">
		<print-gradle-alternative args="findbugsMain" />
	</target>

	<target name="run-pmd">
		<print-gradle-alternative args="pmdMain pmdTest pmdTestIntegration" />
	</target>

	<target name="setup-eclipse">
		<print-gradle-alternative args="eclipse" />
	</target>

	<target name="test">
		<print-gradle-alternative args="test testIntegration" />
	</target>

	<target name="test-class">
		<if>
			<not>
				<isset property="test.class" />
			</not>
			<then>
				<fail>Use "ant test-class -Dtest.class=StringUtilTest".</fail>
			</then>
		</if>

		<if>
			<or>
				<resourcecount count="1">
					<fileset dir="src/testIntegration/java" erroronmissingdir="false" includes="**/${test.class}.java" />
				</resourcecount>
				<resourcecount count="1">
					<fileset dir="test/integration" erroronmissingdir="false" includes="**/${test.class}.java" />
				</resourcecount>
			</or>
			<then>
				<var name="test.task" value="testIntegration" />
			</then>
			<elseif>
				<or>
					<resourcecount count="1">
						<fileset dir="src/test/java" erroronmissingdir="false" includes="**/${test.class}.java" />
					</resourcecount>
					<resourcecount count="1">
						<fileset dir="test/unit" erroronmissingdir="false" includes="**/${test.class}.java" />
					</resourcecount>
				</or>
				<then>
					<var name="test.task" value="test" />
				</then>
			</elseif>
			<else>
				<fail>Test class ${test.class} cannot be found.</fail>
			</else>
		</if>

		<print-gradle-alternative args="${test.task} --tests *.${test.class}" />
	</target>

	<target name="test-integration">
		<print-gradle-alternative args="testIntegration" />
	</target>

	<target name="test-package">
		<if>
			<not>
				<isset property="test.package" />
			</not>
			<then>
				<fail>Use "ant test-package -Dtest.package=com.liferay.portal.kernel.util".</fail>
			</then>
		</if>

		<propertyregex
			global="true"
			input="${test.package}"
			property="test.package.dir"
			regexp="\."
			replace="/"
		/>

		<if>
			<or>
				<available file="src/testIntegration/java/${test.package.dir}" type="dir" />
				<available file="test/integration/${test.package.dir}" type="dir" />
			</or>
			<then>
				<print-gradle-alternative args="testIntegration --tests ${test.package}.*" />
			</then>
		</if>

		<if>
			<or>
				<available file="src/test/java/${test.package.dir}" type="dir" />
				<available file="test/unit/${test.package.dir}" type="dir" />
			</or>
			<then>
				<print-gradle-alternative args="test --tests ${test.package}.*" />
			</then>
		</if>
	</target>

	<target name="test-unit">
		<print-gradle-alternative args="test" />
	</target>

	<target name="war">
		<print-gradle-alternative args="jar" />
	</target>
</project>