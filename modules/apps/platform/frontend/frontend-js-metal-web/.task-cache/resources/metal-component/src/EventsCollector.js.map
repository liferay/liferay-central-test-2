{"version":3,"sources":["/source/EventsCollector.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport { core, Disposable } from 'metal';\nimport ComponentCollector from './ComponentCollector';\nimport { EventHandler } from 'metal-events';\n\n/**\n * Collects inline events from a passed element, detaching previously\n * attached events that are not being used anymore.\n * @param {Component} component\n * @constructor\n * @extends {Disposable}\n */\nclass EventsCollector extends Disposable {\n\tconstructor(component) {\n\t\tsuper();\n\n\t\tif (!component) {\n\t\t\tthrow new Error('The component instance is mandatory');\n\t\t}\n\n\t\t/**\n\t\t * Holds the component intance.\n\t\t * @type {!Component}\n\t\t * @protected\n\t\t */\n\t\tthis.component_ = component;\n\n\t\t/**\n\t\t * Holds the attached delegate event handles, indexed by the css selector.\n\t\t * @type {!Object<string, EventHandler>}\n\t\t * @protected\n\t\t */\n\t\tthis.eventHandles_ = {};\n\n\t\t/**\n\t\t * Holds flags indicating which selectors a group has listeners for.\n\t\t * @type {!Object<string, !Object<string, boolean>>}\n\t\t * @protected\n\t\t */\n\t\tthis.groupHasListener_ = {};\n\t}\n\n\t/**\n\t * Attaches the listener described by the given params, unless it has already\n\t * been attached.\n\t * @param {string} eventType\n\t * @param {string} fnNamesString\n\t * @param {boolean} permanent\n\t * @protected\n\t */\n\tattachListener_(eventType, fnNamesString, groupName) {\n\t\tvar selector = '[data-on' + eventType + '=\"' + fnNamesString + '\"]';\n\n\t\tthis.groupHasListener_[groupName][selector] = true;\n\n\t\tif (!this.eventHandles_[selector]) {\n\t\t\tthis.eventHandles_[selector] = new EventHandler();\n\t\t\tvar fnNames = fnNamesString.split(',');\n\t\t\tfor (var i = 0; i < fnNames.length; i++) {\n\t\t\t\tvar fn = this.getListenerFn(fnNames[i]);\n\t\t\t\tif (fn) {\n\t\t\t\t\tthis.eventHandles_[selector].add(this.component_.delegate(eventType, selector, this.onEvent_.bind(this, fn)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Attaches all listeners declared as attributes on the given element and\n\t * its children.\n\t * @param {string} content\n\t * @param {boolean} groupName\n\t */\n\tattachListeners(content, groupName) {\n\t\tthis.groupHasListener_[groupName] = {};\n\t\tthis.attachListenersFromHtml_(content, groupName);\n\t}\n\n\t/**\n\t * Attaches listeners found in the given html content.\n\t * @param {string} content\n\t * @param {boolean} groupName\n\t * @protected\n\t */\n\tattachListenersFromHtml_(content, groupName) {\n\t\tif (content.indexOf('data-on') === -1) {\n\t\t\treturn;\n\t\t}\n\t\tvar regex = /data-on([a-z]+)=['\"]([^'\"]+)['\"]/g;\n\t\tvar match = regex.exec(content);\n\t\twhile (match) {\n\t\t\tthis.attachListener_(match[1], match[2], groupName);\n\t\t\tmatch = regex.exec(content);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all previously attached event listeners to the component.\n\t */\n\tdetachAllListeners() {\n\t\tfor (var selector in this.eventHandles_) {\n\t\t\tif (this.eventHandles_[selector]) {\n\t\t\t\tthis.eventHandles_[selector].removeAllListeners();\n\t\t\t}\n\t\t}\n\t\tthis.eventHandles_ = {};\n\t\tthis.listenerCounts_ = {};\n\t}\n\n\t/**\n\t * Detaches all existing listeners that are not being used anymore.\n\t * @protected\n\t */\n\tdetachUnusedListeners() {\n\t\tfor (var selector in this.eventHandles_) {\n\t\t\tif (this.eventHandles_[selector]) {\n\t\t\t\tvar unused = true;\n\t\t\t\tfor (var groupName in this.groupHasListener_) {\n\t\t\t\t\tif (this.groupHasListener_[groupName][selector]) {\n\t\t\t\t\t\tunused = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (unused) {\n\t\t\t\t\tthis.eventHandles_[selector].removeAllListeners();\n\t\t\t\t\tthis.eventHandles_[selector] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.detachAllListeners();\n\t\tthis.component_ = null;\n\t}\n\n\t/**\n\t * Gets the listener function from its name. If the name is prefixed with a\n\t * component id, the function will be called on that specified component. Otherwise\n\t * it will be called on this event collector's component instead.\n\t * @param {string} fnName\n\t * @return {function()}\n\t */\n\tgetListenerFn(fnName) {\n\t\tvar fnComponent;\n\t\tvar split = fnName.split(':');\n\t\tif (split.length === 2) {\n\t\t\tfnName = split[1];\n\t\t\tfnComponent = ComponentCollector.components[split[0]];\n\t\t\tif (!fnComponent) {\n\t\t\t\tconsole.error('No component with the id \"' + split[0] + '\" has been collected' +\n\t\t\t\t\t'yet. Make sure that you specify an id for an existing component when ' +\n\t\t\t\t\t'adding inline listeners.'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tfnComponent = fnComponent || this.component_;\n\t\tif (core.isFunction(fnComponent[fnName])) {\n\t\t\treturn fnComponent[fnName].bind(fnComponent);\n\t\t} else {\n\t\t\tconsole.error('No function named \"' + fnName + '\" was found in the component with id \"' +\n\t\t\t\tfnComponent.id + '\". Make sure that you specify valid function names when adding ' +\n\t\t\t\t'inline listeners.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Checks if this EventsCollector instance has already attached listeners for the given\n\t * group before.\n\t * @param  {string} group\n\t * @return {boolean}\n\t */\n\thasAttachedForGroup(group) {\n\t\treturn !!this.groupHasListener_.hasOwnProperty(group);\n\t}\n\n\t/**\n\t * Fires when an event that was registered by this collector is triggered. Makes\n\t * sure that the event was meant for this component and calls the appropriate\n\t * listener function for it.\n\t * @param {!function(!Object)} fn\n\t * @param {!Object} event\n\t * @return {*} The return value of the call to the listener function, or undefined\n\t *   if no function was called.\n\t * @protected\n\t */\n\tonEvent_(fn, event) {\n\t\t// This check prevents parent components from handling their child inline listeners.\n\t\tvar eventComp = event.handledByComponent;\n\t\tif (!eventComp || eventComp === this.component_ || event.delegateTarget.contains(eventComp.element)) {\n\t\t\tevent.handledByComponent = this.component_;\n\t\t\treturn fn(event);\n\t\t}\n\t}\n}\n\nexport default EventsCollector;\n"]}