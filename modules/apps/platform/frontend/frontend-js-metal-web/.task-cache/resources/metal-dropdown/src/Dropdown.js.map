{"version":3,"sources":["/source/Dropdown.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport dom from 'metal-dom';\nimport { Align } from 'metal-position';\nimport DropdownBase from './Dropdown.soy';\nimport { EventHandler } from 'metal-events';\n\n/**\n * Dropdown component.\n */\nclass Dropdown extends DropdownBase {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(opt_config) {\n\t\tsuper(opt_config);\n\t\tthis.eventHandler_ = new EventHandler();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tsuper.attached();\n\t\tthis.eventHandler_.add(dom.on(document, 'click', this.handleDocClick_.bind(this)));\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdetached() {\n\t\tsuper.detached();\n\t\tthis.eventHandler_.removeAllListeners();\n\t}\n\n\t/**\n\t * Closes the dropdown.\n\t */\n\tclose() {\n\t\tthis.expanded = false;\n\t}\n\n\t/**\n\t * Checks if the dropdown is currently open.\n\t * @return {boolean}\n\t */\n\tisOpen() {\n\t\treturn this.expanded;\n\t}\n\n\t/**\n\t * Handles document click in order to hide menu.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleDocClick_(event) {\n\t\tif (this.element.contains(event.target)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Opens the dropdown.\n\t */\n\topen() {\n\t\tthis.expanded = true;\n\t}\n\n\t/**\n\t * Synchronization logic for `expanded` attribute.\n\t * @param {boolean} expanded\n\t */\n\tsyncExpanded(expanded) {\n\t\tif (expanded) {\n\t\t\tdom.addClasses(this.element, 'open');\n\t\t\tif (this.alignElementSelector) {\n\t\t\t\tvar alignElement = this.element.querySelector(this.alignElementSelector);\n\t\t\t\tif (alignElement) {\n\t\t\t\t\tAlign.align(this.getSurfaceElement('body'), alignElement, Dropdown.POSITION_MAP[this.position]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeClasses(this.element, 'open');\n\t\t}\n\t}\n\n\t/**\n\t * Synchronization logic for `position` attribute.\n\t * @param {string} position\n\t * @param {string} oldPosition\n\t */\n\tsyncPosition(position, oldPosition) {\n\t\tif (oldPosition) {\n\t\t\tdom.removeClasses(this.element, 'drop' + oldPosition.toLowerCase());\n\t\t}\n\t\tdom.addClasses(this.element, 'drop' + position.toLowerCase());\n\t}\n\n\t/**\n\t * Toggles the dropdown, closing it when open or opening it when closed.\n\t */\n\ttoggle() {\n\t\tthis.expanded = !this.expanded;\n\t}\n\n\t/**\n\t * Validator for the `position` attribute.\n\t * @param {string} position\n\t * @return {boolean}\n\t * @protected\n\t */\n\tvalidatePosition_(position) {\n\t\tswitch (position.toLowerCase()) {\n\t\t\tcase 'up':\n\t\t\tcase 'down':\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the default value for the `body` attribute. Retrieves existing\n\t * html for the body from the element, if there is any.\n\t * @return {?string}\n\t */\n\tvalueBodyFn_() {\n\t\tvar dropdownMenu = this.element && this.element.querySelector('.dropdown-menu');\n\t\treturn dropdownMenu ? dropdownMenu.innerHTML : '';\n\t}\n\n\t/**\n\t * Gets the default value for the `header` attribute. Retrieves existing\n\t * html for the header from the element, if there is any.\n\t * @return {?string}\n\t */\n\tvalueHeaderFn_() {\n\t\tif (this.element) {\n\t\t\tvar wrapper = document.createElement('div');\n\t\t\tfor (var i = 0; i < this.element.childNodes.length; i++) {\n\t\t\t\tif (dom.hasClass(this.element.childNodes[i], 'dropdown-menu')) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\twrapper.appendChild(this.element.childNodes[i].cloneNode(true));\n\t\t\t}\n\t\t\treturn wrapper.innerHTML;\n\t\t}\n\t\treturn '';\n\t}\n}\n\n/**\n * Attrbutes definition.\n * @type {!Object}\n * @static\n */\nDropdown.ATTRS = {\n\t/**\n\t * Optional selector for finding the element that the dropdown should be\n\t * aligned to. If given, the dropdown will automatically find the best position\n\t * to align, when the specified position doesn't work. Otherwise it will\n\t * always just follow the given position, even if it's not ideal.\n\t * @type {string}\n\t */\n\talignElementSelector: {\n\t\tvalidator: core.isString\n\t},\n\n\t/**\n\t * The dropdown's body content.\n\t * @type {string}\n\t */\n\tbody: {\n\t\tisHtml: true,\n\t\tvalueFn: 'valueBodyFn_'\n\t},\n\n\t/**\n\t * The dropdown's header content.\n\t * @type {string}\n\t */\n\theader: {\n\t\tisHtml: true,\n\t\tvalueFn: 'valueHeaderFn_'\n\t},\n\n\t/**\n\t * Flag indicating if the dropdown is expanded (open) or not.\n\t * @type {boolean}\n\t * @default false\n\t */\n\texpanded: {\n\t\tvalue: false\n\t},\n\n\t/**\n\t * The position of the dropdown (either 'up' or 'down').\n\t * @type {string}\n\t * @default 'down'\n\t */\n\tposition: {\n\t\tvalue: 'down',\n\t\tvalidator: 'validatePosition_'\n\t}\n};\n\n/**\n * Default dropdown elementClasses.\n * @default dropdown\n * @type {string}\n * @static\n */\nDropdown.ELEMENT_CLASSES = 'dropdown';\n\n/**\n * A map from the dropdown supported positions to `Align` positions.\n */\nDropdown.POSITION_MAP = {\n\tdown: Align.BottomLeft,\n\tup: Align.TopLeft\n};\n\nexport default Dropdown;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('dropdown', Dropdown);"]}