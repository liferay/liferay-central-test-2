import com.liferay.gradle.util.copy.StripPathSegmentsAction

apply plugin: "com.liferay.cache"

configurations {
	senna
}

task buildSenna(type: Copy)

String sennaVersion = "1.0.0"

buildSenna {
	eachFile new StripPathSegmentsAction(7)

	from {
		zipTree(configurations.senna.singleFile)
	}

	include "META-INF/resources/webjars/senna.js/${sennaVersion}/build/amd/"
	includeEmptyDirs = false
	into "classes/META-INF/resources"
}

cache {
	task(classes) {
		baseDir = "classes/META-INF"
		exclude "**/*.jsp"
		cacheDir = ".task-cache"

		skipTaskDependency configJSModules
		skipTaskDependency transpileJS

		testFile "build.gradle"
		testFile fileTree(dir: "src/main/resources/META-INF/resources", exclude: "**/*.jsp")
	}
}

configJSModules {
	dependsOn buildSenna
	include "**/*.js*"
}

dependencies {
	provided group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "default"
	provided group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	provided group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"

	senna group: "com.liferay.webjars", name: "com.liferay.webjars.senna.js", transitive: false, version: sennaVersion
}

liferay {
	deployDir = file("${liferayHome}/osgi/modules")
}