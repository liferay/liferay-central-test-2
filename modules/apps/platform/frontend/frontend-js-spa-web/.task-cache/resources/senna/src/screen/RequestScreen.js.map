{"version":3,"sources":["/source/RequestScreen.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport { core } from 'metal';\nimport Ajax from 'metal-ajax';\nimport MultiMap from 'metal-multimap';\nimport CancellablePromise from 'metal-promise';\nimport utils from '../utils/utils';\nimport globals from '../globals/globals';\nimport Screen from './Screen';\nimport Uri from 'metal-uri';\nimport UA from 'metal-useragent';\n\nclass RequestScreen extends Screen {\n\n\t/**\n\t * Request screen abstract class to perform io operations on descendant\n\t * screens.\n\t * @constructor\n\t * @extends {Screen}\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t * @default true\n\t\t */\n\t\tthis.cacheable = true;\n\n\t\t/**\n\t\t * Holds default http headers to set on request.\n\t\t * @type {?Object=}\n\t\t * @default {\n\t\t *   'X-PJAX': 'true',\n\t\t *   'X-Requested-With': 'XMLHttpRequest'\n\t\t * }\n\t\t * @protected\n\t\t */\n\t\tthis.httpHeaders = {\n\t\t\t'X-PJAX': 'true',\n\t\t\t'X-Requested-With': 'XMLHttpRequest'\n\t\t};\n\n\t\t/**\n\t\t * Holds default http method to perform the request.\n\t\t * @type {!string}\n\t\t * @default RequestScreen.GET\n\t\t * @protected\n\t\t */\n\t\tthis.httpMethod = RequestScreen.GET;\n\n\t\t/**\n\t\t * Holds the XHR object responsible for the request.\n\t\t * @type {XMLHttpRequest}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis.request = null;\n\n\t\t/**\n\t\t * Holds the request timeout in milliseconds.\n\t\t * @type {!number}\n\t\t * @default 30000\n\t\t * @protected\n\t\t */\n\t\tthis.timeout = 30000;\n\t}\n\n\t/**\n\t * Asserts that response status code is valid.\n\t * @param {number} status\n\t * @protected\n\t */\n\tassertValidResponseStatusCode(status) {\n\t\tif (!this.isValidResponseStatusCode(status)) {\n\t\t\tvar error = new Error('Invalid response status code. ' +\n\t\t\t\t'To customize which status codes are valid, ' +\n\t\t\t\t'overwrite `screen.isValidResponseStatusCode` method.');\n\t\t\terror.responseError = true;\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbeforeUpdateHistoryPath(path) {\n\t\tvar redirectPath = this.getRequestPath();\n\t\tif (redirectPath && redirectPath !== path) {\n\t\t\treturn redirectPath;\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tbeforeUpdateHistoryState(state) {\n\t\t// If state is ours and navigate to post-without-redirect-get set\n\t\t// history state to null, that way Senna will reload the page on\n\t\t// popstate since it cannot predict post data.\n\t\tif (state.senna && state.form && state.redirectPath === state.path) {\n\t\t\treturn null;\n\t\t}\n\t\treturn state;\n\t}\n\n\t/**\n\t * Formats load path before invoking ajax call.\n\t * @param {string} path\n\t * @return {string} Formatted path;\n\t * @protected\n\t */\n\tformatLoadPath(path) {\n\t\tif (UA.isIeOrEdge && this.httpMethod === RequestScreen.GET) {\n\t\t\tvar uri = new Uri(path);\n\t\t\turi.makeUnique();\n\t\t\treturn uri.toString();\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Gets the http headers.\n\t * @return {?Object=}\n\t */\n\tgetHttpHeaders() {\n\t\treturn this.httpHeaders;\n\t}\n\n\t/**\n\t * Gets the http method.\n\t * @return {!string}\n\t */\n\tgetHttpMethod() {\n\t\treturn this.httpMethod;\n\t}\n\n\t/**\n\t * Gets request path.\n\t * @return {string=}\n\t */\n\tgetRequestPath() {\n\t\tvar request = this.getRequest();\n\t\tif (request) {\n\t\t\treturn utils.getUrlPath(request.responseURL);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the request object.\n\t * @return {?Object}\n\t */\n\tgetRequest() {\n\t\treturn this.request;\n\t}\n\n\t/**\n\t * Gets the request timeout.\n\t * @return {!number}\n\t */\n\tgetTimeout() {\n\t\treturn this.timeout;\n\t}\n\n\t/**\n\t * Checks if response succeeded. Any status code 2xx or 3xx is considered\n\t * valid.\n\t * @param {number} statusCode\n\t */\n\tisValidResponseStatusCode(statusCode) {\n\t\treturn statusCode >= 200 && statusCode <= 399;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tload(path) {\n\t\tvar cache = this.getCache();\n\t\tif (core.isDefAndNotNull(cache)) {\n\t\t\treturn CancellablePromise.resolve(cache);\n\t\t}\n\n\t\tvar body = null;\n\t\tvar httpMethod = this.httpMethod;\n\n\t\tif (globals.capturedFormElement) {\n\t\t\tbody = new FormData(globals.capturedFormElement);\n\t\t\thttpMethod = RequestScreen.POST;\n\t\t}\n\n\t\tvar headers = new MultiMap();\n\t\tObject.keys(this.httpHeaders).forEach(header => headers.add(header, this.httpHeaders[header]));\n\n\t\treturn Ajax\n\t\t\t.request(this.formatLoadPath(path), httpMethod, body, headers, null, this.timeout)\n\t\t\t.then(xhr => {\n\t\t\t\tthis.setRequest(xhr);\n\t\t\t\tthis.assertValidResponseStatusCode(xhr.status);\n\t\t\t\tif (httpMethod === RequestScreen.GET && this.isCacheable()) {\n\t\t\t\t\tthis.addCache(xhr.responseText);\n\t\t\t\t}\n\t\t\t\treturn xhr.responseText;\n\t\t\t});\n\t}\n\n\t/**\n\t * Sets the http headers.\n\t * @param {?Object=} httpHeaders\n\t */\n\tsetHttpHeaders(httpHeaders) {\n\t\tthis.httpHeaders = httpHeaders;\n\t}\n\n\t/**\n\t * Sets the http method.\n\t * @param {!string} httpMethod\n\t */\n\tsetHttpMethod(httpMethod) {\n\t\tthis.httpMethod = httpMethod.toLowerCase();\n\t}\n\n\t/**\n\t * Sets the request object.\n\t * @param {?Object} request\n\t */\n\tsetRequest(request) {\n\t\tthis.request = request;\n\t}\n\n\t/**\n\t * Sets the request timeout in milliseconds.\n\t * @param {!number} timeout\n\t */\n\tsetTimeout(timeout) {\n\t\tthis.timeout = timeout;\n\t}\n\n}\n\n/**\n * Holds value for method get.\n * @type {string}\n * @default 'get'\n * @static\n */\nRequestScreen.GET = 'get';\n\n/**\n * Holds value for method post.\n * @type {string}\n * @default 'post'\n * @static\n */\nRequestScreen.POST = 'post';\n\nexport default RequestScreen;\n"]}