<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
AssetEntryQuery assetEntryQuery = assetPublisherDisplayContext.getAssetEntryQuery();

int end = searchContainer.getEnd();
int start = searchContainer.getStart();

List<AssetEntry> results = new ArrayList<AssetEntry>();
int total = 0;
long[] classNameIds = assetPublisherDisplayContext.getClassNameIds();

if (!portletName.equals(AssetPublisherPortletKeys.RELATED_ASSETS) || (assetEntryQuery.getLinkedAssetEntryId() > 0)) {
	long assetVocabularyId = GetterUtil.getLong(portletPreferences.getValue("assetVocabularyId", null));

	if (assetVocabularyId > 0) {

		List<AssetCategory> assetCategories = AssetCategoryLocalServiceUtil.getVocabularyRootCategories(assetVocabularyId, QueryUtil.ALL_POS, QueryUtil.ALL_POS, null);

		assetEntryQuery.setClassNameIds(classNameIds);

		for (AssetCategory assetCategory : assetCategories) {
			assetCategory = assetCategory.toEscapedModel();

			int groupTotal = 0;

			BaseModelSearchResult<AssetEntry> baseModelSearchResult = AssetPublisherUtil.getAssetEntryQueryResult(portletPreferences, assetEntryQuery, classNameIds, start, end, request, portletName, assetCategory, AssetPublisherWebConfigurationValues.SEARCH_WITH_INDEX);

			groupTotal = baseModelSearchResult.getLength();

			total += groupTotal;

			results = baseModelSearchResult.getBaseModels();

			if (!results.isEmpty() && (start < groupTotal)) {
				searchContainer.setResults(results);

				request.setAttribute("view.jsp-results", results);
%>

				<h3 class="asset-entries-group-label"><%= assetCategory.getTitle(locale) %></h3>

				<liferay-ui:ddm-template-renderer className="<%= AssetEntry.class.getName() %>" displayStyle="<%= assetPublisherDisplayContext.getDisplayStyle() %>" displayStyleGroupId="<%= assetPublisherDisplayContext.getDisplayStyleGroupId() %>" entries="<%= results %>">
					<%@ include file="/view_dynamic_list_asset.jspf" %>
				</liferay-ui:ddm-template-renderer>

<%
			}

			if (groupTotal > 0) {
				end = AssetPublisherUtil.getAssetEntryQueryResultLimit(groupTotal, end);
				start = AssetPublisherUtil.getAssetEntryQueryResultLimit(groupTotal, start);
			}

			assetEntryQuery.setEnd(QueryUtil.ALL_POS);
			assetEntryQuery.setStart(QueryUtil.ALL_POS);
		}

		searchContainer.setTotal(total);
	}
	else if (assetVocabularyId != -1) {
		assetEntryQuery.setClassNameIds(classNameIds);

		BaseModelSearchResult<AssetEntry> baseModelSearchResult = AssetPublisherUtil.getAssetEntryQueryResult(assetEntryQuery, request, portletName, start, end, AssetPublisherWebConfigurationValues.SEARCH_WITH_INDEX);

		total = baseModelSearchResult.getLength();

		searchContainer.setTotal(total);

		results = baseModelSearchResult.getBaseModels();

		if (!results.isEmpty() && (start < total)) {
			searchContainer.setResults(results);

			request.setAttribute("view.jsp-results", results);
%>

			<liferay-ui:ddm-template-renderer className="<%= AssetEntry.class.getName() %>" displayStyle="<%= assetPublisherDisplayContext.getDisplayStyle() %>" displayStyleGroupId="<%= assetPublisherDisplayContext.getDisplayStyleGroupId() %>" entries="<%= results %>">
				<%@ include file="/view_dynamic_list_asset.jspf" %>
			</liferay-ui:ddm-template-renderer>

<%
		}
	}
	else {
		for (long classNameId : classNameIds) {
			assetEntryQuery.setClassNameIds(new long[] {classNameId});

			AssetRendererFactory groupAssetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassNameId(classNameId);

			int groupTotal = 0;

			BaseModelSearchResult<AssetEntry> baseModelSearchResult = AssetPublisherUtil.getAssetEntryQueryResult(assetEntryQuery, request, portletName, start, end, AssetPublisherWebConfigurationValues.SEARCH_WITH_INDEX);

			groupTotal = baseModelSearchResult.getLength();

			total += groupTotal;

			results = baseModelSearchResult.getBaseModels();

			searchContainer.setResults(results);

			request.setAttribute("view.jsp-results", results);

			if (!results.isEmpty() && (start < groupTotal)) {
%>

				<h3 class="asset-entries-group-label"><%= ResourceActionsUtil.getModelResource(locale, groupAssetRendererFactory.getClassName()) %></h3>

				<liferay-ui:ddm-template-renderer className="<%= AssetEntry.class.getName() %>" displayStyle="<%= assetPublisherDisplayContext.getDisplayStyle() %>" displayStyleGroupId="<%= assetPublisherDisplayContext.getDisplayStyleGroupId() %>" entries="<%= results %>">
					<%@ include file="/view_dynamic_list_asset.jspf" %>
				</liferay-ui:ddm-template-renderer>

<%
			}

			if (!portletName.equals(AssetPublisherPortletKeys.RECENT_CONTENT)) {
				if (groupTotal > 0) {
					end = AssetPublisherUtil.getAssetEntryQueryResultLimit(groupTotal, end);
					start = AssetPublisherUtil.getAssetEntryQueryResultLimit(groupTotal, start);
				}

				assetEntryQuery.setEnd(QueryUtil.ALL_POS);
				assetEntryQuery.setStart(QueryUtil.ALL_POS);
			}
		}

		searchContainer.setTotal(total);
	}
}
%>

<c:if test="<%= total == 0 %>">
	<liferay-ui:ddm-template-renderer className="<%= AssetEntry.class.getName() %>" displayStyle="<%= assetPublisherDisplayContext.getDisplayStyle() %>" displayStyleGroupId="<%= assetPublisherDisplayContext.getDisplayStyleGroupId() %>" entries="<%= results %>">

		<%
		boolean hasAddPortletURLs = GetterUtil.getBoolean(request.getAttribute("liferay-ui:asset-add-button:hasAddPortletURLs"));
		%>

		<c:if test="<%= !hasAddPortletURLs && !((assetCategoryId > 0) || Validator.isNotNull(assetTagName)) %>">

			<%
			renderRequest.setAttribute(WebKeys.PORTLET_CONFIGURATOR_VISIBILITY, Boolean.TRUE);
			%>

		</c:if>

		<div class="alert alert-info">
			<c:choose>
				<c:when test="<%= !portletName.equals(AssetPublisherPortletKeys.RELATED_ASSETS) %>">
					<liferay-ui:message key="there-are-no-results" />
				</c:when>
				<c:otherwise>
					<liferay-ui:message key="there-are-no-related-assets" />
				</c:otherwise>
			</c:choose>
		</div>
	</liferay-ui:ddm-template-renderer>
</c:if>