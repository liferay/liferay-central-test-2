<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
SearchContainer mainSearchSearchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, null, null);

SearchContext searchContext = SearchContextFactory.getInstance(request);

mainSearchSearchContainer.setEmptyResultsMessage(LanguageUtil.format(request, "no-results-were-found-that-matched-the-keywords-x", "<strong>" + HtmlUtil.escape(searchContext.getKeywords()) + "</strong>", false));

searchContext.setAttribute("paginationType", "more");
searchContext.setEnd(mainSearchSearchContainer.getEnd());

QueryConfig queryConfig = searchContext.getQueryConfig();

queryConfig.setCollatedSpellCheckResultEnabled(searchDisplayContext.isCollatedSpellCheckResultEnabled());
queryConfig.setCollatedSpellCheckResultScoresThreshold(searchDisplayContext.getCollatedSpellCheckResultDisplayThreshold());
queryConfig.setQueryIndexingEnabled(searchDisplayContext.isQueryIndexingEnabled());
queryConfig.setQueryIndexingThreshold(searchDisplayContext.getQueryIndexingThreshold());
queryConfig.setQuerySuggestionEnabled(searchDisplayContext.isQuerySuggestionsEnabled());
queryConfig.setQuerySuggestionScoresThreshold(searchDisplayContext.getQuerySuggestionsDisplayThreshold());
queryConfig.setQuerySuggestionsMax(searchDisplayContext.getQuerySuggestionsMax());

searchContext.setQueryConfig(queryConfig);

searchContext.setStart(mainSearchSearchContainer.getStart());

Facet assetEntriesFacet = new AssetEntriesFacet(searchContext);

assetEntriesFacet.setStatic(true);

searchContext.addFacet(assetEntriesFacet);

Facet scopeFacet = new ScopeFacet(searchContext);

scopeFacet.setStatic(true);

searchContext.addFacet(scopeFacet);

String searchConfiguration = searchDisplayContext.getSearchConfiguration();

for (SearchFacet searchFacet : searchDisplayContext.getEnabledSearchFacets()) {
	if (!searchDisplayContext.isDisplayFacet(searchFacet.getClassName())) {
		continue;
	}

	Facet facet = searchFacet.getFacet(searchContext, searchConfiguration);

	if (facet == null) {
		continue;
	}

	searchContext.addFacet(facet);
}

Indexer indexer = FacetedSearcher.getInstance();

Hits hits = indexer.search(searchContext);
%>

<aui:row cssClass='<%= "search-layout" + (searchDisplayContext.isShowMenu() ? " menu-column" : StringPool.BLANK) %>'>
	<c:if test="<%= searchDisplayContext.isShowMenu() %>">
		<aui:col id="facetNavigation" span="<%= 2 %>">

			<%
			Map<String, Facet> facets = searchContext.getFacets();

			List<Facet> facetsList = ListUtil.fromCollection(facets.values());

			facetsList = ListUtil.sort(facetsList, new PropertyComparator("facetConfiguration.weight", false, false));

			for (Facet facet : facetsList) {
				if (facet.isStatic()) {
					continue;
				}

				FacetConfiguration facetConfiguration = facet.getFacetConfiguration();

				request.setAttribute("search.jsp-facet", facet);
			%>

				<liferay-util:include page='<%= "/facets/" + facetConfiguration.getDisplayStyle() + ".jsp" %>' servletContext="<%= application %>"  />

			<%
			}
			%>

			<aui:script sandbox="<%= true %>">
				$('#<portlet:namespace />facetNavigation').on(
					'click',
					'.facet-value a',
					function(event) {
						event.preventDefault();

						var term = $(event.currentTarget);

						var facetValue = term.parentsUntil('.search-facet', '.facet-value');

						if (!facetValue.hasClass('active')) {
							facetValue.addClass('active');

							facetValue.siblings().removeClass('active');

							var searchFacet = facetValue.parentsUntil('.search-layout', '.search-facet');

							var form = $(document.<portlet:namespace />fm);

							var field = form.fm(searchFacet.data('facetfieldname'));

							if (field.length) {
								field.val(term.data('value'));

								form.fm('<%= SearchContainer.DEFAULT_CUR_PARAM %>').val(1);

								submitForm(form);
							}
						}
					}
				);
			</aui:script>
		</aui:col>
	</c:if>

	<aui:col cssClass="result" first="<%= !searchDisplayContext.isShowMenu() %>" span="<%= 10 %>">

		<%
		String[] queryTerms = hits.getQueryTerms();

		request.setAttribute("search.jsp-highlightEnabled", queryConfig.isHighlightEnabled());
		request.setAttribute("search.jsp-queryTerms", queryTerms);
		%>

		<%@ include file="/main_search_suggest.jspf" %>

		<liferay-ui:search-container
			searchContainer="<%= mainSearchSearchContainer %>"
			total="<%= hits.getLength() %>"
		>
			<liferay-ui:search-container-results
				results="<%= hits.toList() %>"
			/>

			<liferay-ui:search-container-row
				className="com.liferay.portal.kernel.search.Document"
				escapedModel="<%= false %>"
				keyProperty="UID"
				modelVar="document"
				stringKey="<%= true %>"
			>
				<liferay-ui:search-container-column-jsp path='<%= searchDisplayContext.isDisplayResultsInDocumentForm() ? "/main_search_document_form.jsp" : "/main_search_result_form.jsp" %>' />
			</liferay-ui:search-container-row>

			<liferay-ui:search-iterator type="more" />

			<c:if test="<%= searchDisplayContext.isDisplayMainQuery() && (hits.getQuery() != null) %>">
				<table class="full-query">
					<tr>
						<td valign="top">
							<div class="container">
								<code>
									<%= HtmlUtil.escape(indexer.getQueryString(searchContext, hits.getQuery())) %>
								</code>
							</div>
						</td>
					</tr>
				</table>
			</c:if>
		</liferay-ui:search-container>
	</aui:col>
</aui:row>