<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
FileVersion latestFileVersion = fileEntry.getFileVersion();

if ((user.getUserId() == fileEntry.getUserId()) || permissionChecker.isContentReviewer(user.getCompanyId(), scopeGroupId) || DLFileEntryPermission.contains(permissionChecker, fileEntry, ActionKeys.UPDATE)) {
	latestFileVersion = fileEntry.getLatestFileVersion();
}

if (fileShortcut == null) {
	row.setPrimaryKey(String.valueOf(fileEntry.getFileEntryId()));
}
else {
	row.setPrimaryKey(String.valueOf(fileShortcut.getFileShortcutId()));
}

row.setClassName("app-view-entry-taglib entry-display-style selectable");

Map<String, Object> data = new HashMap<String, Object>();

boolean draggable = false;

if (DLFileEntryPermission.contains(permissionChecker, fileEntry, ActionKeys.DELETE) || DLFileEntryPermission.contains(permissionChecker, fileEntry, ActionKeys.UPDATE)) {
	draggable = true;

	if (Validator.isNull(dlSearchContainer.getRowChecker())) {
		dlSearchContainer.setRowChecker(entriesChecker);
	}
}

data.put("draggable", draggable);

data.put("title", fileEntry.getTitle());

row.setData(data);
%>

<c:if test='<%= ArrayUtil.contains(entryColumns, "name") %>'>
	<liferay-ui:search-container-column-text
		name="title"
	>

		<%
		AssetRendererFactory<?> assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(DLFileEntry.class.getName());

		AssetRenderer<?> assetRenderer = assetRendererFactory.getAssetRenderer(fileEntry.getFileEntryId());

		PortletURL rowURL = liferayPortletResponse.createRenderURL();

		rowURL.setParameter("mvcRenderCommandName", "/document_library/view_file_entry");
		rowURL.setParameter("redirect", HttpUtil.removeParameter(currentURL, liferayPortletResponse.getNamespace() + "ajax"));
		rowURL.setParameter("fileEntryId", String.valueOf(fileEntry.getFileEntryId()));
		%>

		<liferay-ui:app-view-entry
			displayStyle="list"
			iconCssClass="<%= assetRenderer.getIconCssClass() %>"
			locked="<%= fileEntry.isCheckedOut() %>"
			showCheckbox="<%= true %>"
			title="<%= latestFileVersion.getTitle() %>"
			url="<%= rowURL.toString() %>"
		/>
	</liferay-ui:search-container-column-text>
</c:if>

<c:if test='<%= ArrayUtil.contains(entryColumns, "size") %>'>
	<liferay-ui:search-container-column-text
		name="size"
		value="<%= TextFormatter.formatStorageSize(latestFileVersion.getSize(), locale) %>"
	/>
</c:if>

<c:if test='<%= ArrayUtil.contains(entryColumns, "status") %>'>
	<liferay-ui:search-container-column-status
		name="status"
		status="<%= latestFileVersion.getStatus() %>"
	/>
</c:if>

<c:if test='<%= ArrayUtil.contains(entryColumns, "downloads") %>'>
	<liferay-ui:search-container-column-text
		name="downloads"
		value="<%= String.valueOf(fileEntry.getReadCount()) %>"
	/>
</c:if>

<c:if test='<%= ArrayUtil.contains(entryColumns, "create-date") %>'>
	<liferay-ui:search-container-column-date
		name="create-date"
		value="<%= fileEntry.getCreateDate() %>"
	/>
</c:if>

<c:if test='<%= ArrayUtil.contains(entryColumns, "modified-date") %>'>
	<liferay-ui:search-container-column-date
		name="modified-date"
		value="<%= latestFileVersion.getModifiedDate() %>"
	/>
</c:if>

<c:if test='<%= ArrayUtil.contains(entryColumns, "action") %>'>
	<liferay-ui:search-container-column-jsp
		cssClass="entry-action"
		path="/document_library/file_entry_action.jsp"
	/>
</c:if>