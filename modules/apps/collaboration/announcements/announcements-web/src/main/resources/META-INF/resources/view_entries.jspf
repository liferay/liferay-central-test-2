<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, "cur1", announcementsDisplayContext.getPageDelta(), portletURL, null, "no-entries-were-found");

List<AnnouncementsEntry> results = null;
int total = 0;

int flagValue = AnnouncementsFlagConstants.NOT_HIDDEN;
%>

<div class="unread-entries">

	<%
	total = AnnouncementsEntryLocalServiceUtil.getEntriesCount(user.getUserId(), announcementsDisplayContext.getAnnouncementScopes(), portletName.equals(AnnouncementsPortletKeys.ALERTS), flagValue);

	searchContainer.setTotal(total);

	results = AnnouncementsEntryLocalServiceUtil.getEntries(user.getUserId(), announcementsDisplayContext.getAnnouncementScopes(), portletName.equals(AnnouncementsPortletKeys.ALERTS), flagValue, searchContainer.getStart(), searchContainer.getEnd());

	searchContainer.setResults(results);

	for (int i = 0; i < results.size(); i++) {
		AnnouncementsEntry entry = results.get(i);

		request.setAttribute(WebKeys.ANNOUNCEMENTS_ENTRY, entry);
		request.setAttribute("view_entry.jsp-flagValue", flagValue);
	%>

		<liferay-util:include page="/view_entry.jsp" servletContext="<%= application %>" />

	<%
	}
	%>

</div>

<%
int visibleMessagesCount = total;
%>

<c:if test="<%= visibleMessagesCount > 0 %>">
	<liferay-ui:search-paginator id="pageIteratorTop" searchContainer="<%= searchContainer %>" type="article" />
</c:if>

<%
flagValue = AnnouncementsFlagConstants.HIDDEN;

searchContainer = new SearchContainer(renderRequest, null, null, "cur2", announcementsDisplayContext.getPageDelta(), portletURL, null, "no-entries-were-found");
%>

<div class="read-entries">

	<%
	total = AnnouncementsEntryLocalServiceUtil.getEntriesCount(user.getUserId(), announcementsDisplayContext.getAnnouncementScopes(), portletName.equals(AnnouncementsPortletKeys.ALERTS), flagValue);

	searchContainer.setTotal(total);

	results = AnnouncementsEntryLocalServiceUtil.getEntries(user.getUserId(), announcementsDisplayContext.getAnnouncementScopes(), portletName.equals(AnnouncementsPortletKeys.ALERTS), flagValue, searchContainer.getStart(), searchContainer.getEnd());

	searchContainer.setResults(results);

	for (int i = 0; i < results.size(); i++) {
		AnnouncementsEntry entry = results.get(i);

		request.setAttribute(WebKeys.ANNOUNCEMENTS_ENTRY, entry);
		request.setAttribute("view_entry.jsp-flagValue", flagValue);
	%>

		<liferay-util:include page="/view_entry.jsp" servletContext="<%= application %>" />

	<%
	}
	%>

</div>

<%
int hiddenMessagesCount = total;
%>

<c:if test="<%= hiddenMessagesCount > 0 %>">
	<liferay-ui:search-paginator id="pageIteratorBottom" searchContainer="<%= searchContainer %>" type="article" />
</c:if>

<%
if ((hiddenMessagesCount == 0) && (visibleMessagesCount == 0) && portletName.equals(AnnouncementsPortletKeys.ALERTS) && !AnnouncementsEntryPermission.contains(permissionChecker, layout, AnnouncementsPortletKeys.ALERTS, ActionKeys.ADD_ENTRY)) {
	renderRequest.setAttribute(WebKeys.PORTLET_CONFIGURATOR_VISIBILITY, Boolean.TRUE);
}
%>

<aui:script>
	function <portlet:namespace />handleEntry(entryId) {
		var entry = AUI.$('#<portlet:namespace />' + entryId);

		var container = entry.parent();

		if (container.hasClass('unread-entries')) {
			<portlet:namespace />markEntry(entryId);
		}
		else {
			<portlet:namespace />unmarkEntry(entryId);
		}
	}

	function <portlet:namespace />markEntry(entryId) {
		Liferay.Service(
			'/announcementsflag/add-flag',
			{
				entryId: entryId,
				value: <%= AnnouncementsFlagConstants.HIDDEN %>
			},
			AUI.$.proxy(Liferay.Portlet, 'refresh', '#p_p_id<portlet:namespace />')
		);
	}

	function <portlet:namespace />unmarkEntry(entryId) {
		Liferay.Service(
			'/announcementsflag/get-flag',
				{
					entryId : entryId,
					value: <%= AnnouncementsFlagConstants.HIDDEN %>
				},
				function(response) {
					Liferay.Service(
						'/announcementsflag/delete-flag',
						{
							flagId: response.flagId
						},
						AUI.$.proxy(Liferay.Portlet, 'refresh', '#p_p_id<portlet:namespace />')
					);
				}
		);
	}
</aui:script>