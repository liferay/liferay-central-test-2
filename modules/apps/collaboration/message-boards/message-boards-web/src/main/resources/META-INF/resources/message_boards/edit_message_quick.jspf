<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
MBMessageDisplay messageDisplay = (MBMessageDisplay)request.getAttribute(WebKeys.MESSAGE_BOARDS_MESSAGE_DISPLAY);
MBMessage replyMessage = null;

long messageId = 0;

long categoryId = messageDisplay.getMessage().getCategoryId();
long threadId = messageDisplay.getMessage().getThreadId();
long parentMessageId = messageDisplay.getMessage().getMessageId();
String subject = BeanParamUtil.getString(replyMessage, request, "subject");
double priority = messageDisplay.getMessage().getPriority();

MBMessage curParentMessage = null;
String parentAuthor = null;

if (threadId > 0) {
	try {
		curParentMessage = MBMessageLocalServiceUtil.getMessage(parentMessageId);

		if (Validator.isNull(subject)) {
			if (curParentMessage.getSubject().startsWith("RE: ")) {
				subject = curParentMessage.getSubject();
			}
			else {
				subject = "RE: " + curParentMessage.getSubject();
			}
		}

		parentAuthor = curParentMessage.isAnonymous() ? LanguageUtil.get(request, "anonymous") : HtmlUtil.escape(PortalUtil.getUserName(curParentMessage.getUserId(), curParentMessage.getUserName(), StringPool.BLANK));
	}
	catch (Exception e) {
	}
}

String body = BeanParamUtil.getString(replyMessage, request, "body");
boolean quote = ParamUtil.getBoolean(request, "quote");
boolean splitThread = ParamUtil.getBoolean(request, "splitThread");

String editorName = PropsUtil.get(
		"editor.wysiwyg.portal-web.docroot.html.portlet.message_boards.edit_message.html.jsp");

MBMessage curMessage = (MBMessage)request.getAttribute(WebKeys.MESSAGE_BOARDS_TREE_WALKER_CUR_MESSAGE);
String curMessageId = String.valueOf(curMessage.getMessageId());
%>

<portlet:actionURL name="/message_boards/edit_message" var="editMessageURL" />

<aui:form action="<%= editMessageURL %>" method="post" name='<%= "addQuickReplyFm" + curMessageId %>' onSubmit='<%= "event.preventDefault(); " + renderResponse.getNamespace() + "saveReplyMessage" + curMessageId +"();" %>'>
	<aui:input name="<%= Constants.CMD %>" type="hidden" value="<%= Constants.ADD %>" />
	<aui:input name="redirect" type="hidden" value="<%= currentURL %>" />
	<aui:input name="messageId" type="hidden" value="<%= messageId %>" />
	<aui:input name="mbCategoryId" type="hidden" value="<%= categoryId %>" />
	<aui:input name="threadId" type="hidden" value="<%= threadId %>" />
	<aui:input name="parentMessageId" type="hidden" value="<%= parentMessageId %>" />
	<aui:input name="subject" type="hidden" value="<%= subject %>" />
	<aui:input name="priority" type="hidden" value="<%= priority %>" />
	<aui:input name="propagatePermissions" type="hidden" value="<%= true %>" />
	<aui:input name="workflowAction" type="hidden" value="<%= String.valueOf(WorkflowConstants.ACTION_PUBLISH) %>" />

	<aui:model-context bean="<%= message %>" model="<%= MBMessage.class %>" />

	<div class="panel-body">
		<liferay-ui:input-editor allowBrowseDocuments="<%= false %>" autoCreate="<%= false %>" configKey="replyMBEditor"
			cssClass='<%= editorName.startsWith("alloyeditor") ? "form-control" : StringPool.BLANK %>' editorName='<%= editorName %>'
			name='<%= "replyMessageBody" + curMessageId %>' onChangeMethod='<%= "replyMessageOnChange" + curMessageId %>' showSource="<%= false %>"
		/>

		<aui:input name="body" type="hidden" />

		<c:if test="<%= themeDisplay.isSignedIn() && !SubscriptionLocalServiceUtil.isSubscribed(themeDisplay.getCompanyId(), user.getUserId(), MBThread.class.getName(), threadId) && !SubscriptionLocalServiceUtil.isSubscribed(themeDisplay.getCompanyId(), user.getUserId(), MBCategory.class.getName(), categoryId) %>">
			<aui:input helpMessage="message-boards-message-subscribe-me-help" label="subscribe-me" name="subscribe" type='<%= (mbGroupServiceSettings.isEmailMessageAddedEnabled() || mbGroupServiceSettings.isEmailMessageUpdatedEnabled()) ? "checkbox" : "hidden" %>' value="<%= subscribeByDefault %>" />
		</c:if>

		<liferay-ui:custom-attributes-available className="<%= MBMessage.class.getName() %>">
			<liferay-ui:custom-attribute-list
				className="<%= MBMessage.class.getName() %>"
				classPK="<%= (message != null) ? message.getMessageId() : 0 %>"
				editable="<%= true %>"
				label="<%= true %>"
			/>
		</liferay-ui:custom-attributes-available>

		<aui:button-row>

			<%
			String publishButtonLabel = "publish";

			if (WorkflowDefinitionLinkLocalServiceUtil.hasWorkflowDefinitionLink(themeDisplay.getCompanyId(), scopeGroupId, MBMessage.class.getName())) {
				publishButtonLabel = "submit-for-publication";
			}
			%>

			<aui:button cssClass="btn-lg" name='<%= "replyMessageButton" + curMessageId %>' type="submit" value="<%= publishButtonLabel %>" />

			<%
			String taglibCancelReply = "javascript:" + renderResponse.getNamespace() + "hideReplyMessage('" + curMessageId + "');";
			%>

			<aui:button cssClass="btn-lg" onClick="<%= taglibCancelReply %>" type="cancel" />
		</aui:button-row>
	</div>
</aui:form>

<aui:script>
	function <portlet:namespace />saveReplyMessage<%= curMessageId %>() {
		var form = AUI.$('#<portlet:namespace />addQuickReplyFm<%= curMessageId %>');

		form.fm('body').val(window['<portlet:namespace />replyMessageBody<%= curMessageId %>'].getHTML());

		submitForm(form);
	}

	window['<portlet:namespace />replyMessageOnChange' + <%= curMessageId %>] = function(html) {
		Liferay.Util.toggleDisabled('#<portlet:namespace />replyMessageButton<%= curMessageId %>', html === '');
	};
</aui:script>