apply plugin: "com.liferay.lang.merger"

dependencies {
	provided group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
	provided group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "2.0.0"
	provided group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "2.0.0"
	provided group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
	provided group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"
	provided project(":apps:forms-and-workflow:dynamic-data-mapping:dynamic-data-mapping-api")
	provided project(":apps:forms-and-workflow:dynamic-data-mapping:dynamic-data-mapping-form-evaluator")
	provided project(":apps:forms-and-workflow:dynamic-data-mapping:dynamic-data-mapping-form-field-type")
	provided project(":apps:forms-and-workflow:dynamic-data-mapping:dynamic-data-mapping-io")

	testCompile project(":apps:forms-and-workflow:dynamic-data-mapping:dynamic-data-mapping-test-util")
}

String soyJsWrapperHeader = "AUI.add('liferay-ddm-form-soy', function(A) {";
String soyJsWrapperFooter = "}, '', {requires: ['soyutils']});";

task wrapSoyTemplates

classes {
	dependsOn wrapSoyTemplates
}

liferay {
	deployDir = file("${liferayHome}/osgi/modules")
}

wrapSoyTemplates {
	dependsOn transpileJS

    doLast {
        FileTree soyJsFileTree = fileTree(dir: "classes", include: "**/*.soy.js")

        soyJsFileTree.each {
            File soyJsFile ->

            soyJsFile.text = soyJsFile.text.replace("(typeof ddm == 'undefined') { var ddm = {}; }", "(typeof ddm == 'undefined') { window.ddm = {}; }")
            soyJsFile.text = soyJsWrapperHeader + soyJsFile.text + soyJsWrapperFooter
        }
    }
}