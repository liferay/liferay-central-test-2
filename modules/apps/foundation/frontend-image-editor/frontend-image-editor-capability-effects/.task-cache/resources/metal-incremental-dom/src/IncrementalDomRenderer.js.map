{"version":3,"sources":["IncrementalDomRenderer.js"],"names":[],"mappings":"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","file":"../../../node_modules/metal-incremental-dom/src/IncrementalDomRenderer.js","sourcesContent":["'use strict';\n\nimport './incremental-dom';\nimport { array, core, object } from 'metal';\nimport dom from 'metal-dom';\nimport { Component, ComponentRenderer, EventsCollector } from 'metal-component';\nimport IncrementalDomAop from './IncrementalDomAop';\n\n/**\n * Class responsible for rendering components via incremental dom.\n */\nclass IncrementalDomRenderer extends ComponentRenderer {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(comp) {\n\t\tsuper(comp);\n\n\t\tcomp.context = {};\n\t\tthis.changes_ = {};\n\t\tthis.eventsCollector_ = new EventsCollector(comp);\n\t\tthis.lastElementCreationCall_ = [];\n\t\tcomp.on('stateKeyChanged', this.handleStateKeyChanged_.bind(this));\n\t\tcomp.on('attached', this.handleAttached_.bind(this));\n\t\tcomp.on('detached', this.handleDetached_.bind(this));\n\n\t\t// Binds functions that will be used many times, to avoid creating new\n\t\t// functions each time.\n\t\tthis.handleInterceptedAttributesCall_ =\n\t\t\tthis.handleInterceptedAttributesCall_.bind(this);\n\t\tthis.handleInterceptedOpenCall_ =\n\t\t\tthis.handleInterceptedOpenCall_.bind(this);\n\t\tthis.handleInterceptedChildrenCloseCall_ =\n\t\t\tthis.handleInterceptedChildrenCloseCall_.bind(this);\n\t\tthis.handleInterceptedChildrenOpenCall_ =\n\t\t\tthis.handleInterceptedChildrenOpenCall_.bind(this);\n\t\tthis.handleInterceptedChildrenTextCall_ =\n\t\t\tthis.handleInterceptedChildrenTextCall_.bind(this);\n\t\tthis.renderInsidePatchDontSkip_ = this.renderInsidePatchDontSkip_.bind(this);\n\t}\n\n\t/**\n\t * Adds all inline listener attributes included in the given config.\n\t * @param {!Array} listeners\n\t * @protected\n\t */\n\taddInlineListeners_(listeners) {\n\t\tfor (var i = 0; i < listeners.length; i += 2) {\n\t\t\tvar name = listeners[i];\n\t\t\tvar fn = listeners[i + 1];\n\t\t\tif (name.startsWith('data-on') && core.isString(fn)) {\n\t\t\t\tthis.listenersToAttach_.push({\n\t\t\t\t\teventName: name.substr(7),\n\t\t\t\t\tfn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Attaches any inline listeners found in the contents built via the last\n\t * incremental dom patch.\n\t * @protected\n\t */\n\tattachInlineListeners_() {\n\t\tthis.eventsCollector_.startCollecting();\n\t\tfor (var i = 0; i < this.listenersToAttach_.length; i++) {\n\t\t\tvar listener = this.listenersToAttach_[i];\n\t\t\tthis.eventsCollector_.attachListener(listener.eventName, listener.fn);\n\t\t}\n\t}\n\n\t/**\n\t * Builds the \"children\" config property to be passed to the current\n\t * component.\n\t * @param {!Array<!{name: string, args: !Array}>} calls\n\t * @return {!function()}\n\t * @protected\n\t */\n\tbuildChildrenFn_(calls) {\n\t\tif (calls.length === 0) {\n\t\t\treturn emptyChildrenFn_;\n\t\t}\n\t\tvar prefix = this.buildKey_();\n\t\tvar fn = () => {\n\t\t\tvar prevPrefix = this.currentPrefix_;\n\t\t\tthis.generatedKeyCount_[prefix] = 0;\n\t\t\tthis.currentPrefix_ = prefix;\n\t\t\tthis.intercept_();\n\t\t\tfor (var i = 0; i < calls.length; i++) {\n\t\t\t\tIncrementalDOM[calls[i].name].apply(null, array.slice(calls[i].args, 1));\n\t\t\t}\n\t\t\tIncrementalDomAop.stopInterception();\n\t\t\tthis.currentPrefix_ = prevPrefix;\n\t\t};\n\t\tfn.iDomCalls = calls;\n\t\treturn fn;\n\t}\n\n\t/**\n\t * Builds the key for the next component that is found.\n\t * @return {string}\n\t * @protected\n\t */\n\tbuildKey_() {\n\t\tvar count = this.generatedKeyCount_[this.currentPrefix_] || 0;\n\t\tthis.generatedKeyCount_[this.currentPrefix_] = count + 1;\n\t\treturn this.currentPrefix_ + 'sub' + count;\n\t}\n\n\t/**\n\t * Disposes all sub components that were not found after an update anymore.\n\t * @protected\n\t */\n\tdisposeUnusedSubComponents_() {\n\t\tvar keys = Object.keys(this.component_.components);\n\t\tvar unused = [];\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tif (!this.subComponentsFound_[keys[i]]) {\n\t\t\t\tunused.push(keys[i]);\n\t\t\t}\n\t\t}\n\t\tthis.component_.disposeSubComponents(unused);\n\t}\n\n\t/**\n\t * Gets the component being currently rendered via `IncrementalDomRenderer`.\n\t * @return {Component}\n\t */\n\tstatic getComponentBeingRendered() {\n\t\treturn renderingComponents_[renderingComponents_.length - 1];\n\t}\n\n\t/**\n\t * Gets the sub component referenced by the given tag and config data,\n\t * creating it if it doesn't yet exist.\n\t * @param {string} key The sub component's key.\n\t * @param {string|!Function} tagOrCtor The tag name.\n\t * @param {!Object} config The config object for the sub component.\n\t * @return {!Component} The sub component.\n\t * @protected\n\t */\n\tgetSubComponent_(key, tagOrCtor, config) {\n\t\tvar comp = this.component_.addSubComponent(key, tagOrCtor, config);\n\t\tif (comp.wasRendered) {\n\t\t\tcomp.setState(config);\n\t\t}\n\t\treturn comp;\n\t}\n\n\t/**\n\t * Guarantees that the component's element has a parent. That's necessary\n\t * when calling incremental dom's `patchOuter` for now, as otherwise it will\n\t * throw an error if the element needs to be replaced.\n\t * @return {Element} The parent, in case it was added.\n\t * @protected\n\t */\n\tguaranteeParent_() {\n\t\tvar element = this.component_.element;\n\t\tif (!element || !element.parentNode) {\n\t\t\tvar parent = document.createElement('div');\n\t\t\tif (element) {\n\t\t\t\tdom.append(parent, element);\n\t\t\t}\n\t\t\treturn parent;\n\t\t}\n\t}\n\n\t/**\n\t * Removes the most recent component from the queue of rendering components.\n\t */\n\tstatic finishedRenderingComponent() {\n\t\trenderingComponents_.pop();\n\t}\n\n\t/**\n\t * Handles the `attached` listener. Stores attach data.\n\t * @param {!Object} data\n\t * @protected\n\t */\n\thandleAttached_(data) {\n\t\tthis.attachData_ = data;\n\t}\n\n\t/**\n\t * Handles the `detached` listener. Removes all inline listeners.\n\t * @protected\n\t */\n\thandleDetached_() {\n\t\tthis.eventsCollector_.detachAllListeners();\n\t}\n\n\t/**\n\t * Handles an intercepted call to the attributes default handler from\n\t * incremental dom.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {!Element} element\n\t * @param {string} name\n\t * @param {*} value\n\t * @protected\n\t */\n\thandleInterceptedAttributesCall_(originalFn, element, name, value) {\n\t\tif (name.startsWith('data-on')) {\n\t\t\tvar eventName = name.substr(7);\n\t\t\tif (core.isFunction(element[name])) {\n\t\t\t\telement.removeEventListener(eventName, element[name]);\n\t\t\t}\n\t\t\tif (core.isFunction(value)) {\n\t\t\t\tdom.on(element, eventName, value);\n\t\t\t}\n\t\t}\n\n\t\tif (name === 'checked') {\n\t\t\t// This is a temporary fix to account for incremental dom setting\n\t\t\t// \"checked\" as an attribute only, which can cause bugs since that won't\n\t\t\t// necessarily check/uncheck the element it's set on. See\n\t\t\t// https://github.com/google/incremental-dom/issues/198 for more details.\n\t\t\tvalue = core.isDefAndNotNull(value) && value !== false;\n\t\t}\n\n\t\tif (core.isBoolean(value)) {\n\t\t\t// Incremental dom sets boolean values as string data attributes, which\n\t\t\t// is counter intuitive. This changes the behavior to use the actual\n\t\t\t// boolean value.\n\t\t\telement[name] = value;\n\t\t\tif (value) {\n\t\t\t\telement.setAttribute(name, '');\n\t\t\t} else {\n\t\t\t\telement.removeAttribute(name);\n\t\t\t}\n\t\t} else {\n\t\t\toriginalFn(element, name, value);\n\t\t}\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementClose` function from incremental\n\t * dom, while collecting a component's children.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {string} callTag\n\t * @protected\n\t */\n\thandleInterceptedChildrenCloseCall_(originalFn, callTag) {\n\t\tif (this.isCurrentComponentTag_(callTag) &&\n\t\t\t\t--this.componentToRender_.tagsCount === 0) {\n\n\t\t\tvar {calls, config, tag} = this.componentToRender_;\n\t\t\tconfig.children = this.buildChildrenFn_(calls);\n\t\t\tthis.componentToRender_ = null;\n\t\t\tIncrementalDomAop.stopInterception();\n\t\t\treturn this.renderFromTag_(tag, config);\n\t\t}\n\t\tthis.componentToRender_.calls.push({\n\t\t\tname: 'elementClose',\n\t\t\targs: arguments\n\t\t});\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementOpen` function from incremental\n\t * dom, while collecting a component's children.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {string} tag\n\t * @protected\n\t */\n\thandleInterceptedChildrenOpenCall_(originalFn, tag) {\n\t\tif (this.isCurrentComponentTag_(tag)) {\n\t\t\tthis.componentToRender_.tagsCount++;\n\t\t}\n\t\tthis.componentToRender_.calls.push({\n\t\t\tname: 'elementOpen',\n\t\t\targs: arguments\n\t\t});\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `text` function from incremental dom,\n\t * while collecting a component's children.\n\t * @protected\n\t */\n\thandleInterceptedChildrenTextCall_() {\n\t\tthis.componentToRender_.calls.push({\n\t\t\tname: 'text',\n\t\t\targs: arguments\n\t\t});\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementOpen` function from incremental\n\t * dom.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {string} tag\n\t * @protected\n\t */\n\thandleInterceptedOpenCall_(originalFn, tag) {\n\t\tif (this.isComponentTag_(tag)) {\n\t\t\treturn this.handleSubComponentCall_.apply(this, arguments);\n\t\t} else {\n\t\t\treturn this.handleRegularCall_.apply(this, arguments);\n\t\t}\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementOpen` function from incremental\n\t * dom, done for a regular element. Adds any inline listeners found and makes\n\t * sure that component root elements are always reused.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {string} tag\n\t * @param {?string} key\n\t * @param {?Array} statics\n\t * @protected\n\t */\n\thandleRegularCall_(originalFn, tag, key, statics) {\n\t\tvar attrsArr = array.slice(arguments, 4);\n\t\tthis.addInlineListeners_((statics || []).concat(attrsArr));\n\t\tvar args = array.slice(arguments, 1);\n\n\t\tvar currComp = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar currRenderer = currComp.getRenderer();\n\t\tif (!currRenderer.rootElementReached_ && currComp.config.key) {\n\t\t\targs[1] = currComp.config.key;\n\t\t}\n\n\t\tvar node = originalFn.apply(null, args);\n\t\tthis.updateElementIfNotReached_(node, args);\n\t\treturn node;\n\t}\n\n\t/**\n\t * Handles the `stateKeyChanged` event. Stores state properties that have\n\t * changed since the last render.\n\t * @param {!Object} data\n\t * @protected\n\t */\n\thandleStateKeyChanged_(data) {\n\t\tthis.changes_[data.key] = data;\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementOpen` function from incremental\n\t * dom, done for a sub component element. Creates and updates the appropriate\n\t * sub component.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {string} tag\n\t * @param {?string} key\n\t * @param {?Array} statics\n\t * @protected\n\t */\n\thandleSubComponentCall_(originalFn, tag, key, statics) {\n\t\tvar config = {key};\n\t\tvar attrsArr = (statics || []).concat(array.slice(arguments, 4));\n\t\tfor (var i = 0; i < attrsArr.length; i += 2) {\n\t\t\tconfig[attrsArr[i]] = attrsArr[i + 1];\n\t\t}\n\n\t\tthis.componentToRender_ = {\n\t\t\tcalls: [],\n\t\t\tconfig,\n\t\t\ttag,\n\t\t\ttagsCount: 1\n\t\t};\n\t\tIncrementalDomAop.startInterception({\n\t\t\telementClose: this.handleInterceptedChildrenCloseCall_,\n\t\t\telementOpen: this.handleInterceptedChildrenOpenCall_,\n\t\t\ttext: this.handleInterceptedChildrenTextCall_\n\t\t});\n\t}\n\n\t/**\n\t * Checks if any other state property besides \"element\" has changed since the\n\t * last render.\n\t * @protected\n\t */\n\thasChangedBesidesElement_() {\n\t\tvar count = Object.keys(this.changes_).length;\n\t\tif (this.changes_.hasOwnProperty('element')) {\n\t\t\tcount--;\n\t\t}\n\t\treturn count > 0;\n\t}\n\n\t/**\n\t * Intercepts incremental dom calls from this component.\n\t * @protected\n\t */\n\tintercept_() {\n\t\tIncrementalDomAop.startInterception({\n\t\t\tattributes: this.handleInterceptedAttributesCall_,\n\t\t\telementOpen: this.handleInterceptedOpenCall_\n\t\t});\n\t}\n\n\t/**\n\t * Checks if the given tag represents a metal component.\n\t * @param {string} tag\n\t * @protected\n\t */\n\tisComponentTag_(tag) {\n\t\treturn !core.isString(tag) || tag[0] === tag[0].toUpperCase();\n\t}\n\n\t/**\n\t * Checks if the given tag represents the metal component currently being\n\t * rendered.\n\t * @param {string} tag\n\t * @protected\n\t */\n\tisCurrentComponentTag_(tag) {\n\t\treturn this.isComponentTag_(tag) && this.componentToRender_.tag === tag;\n\t}\n\n\t/**\n\t * Renders the renderer's component for the first time, patching its element\n\t * through the incremental dom function calls done by `renderIncDom`.\n\t */\n\trender() {\n\t\tthis.patch();\n\t}\n\n\t/**\n\t * Renders the contents for the given tag.\n\t * @param {!function()|string} tag\n\t * @param {!Object} config\n\t * @protected\n\t */\n\trenderFromTag_(tag, config) {\n\t\tif (core.isString(tag) || tag.prototype.getRenderer) {\n\t\t\tvar comp = this.renderSubComponent_(tag, config);\n\t\t\tthis.updateElementIfNotReached_(comp);\n\t\t\treturn comp.element;\n\t\t} else {\n\t\t\treturn tag(config);\n\t\t}\n\t}\n\n\t/**\n\t * Calls functions from `IncrementalDOM` to build the component element's\n\t * content. Can be overriden by subclasses (for integration with template\n\t * engines for example).\n\t */\n\trenderIncDom() {\n\t\tif (this.component_.render) {\n\t\t\tthis.component_.render();\n\t\t} else {\n\t\t\tIncrementalDOM.elementVoid('div');\n\t\t}\n\t}\n\n\t/**\n\t * Runs the incremental dom functions for rendering this component, but\n\t * doesn't call `patch` yet. Rather, this will be the function that should be\n\t * called by `patch`.\n\t */\n\trenderInsidePatch() {\n\t\tif (this.component_.wasRendered && !this.shouldUpdate(this.changes_)) {\n\t\t\tthis.skipRerender_();\n\t\t\treturn;\n\t\t}\n\t\tthis.renderInsidePatchDontSkip_();\n\t}\n\n\t/**\n\t * The same as `renderInsidePatch`, but without the check that may skip the\n\t * render action.\n\t * @protected\n\t */\n\trenderInsidePatchDontSkip_() {\n\t\tIncrementalDomRenderer.startedRenderingComponent(this.component_);\n\t\tthis.changes_ = {};\n\t\tthis.rootElementReached_ = false;\n\t\tthis.subComponentsFound_ = {};\n\t\tthis.generatedKeyCount_ = {};\n\t\tthis.listenersToAttach_ = [];\n\t\tthis.currentPrefix_ = '';\n\t\tthis.intercept_();\n\t\tthis.renderIncDom();\n\t\tIncrementalDomAop.stopInterception();\n\t\tthis.attachInlineListeners_();\n\t\tIncrementalDomRenderer.finishedRenderingComponent();\n\t\tif (!this.rootElementReached_) {\n\t\t\tthis.component_.element = null;\n\t\t}\n\t\tthis.emit('rendered', !this.component_.wasRendered);\n\t}\n\n\t/**\n\t * This updates the sub component that is represented by the given data.\n\t * The sub component is created, added to its parent and rendered. If it\n\t * had already been rendered before though, it will only have its state\n\t * updated instead.\n\t * @param {string|!function()} tagOrCtor The tag name or constructor function.\n\t * @param {!Object} config The config object for the sub component.\n\t * @return {!Component} The updated sub component.\n\t * @protected\n\t */\n\trenderSubComponent_(tagOrCtor, config) {\n\t\tvar key = config.key || this.buildKey_();\n\t\tvar comp = this.getSubComponent_(key, tagOrCtor, config);\n\t\tthis.updateContext_(comp);\n\t\tvar renderer = comp.getRenderer();\n\t\tif (renderer instanceof IncrementalDomRenderer) {\n\t\t\trenderer.lastParentComponent_ = IncrementalDomRenderer.getComponentBeingRendered();\n\t\t\trenderer.renderInsidePatch();\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t'IncrementalDomRenderer doesn\\'t support rendering sub components ' +\n\t\t\t\t'that don\\'t use IncrementalDomRenderer as well, like:',\n\t\t\t\tcomp\n\t\t\t);\n\t\t}\n\t\tif (!comp.wasRendered) {\n\t\t\tcomp.renderAsSubComponent();\n\t\t}\n\t\tthis.subComponentsFound_[key] = true;\n\t\treturn comp;\n\t}\n\n\t/**\n\t * Checks if the component should be updated with the current state changes.\n\t * Can be overridden by subclasses or implemented by components to provide\n\t * customized behavior (only updating when a state property used by the\n\t * template changes, for example).\n\t * @param {!Object} changes\n\t * @return {boolean}\n\t */\n\tshouldUpdate(changes) {\n\t\tif (this.component_.shouldUpdate) {\n\t\t\treturn this.component_.shouldUpdate(changes);\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Skips rerendering the component by repeating the last incremental dom call\n\t * for creating its main element and then calling `IncrementalDOM.skip`.\n\t * @protected\n\t */\n\tskipRerender_() {\n\t\tif (this.lastElementCreationCall_.length > 0) {\n\t\t\tIncrementalDOM.elementOpen.apply(null, this.lastElementCreationCall_);\n\t\t\tIncrementalDOM.skip();\n\t\t\tIncrementalDOM.elementClose(this.lastElementCreationCall_[0]);\n\t\t}\n\t}\n\n\t/**\n\t * Stores the component that has just started being rendered.\n\t * @param {!Component} comp\n\t */\n\tstatic startedRenderingComponent(comp) {\n\t\trenderingComponents_.push(comp);\n\t}\n\n\t/**\n\t * Patches the component's element with the incremental dom function calls\n\t * done by `renderIncDom`.\n\t */\n\tpatch() {\n\t\tif (!this.component_.element && this.lastParentComponent_) {\n\t\t\t// If the component has no content but was rendered from another component,\n\t\t\t// we'll need to patch this parent to make sure that any new content will\n\t\t\t// be added in the right place.\n\t\t\tthis.lastParentComponent_.getRenderer().patch();\n\t\t\treturn;\n\t\t}\n\n\t\tvar tempParent = this.guaranteeParent_();\n\t\tif (tempParent) {\n\t\t\tIncrementalDOM.patch(tempParent, this.renderInsidePatchDontSkip_);\n\t\t\tdom.exitDocument(this.component_.element);\n\t\t\tif (this.component_.element && this.component_.inDocument) {\n\t\t\t\tthis.component_.renderElement_(\n\t\t\t\t\tthis.attachData_.parent,\n\t\t\t\t\tthis.attachData_.sibling\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tvar element = this.component_.element;\n\t\t\tIncrementalDOM.patchOuter(element, this.renderInsidePatchDontSkip_);\n\t\t\tif (!this.component_.element) {\n\t\t\t\tdom.exitDocument(element);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the renderer's component when state changes, patching its element\n\t * through the incremental dom function calls done by `renderIncDom`. Makes\n\t * sure that it won't cause a rerender if the only change was for the\n\t * \"element\" property.\n\t */\n\tupdate() {\n\t\tif (this.hasChangedBesidesElement_() && this.shouldUpdate(this.changes_)) {\n\t\t\tthis.patch();\n\t\t\tthis.eventsCollector_.detachUnusedListeners();\n\t\t\tthis.disposeUnusedSubComponents_();\n\t\t}\n\t}\n\n\t/**\n\t * Updates this renderer's component's element with the given values, unless\n\t * it has already been reached by an earlier call.\n\t * @param {!Element|Component} nodeOrComponent\n\t * @param {Array=} opt_args The arguments that were used to create this\n\t *     element via incremental dom.\n\t * @protected\n\t */\n\tupdateElementIfNotReached_(nodeOrComponent, opt_args) {\n\t\tvar currComp = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar currRenderer = currComp.getRenderer();\n\t\tif (!currRenderer.rootElementReached_) {\n\t\t\tcurrRenderer.rootElementReached_ = true;\n\n\t\t\tvar node = nodeOrComponent;\n\t\t\tvar args = opt_args;\n\n\t\t\tif (nodeOrComponent instanceof Component) {\n\t\t\t\tvar renderer = nodeOrComponent.getRenderer();\n\t\t\t\targs = renderer instanceof IncrementalDomRenderer ?\n\t\t\t\t\trenderer.lastElementCreationCall_ :\n\t\t\t\t\t[];\n\t\t\t\tnode = nodeOrComponent.element;\n\t\t\t}\n\n\t\t\tif (currComp.element !== node) {\n\t\t\t\tcurrComp.element = node;\n\t\t\t}\n\t\t\tcurrRenderer.lastElementCreationCall_ = args;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the given component's context according to the data from the\n\t * component that is currently being rendered.\n\t * @param {!Component} comp\n\t * @protected\n\t */\n\tupdateContext_(comp) {\n\t\tvar context = comp.context;\n\t\tvar parent = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar childContext = parent.getChildContext ? parent.getChildContext() : {};\n\t\tobject.mixin(context, parent.context, childContext);\n\t\tcomp.context = context;\n\t}\n}\n\nvar renderingComponents_ = [];\nfunction emptyChildrenFn_() {\n}\nemptyChildrenFn_.calls = [];\n\nexport default IncrementalDomRenderer;\n"],"sourceRoot":"/source/"}