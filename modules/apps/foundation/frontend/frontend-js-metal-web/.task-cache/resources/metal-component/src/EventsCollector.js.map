{"version":3,"sources":["/source/EventsCollector.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAYM;;;AACL,WADK,eACL,CAAY,SAAZ,EAAuB;yBADlB,iBACkB;;gDACtB,wBADsB;;AAGtB,OAAI,CAAC,SAAD,EAAY;AACf,UAAM,IAAI,KAAJ,CAAU,qCAAV,CAAN,CADe;IAAhB;;;;;;;AAHsB,QAYtB,CAAK,UAAL,GAAkB,SAAlB;;;;;;;AAZsB,QAmBtB,CAAK,aAAL,GAAqB,EAArB;;;;;;;AAnBsB,QA0BtB,CAAK,iBAAL,GAAyB,EAAzB,CA1BsB;;GAAvB;;;;;;;;;;;AADK,4BAqCL,yCAAe,WAAW,eAAsC;OAAvB,kEAAY,yBAAW;;AAC/D,OAAI,WAAW,aAAa,SAAb,GAAyB,IAAzB,GAAgC,aAAhC,GAAgD,IAAhD,CADgD;;AAG/D,QAAK,iBAAL,CAAuB,SAAvB,EAAkC,QAAlC,IAA8C,IAA9C,CAH+D;;AAK/D,OAAI,CAAC,KAAK,aAAL,CAAmB,QAAnB,CAAD,EAA+B;AAClC,SAAK,aAAL,CAAmB,QAAnB,IAA+B,0BAA/B,CADkC;AAElC,QAAI,UAAU,cAAc,KAAd,CAAoB,GAApB,CAAV,CAF8B;AAGlC,SAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,QAAQ,MAAR,EAAgB,GAApC,EAAyC;AACxC,SAAI,KAAK,KAAK,UAAL,CAAgB,aAAhB,CAA8B,QAAQ,CAAR,CAA9B,CAAL,CADoC;AAExC,SAAI,EAAJ,EAAQ;AACP,WAAK,aAAL,CAAmB,QAAnB,EAA6B,GAA7B,CAAiC,KAAK,UAAL,CAAgB,QAAhB,CAAyB,SAAzB,EAAoC,QAApC,EAA8C,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,EAAyB,EAAzB,CAA9C,CAAjC,EADO;MAAR;KAFD;IAHD;;;AA1CI,4BA2DL,2DAAwB,SAAgC;OAAvB,kEAAY,yBAAW;;AACvD,QAAK,eAAL,CAAqB,SAArB,EADuD;AAEvD,OAAI,QAAQ,OAAR,CAAgB,SAAhB,MAA+B,CAAC,CAAD,EAAI;AACtC,WADsC;IAAvC;AAGA,OAAI,QAAQ,mCAAR,CALmD;AAMvD,OAAI,QAAQ,MAAM,IAAN,CAAW,OAAX,CAAR,CANmD;AAOvD,UAAO,KAAP,EAAc;AACb,SAAK,cAAL,CAAoB,MAAM,CAAN,CAApB,EAA8B,MAAM,CAAN,CAA9B,EAAwC,SAAxC,EADa;AAEb,YAAQ,MAAM,IAAN,CAAW,OAAX,CAAR,CAFa;IAAd;;;AAlEI,4BA2EL,mDAAqB;AACpB,QAAK,IAAI,QAAJ,IAAgB,KAAK,aAAL,EAAoB;AACxC,QAAI,KAAK,aAAL,CAAmB,QAAnB,CAAJ,EAAkC;AACjC,UAAK,aAAL,CAAmB,QAAnB,EAA6B,kBAA7B,GADiC;KAAlC;IADD;AAKA,QAAK,aAAL,GAAqB,EAArB,CANoB;AAOpB,QAAK,eAAL,GAAuB,EAAvB,CAPoB;;;AA3EhB,4BAyFL,yDAAwB;AACvB,QAAK,IAAI,QAAJ,IAAgB,KAAK,aAAL,EAAoB;AACxC,QAAI,KAAK,aAAL,CAAmB,QAAnB,CAAJ,EAAkC;AACjC,SAAI,SAAS,IAAT,CAD6B;AAEjC,UAAK,IAAI,SAAJ,IAAiB,KAAK,iBAAL,EAAwB;AAC7C,UAAI,KAAK,iBAAL,CAAuB,SAAvB,EAAkC,QAAlC,CAAJ,EAAiD;AAChD,gBAAS,KAAT,CADgD;AAEhD,aAFgD;OAAjD;MADD;AAMA,SAAI,MAAJ,EAAY;AACX,WAAK,aAAL,CAAmB,QAAnB,EAA6B,kBAA7B,GADW;AAEX,WAAK,aAAL,CAAmB,QAAnB,IAA+B,IAA/B,CAFW;MAAZ;KARD;IADD;;;AA1FI,4BA8GL,6CAAkB;AACjB,QAAK,kBAAL,GADiB;AAEjB,QAAK,UAAL,GAAkB,IAAlB,CAFiB;;;AA9Gb,4BAyHL,mDAAoB,OAAO;AAC1B,UAAO,CAAC,CAAC,KAAK,iBAAL,CAAuB,cAAvB,CAAsC,KAAtC,CAAD,CADkB;;;AAzHtB,4BAuIL,6BAAS,IAAI,OAAO;;AAEnB,OAAI,YAAY,MAAM,kBAAN,CAFG;AAGnB,OAAI,CAAC,SAAD,IAAc,cAAc,KAAK,UAAL,IAAmB,MAAM,cAAN,CAAqB,QAArB,CAA8B,UAAU,OAAV,CAA7E,EAAiG;AACpG,UAAM,kBAAN,GAA2B,KAAK,UAAL,CADyE;AAEpG,WAAO,GAAG,KAAH,CAAP,CAFoG;IAArG;;;AA1II,4BAqJL,6CAAuC;OAAvB,kEAAY,yBAAW;;AACtC,QAAK,iBAAL,CAAuB,SAAvB,IAAoC,EAApC,CADsC;;;SArJlC;;;;mBA0JS","sourcesContent":["'use strict';\n\nimport { Disposable } from 'metal';\nimport { EventHandler } from 'metal-events';\n\n/**\n * Collects inline events from a passed element, detaching previously\n * attached events that are not being used anymore.\n * @param {Component} component\n * @constructor\n * @extends {Disposable}\n */\nclass EventsCollector extends Disposable {\n\tconstructor(component) {\n\t\tsuper();\n\n\t\tif (!component) {\n\t\t\tthrow new Error('The component instance is mandatory');\n\t\t}\n\n\t\t/**\n\t\t * Holds the component intance.\n\t\t * @type {!Component}\n\t\t * @protected\n\t\t */\n\t\tthis.component_ = component;\n\n\t\t/**\n\t\t * Holds the attached delegate event handles, indexed by the css selector.\n\t\t * @type {!Object<string, EventHandler>}\n\t\t * @protected\n\t\t */\n\t\tthis.eventHandles_ = {};\n\n\t\t/**\n\t\t * Holds flags indicating which selectors a group has listeners for.\n\t\t * @type {!Object<string, !Object<string, boolean>>}\n\t\t * @protected\n\t\t */\n\t\tthis.groupHasListener_ = {};\n\t}\n\n\t/**\n\t * Attaches the listener described by the given params, unless it has already\n\t * been attached.\n\t * @param {string} eventType\n\t * @param {string} fnNamesString\n\t * @param {string=} groupName\n\t */\n\tattachListener(eventType, fnNamesString, groupName = 'element') {\n\t\tvar selector = '[data-on' + eventType + '=\"' + fnNamesString + '\"]';\n\n\t\tthis.groupHasListener_[groupName][selector] = true;\n\n\t\tif (!this.eventHandles_[selector]) {\n\t\t\tthis.eventHandles_[selector] = new EventHandler();\n\t\t\tvar fnNames = fnNamesString.split(',');\n\t\t\tfor (var i = 0; i < fnNames.length; i++) {\n\t\t\t\tvar fn = this.component_.getListenerFn(fnNames[i]);\n\t\t\t\tif (fn) {\n\t\t\t\t\tthis.eventHandles_[selector].add(this.component_.delegate(eventType, selector, this.onEvent_.bind(this, fn)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Attaches listeners found in the given html content.\n\t * @param {string} content\n\t * @param {string=} groupName\n\t */\n\tattachListenersFromHtml(content, groupName = 'element') {\n\t\tthis.startCollecting(groupName);\n\t\tif (content.indexOf('data-on') === -1) {\n\t\t\treturn;\n\t\t}\n\t\tvar regex = /data-on([a-z]+)=['\"]([^'\"]+)['\"]/g;\n\t\tvar match = regex.exec(content);\n\t\twhile (match) {\n\t\t\tthis.attachListener(match[1], match[2], groupName);\n\t\t\tmatch = regex.exec(content);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all previously attached event listeners to the component.\n\t */\n\tdetachAllListeners() {\n\t\tfor (var selector in this.eventHandles_) {\n\t\t\tif (this.eventHandles_[selector]) {\n\t\t\t\tthis.eventHandles_[selector].removeAllListeners();\n\t\t\t}\n\t\t}\n\t\tthis.eventHandles_ = {};\n\t\tthis.listenerCounts_ = {};\n\t}\n\n\t/**\n\t * Detaches all existing listeners that are not being used anymore.\n\t * @protected\n\t */\n\tdetachUnusedListeners() {\n\t\tfor (var selector in this.eventHandles_) {\n\t\t\tif (this.eventHandles_[selector]) {\n\t\t\t\tvar unused = true;\n\t\t\t\tfor (var groupName in this.groupHasListener_) {\n\t\t\t\t\tif (this.groupHasListener_[groupName][selector]) {\n\t\t\t\t\t\tunused = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (unused) {\n\t\t\t\t\tthis.eventHandles_[selector].removeAllListeners();\n\t\t\t\t\tthis.eventHandles_[selector] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.detachAllListeners();\n\t\tthis.component_ = null;\n\t}\n\n\t/**\n\t * Checks if this EventsCollector instance has already attached listeners for the given\n\t * group before.\n\t * @param  {string} group\n\t * @return {boolean}\n\t */\n\thasAttachedForGroup(group) {\n\t\treturn !!this.groupHasListener_.hasOwnProperty(group);\n\t}\n\n\t/**\n\t * Fires when an event that was registered by this collector is triggered. Makes\n\t * sure that the event was meant for this component and calls the appropriate\n\t * listener function for it.\n\t * @param {!function(!Object)} fn\n\t * @param {!Object} event\n\t * @return {*} The return value of the call to the listener function, or undefined\n\t *   if no function was called.\n\t * @protected\n\t */\n\tonEvent_(fn, event) {\n\t\t// This check prevents parent components from handling their child inline listeners.\n\t\tvar eventComp = event.handledByComponent;\n\t\tif (!eventComp || eventComp === this.component_ || event.delegateTarget.contains(eventComp.element)) {\n\t\t\tevent.handledByComponent = this.component_;\n\t\t\treturn fn(event);\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the collector to start collecting listeners for the given group.\n\t * Should be called before all calls to `attachListener` for that group.\n\t * @param {string=} groupName\n\t */\n\tstartCollecting(groupName = 'element') {\n\t\tthis.groupHasListener_[groupName] = {};\n\t}\n}\n\nexport default EventsCollector;\n"]}