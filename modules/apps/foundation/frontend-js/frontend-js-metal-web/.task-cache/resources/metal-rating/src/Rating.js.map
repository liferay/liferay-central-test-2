{"version":3,"sources":["/source/Rating.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAOM;;;;;;;;;yBAIF,+BAAW;AACP,iBAAK,QAAL,CAAc,WAAd,EAA2B,cAA3B,EAA2C,KAAK,oBAAL,CAA0B,IAA1B,CAA+B,IAA/B,CAA3C,EADO;AAEP,iBAAK,QAAL,CAAc,OAAd,EAAuB,cAAvB,EAAuC,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B,CAAvC,EAFO;AAGP,iBAAK,EAAL,CAAQ,YAAR,EAAsB,KAAK,qBAAL,CAA2B,IAA3B,CAAgC,IAAhC,CAAtB,EAHO;;;AAJT,yBAaF,6BAAU;AACN,iBAAK,cAAL,GAAsB,KAAK,KAAL,CADhB;;;AAbR,yBAsBF,6CAAiB,OAAO;AACpB,gBAAI,CAAC,KAAK,QAAL,EAAe;AAChB,oBAAI,QAAQ,SAAS,MAAM,cAAN,CAAqB,YAArB,CAAkC,YAAlC,CAAT,EAA0D,EAA1D,CAAR,CADY;;AAGhB,oBAAI,UAAU,KAAK,cAAL,IAAuB,KAAK,QAAL,EAAe;AAChD,yBAAK,KAAL,GADgD;iBAApD,MAGK;AACD,yBAAK,KAAL,GAAa,KAAb,CADC;iBAHL;;AAOA,qBAAK,cAAL,GAAsB,KAAK,KAAL,CAVN;aAApB;;;AAvBF,yBAyCF,yDAAwB;AACpB,iBAAK,gBAAL,GADoB;;;AAzCtB,yBAkDF,qDAAqB,OAAO;AACxB,gBAAI,CAAC,KAAK,QAAL,EAAe;AAChB,oBAAI,QAAQ,OAAO,QAAP,CAAgB,MAAM,cAAN,CAAqB,YAArB,CAAkC,YAAlC,CAAhB,EAAiE,EAAjE,CAAR,CADY;;AAGhB,qBAAK,KAAL,GAAa,KAAb,CAHgB;aAApB;;;AAnDF,yBA8DF,yBAAQ;AACJ,iBAAK,KAAL,GAAa,CAAC,CAAD,CADT;AAEJ,iBAAK,cAAL,GAAsB,CAAC,CAAD,CAFlB;;;AA9DN,yBAuEF,+CAAmB;AACf,iBAAK,KAAL,GAAa,KAAK,cAAL,CADE;;;eAvEjB;;;AA4EN,WAAO,KAAP,GAAe;;;;;;;AAOX,kBAAU;AACR,mBAAO,IAAP;AACA,uBAAW,gBAAK,SAAL;SAFb;;;;;;AASA,oBAAY;AACR,mBAAO;AACH,qBAAK,gCAAL;AACA,oBAAI,0BAAJ;aAFJ;SADJ;;;;;;;AAYA,kBAAU;AACN,mBAAO,KAAP;AACA,uBAAW,gBAAK,SAAL;SAFf;;;;;;;;;;AAaA,yBAAiB;AACb,mBAAO,MAAP;AACA,uBAAW,gBAAK,QAAL;SAFf;;;;;;;;;AAYA,eAAO;AACH,mBAAO,EAAP;AACA,uBAAW,gBAAK,QAAL;SAFf;;;;;;AASA,iBAAS;AACL,uBAAW,MAAM,OAAN;AACX,mBAAO,CACH;AACI,uBAAO,CAAP;AACA,uBAAO,EAAP;aAHD,EAKH;AACI,uBAAO,CAAP;AACA,uBAAO,EAAP;aAPD,EASH;AACI,uBAAO,CAAP;AACA,uBAAO,EAAP;aAXD,EAaH;AACI,uBAAO,CAAP;AACA,uBAAO,EAAP;aAfD,EAiBH;AACI,uBAAO,CAAP;AACA,uBAAO,EAAP;aAnBD,CAAP;SAFJ;;;;;;;AA+BA,eAAO;AACH,uBAAW,gBAAK,QAAL;AACX,mBAAO,CAAC,CAAD;SAFX;KA7FJ;AAkGA,kBAAI,QAAJ,CAAa,MAAb;;sBAEe;AACoD,4BAAc,QAAd,CAAuB,QAAvB,EAAiC,MAAjC","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\nimport templates from './Rating.soy';\n\nclass Rating extends Component {\n    /**\n     * @inheritDoc\n     */\n    attached() {\n        this.delegate('mouseover', '.rating-item', this.handleMouseOverEvent.bind(this));\n        this.delegate('click', '.rating-item', this.handleClickEvent.bind(this));\n        this.on('mouseleave', this.handleMouseLeaveEvent.bind(this));\n    }\n\n    /**\n     * @inheritDoc\n     */\n    created() {\n        this.ratingClicked_ = this.value;\n    }\n\n    /**\n     * Handles click event\n     * @param {Event} event\n     * @protected\n     */\n    handleClickEvent(event) {\n        if (!this.disabled) {\n            let index = parseInt(event.delegateTarget.getAttribute('data-index'), 10);\n\n            if (index === this.ratingClicked_ && this.canReset) {\n                this.reset();\n            }\n            else {\n                this.value = index;\n            }\n\n            this.ratingClicked_ = this.value;\n        }\n    }\n\n    /**\n     * Handles mouseleave event\n     * @protected\n     */\n    handleMouseLeaveEvent() {\n        this.setPreviousRate_();\n    }\n\n    /**\n     * Handles mouseover event\n     * @param {event} event\n     * @protected\n     */\n    handleMouseOverEvent(event) {\n        if (!this.disabled) {\n            let index = Number.parseInt(event.delegateTarget.getAttribute('data-index'), 10);\n\n            this.value = index;\n        }\n    }\n\n    /**\n     * Reset rating attributes to its initial value\n     * @protected\n     */\n    reset() {\n        this.value = -1;\n        this.ratingClicked_ = -1;\n    }\n\n    /**\n     * Set value attribute with the previous rating selected\n     * @protected\n     */\n    setPreviousRate_() {\n        this.value = this.ratingClicked_;\n    }\n}\n\nRating.STATE = {\n\n    /**\n     * Flag indicating if this component can be reset or not\n     * @type {boolean}\n     * @default true\n     */\n    canReset: {\n      value: true,\n      validator: core.isBoolean\n    },\n\n    /**\n     * Optional CSS classes to be added to the inner rating element.\n     * @type {string}\n     */\n    cssClasses: {\n        value: {\n            off: 'glyphicon glyphicon-star-empty',\n            on: 'glyphicon glyphicon-star'\n        }\n    },\n\n    /**\n     * Block or unblock rating functionality.\n     * @type {?boolean}\n     * @default false\n     */\n    disabled: {\n        value: false,\n        validator: core.isBoolean\n    },\n\n    /**\n     * Name of the hidden input. It can be used to send\n     * current option value as a form data.\n     *\n     * @attribute inputHiddenName\n     * @type {string}\n     * @default 'rate'\n     */\n    inputHiddenName: {\n        value: 'rate',\n        validator: core.isString\n    },\n\n    /**\n     * Label to be displayed with the Rating elements.\n     *\n     * @attribute label\n     * @type {string}\n     * @default ''\n     */\n    label: {\n        value: '',\n        validator: core.isString\n    },\n\n    /**\n     * List of rate options.\n     * @type {array}\n     */\n    options: {\n        validator: Array.isArray,\n        value: [\n            {\n                value: 1,\n                title: ''\n            },\n            {\n                value: 2,\n                title: ''\n            },\n            {\n                value: 3,\n                title: ''\n            },\n            {\n                value: 4,\n                title: ''\n            },\n            {\n                value: 5,\n                title: ''\n            }\n        ]\n    },\n\n    /**\n     * Rating current index value.\n     * @type {?number}\n     * @default null\n     */\n    value: {\n        validator: core.isNumber,\n        value: -1\n    }\n};\nSoy.register(Rating, templates);\n\nexport default Rating;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('rating', Rating);"]}