{"version":3,"sources":["/source/TooltipBase.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport dom from 'metal-dom';\nimport { Align } from 'metal-position';\nimport Component from 'metal-component';\nimport { EventHandler } from 'metal-events';\n\n/**\n * The base class to be shared between components that have tooltip behavior.\n * This helps decouple this behavior logic from the UI, which may be different\n * between components. The Tooltip component itself extends from this, as does\n * the crystal Popover component, which can be accessed at metal/crystal-popover.\n */\nclass TooltipBase extends Component {\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tthis.align();\n\t\tthis.syncTriggerEvents(this.triggerEvents);\n\t}\n\t\n\t/**\n\t * @inheritDoc\n\t */\n\tcreated() {\n\t\tthis.eventHandler_ = new EventHandler();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdetached() {\n\t\tthis.eventHandler_.removeAllListeners();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tsuper.disposeInternal();\n\t\tclearTimeout(this.delay_);\n\t}\n\n\t/**\n\t * Aligns the tooltip with the best region around alignElement. The best\n\t * region is defined by clockwise rotation starting from the specified\n\t * `position`. The element is always aligned in the middle of alignElement\n\t * axis.\n\t * @param {Element=} opt_alignElement Optional element to align with.\n\t */\n\talign(opt_alignElement) {\n\t\tthis.syncAlignElement(opt_alignElement || this.alignElement);\n\t}\n\n\t/**\n\t * @param {!function()} fn\n\t * @param {number} delay\n\t * @private\n\t */\n\tcallAsync_(fn, delay) {\n\t\tclearTimeout(this.delay_);\n\t\tthis.delay_ = setTimeout(fn.bind(this), delay);\n\t}\n\n\t/**\n\t * Handles hide event triggered by `events`.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleHide(event) {\n\t\tvar delegateTarget = event.delegateTarget;\n\t\tvar interactingWithDifferentTarget = delegateTarget && (delegateTarget !== this.alignElement);\n\t\tthis.callAsync_(function() {\n\t\t\tif (this.locked_) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (interactingWithDifferentTarget) {\n\t\t\t\tthis.alignElement = delegateTarget;\n\t\t\t} else {\n\t\t\t\tthis.visible = false;\n\t\t\t\tthis.syncVisible(false);\n\t\t\t}\n\t\t}, this.delay[1]);\n\t}\n\n\t/**\n\t * Handles show event triggered by `events`.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleShow(event) {\n\t\tvar delegateTarget = event.delegateTarget;\n\t\tsuper.syncVisible(true);\n\t\tthis.callAsync_(function() {\n\t\t\tthis.alignElement = delegateTarget;\n\t\t\tthis.visible = true;\n\t\t}, this.delay[0]);\n\t}\n\n\t/**\n\t * Handles toggle event triggered by `events`.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleToggle(event) {\n\t\tif (this.visible) {\n\t\t\tthis.handleHide(event);\n\t\t} else {\n\t\t\tthis.handleShow(event);\n\t\t}\n\t}\n\n\t/**\n\t * Locks tooltip visibility.\n\t * @param {!Event} event\n\t */\n\tlock() {\n\t\tthis.locked_ = true;\n\t}\n\n\t/**\n\t * Unlocks tooltip visibility.\n\t * @param {!Event} event\n\t */\n\tunlock(event) {\n\t\tthis.locked_ = false;\n\t\tthis.handleHide(event);\n\t}\n\n\t/**\n\t * State synchronization logic for `alignElement`.\n\t * @param {Element} alignElement\n\t * @param {Element} prevAlignElement\n\t */\n\tsyncAlignElement(alignElement, prevAlignElement) {\n\t\tif (prevAlignElement) {\n\t\t\talignElement.removeAttribute('aria-describedby');\n\t\t}\n\t\tif (alignElement) {\n\t\t\tvar dataTitle = alignElement.getAttribute('data-title');\n\t\t\tif (dataTitle) {\n\t\t\t\tthis.title = dataTitle;\n\t\t\t}\n\t\t\tif (this.inDocument) {\n\t\t\t\tthis.alignedPosition = TooltipBase.Align.align(this.element, alignElement, this.position);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * State synchronization logic for `position`.\n\t */\n\tsyncPosition() {\n\t\tthis.syncAlignElement(this.alignElement);\n\t}\n\n\t/**\n\t * State synchronization logic for `selector`.\n\t */\n\tsyncSelector() {\n\t\tthis.syncTriggerEvents(this.triggerEvents);\n\t}\n\n\t/**\n\t * State synchronization logic for `triggerEvents`.\n\t * @param {!Array<string>} triggerEvents\n\t */\n\tsyncTriggerEvents(triggerEvents) {\n\t\tif (!this.inDocument) {\n\t\t\treturn;\n\t\t}\n\t\tthis.eventHandler_.removeAllListeners();\n\t\tvar selector = this.selector;\n\t\tif (!selector) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.eventHandler_.add(\n\t\t\tthis.on('mouseenter', this.lock),\n\t\t\tthis.on('mouseleave', this.unlock));\n\n\t\tif (triggerEvents[0] === triggerEvents[1]) {\n\t\t\tthis.eventHandler_.add(\n\t\t\t\tdom.delegate(document, triggerEvents[0], selector, this.handleToggle.bind(this)));\n\t\t} else {\n\t\t\tthis.eventHandler_.add(\n\t\t\t\tdom.delegate(document, triggerEvents[0], selector, this.handleShow.bind(this)),\n\t\t\t\tdom.delegate(document, triggerEvents[1], selector, this.handleHide.bind(this)));\n\t\t}\n\t}\n\n\t/**\n\t * State synchronization logic for `visible`. Realigns the tooltip.\n\t */\n\tsyncVisible() {\n\t\tthis.align();\n\t}\n}\n\n/**\n * @inheritDoc\n * @see `Align` class.\n * @static\n */\nTooltipBase.Align = Align;\n\n/**\n * TooltipBase state definition.\n * @type {!Object}\n * @static\n */\nTooltipBase.STATE = {\n\t/**\n\t * The current position of the tooltip after being aligned via `Align.align`.\n\t * @type {number}\n\t */\n\talignedPosition: {\n\t\tvalidator: TooltipBase.Align.isValidPosition\n\t},\n\n\t/**\n\t * Element to align tooltip with.\n\t * @type {Element}\n\t */\n\talignElement: {\n\t\tsetter: dom.toElement\n\t},\n\n\t/**\n\t * Delay showing and hiding the tooltip (ms).\n\t * @type {!Array<number>}\n\t * @default [ 500, 250 ]\n\t */\n\tdelay: {\n\t\tvalidator: Array.isArray,\n\t\tvalue: [500, 250]\n\t},\n\n\t/**\n\t * Trigger events used to bind handlers to show and hide tooltip.\n\t * @type {!Array<string>}\n\t * @default ['mouseenter', 'mouseleave']\n\t */\n\ttriggerEvents: {\n\t\tvalidator: Array.isArray,\n\t\tvalue: ['mouseenter', 'mouseleave']\n\t},\n\n\t/**\n\t * If a selector is provided, tooltip objects will be delegated to the\n\t * specified targets by setting the `alignElement`.\n\t * @type {?string}\n\t */\n\tselector: {\n\t\tvalidator: core.isString\n\t},\n\n\t/**\n\t * The position to try alignment. If not possible the best position will be\n\t * found.\n\t * @type {number}\n\t * @default Align.Bottom\n\t */\n\tposition: {\n\t\tvalidator: TooltipBase.Align.isValidPosition,\n\t\tvalue: TooltipBase.Align.Bottom\n\t},\n\n\t/**\n\t * Content to be placed inside tooltip.\n\t * @type {string}\n\t */\n\ttitle: {\n\t\tisHtml: true\n\t}\n};\n\n/**\n * CSS classes used for each align position.\n * @type {!Array}\n * @static\n */\nTooltipBase.PositionClasses = ['top', 'right', 'bottom', 'left'];\n\nexport default TooltipBase;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('tooltipBase', TooltipBase);"]}