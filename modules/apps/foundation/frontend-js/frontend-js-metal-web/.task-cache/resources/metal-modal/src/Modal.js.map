{"version":3,"sources":["/source/Modal.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport core from 'metal';\nimport dom from 'metal-dom';\nimport { EventHandler } from 'metal-events';\nimport templates from './Modal.soy';\nimport Component from 'metal-component';\nimport Soy from 'metal-soy';\n\n/**\n * Modal component.\n */\nclass Modal extends Component {\n\t/**\n\t * @inheritDoc\n\t */\n\tcreated() {\n\t\tthis.eventHandler_ = new EventHandler();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tthis.autoFocus_(this.autoFocus);\n\t}\n\n\t/**\n\t * Automatically focuses the element specified by the given selector.\n\t * @param {boolean|string} autoFocusSelector The selector, or false if no\n\t *   element should be automatically focused.\n\t * @protected\n\t */\n\tautoFocus_(autoFocusSelector) {\n\t\tif (this.inDocument && this.visible && autoFocusSelector) {\n\t\t\tvar element = this.element.querySelector(autoFocusSelector);\n\t\t\tif (element) {\n\t\t\t\telement.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdetached() {\n\t\tsuper.detached();\n\t\tthis.eventHandler_.removeAllListeners();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tdom.exitDocument(this.overlayElement);\n\t\tthis.unrestrictFocus_();\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Handles a `focus` event on the document. If the focused element is\n\t * outside the modal and an overlay is being used, focuses the modal back.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleDocumentFocus_(event) {\n\t\tif (this.overlay && !this.element.contains(event.target)) {\n\t\t\tthis.autoFocus_('.modal-dialog');\n\t\t}\n\t}\n\n\t/**\n\t * Handles document click in order to close the alert.\n\t * @param {!Event} event\n\t * @protected\n\t */\n\thandleKeyup_(event) {\n\t\tif (event.keyCode === 27) {\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\t/**\n\t * Hides the modal, setting its `visible` state key to false.\n\t */\n\thide() {\n\t\tthis.visible = false;\n\t}\n\n\t/**\n\t * Restricts focus to the modal while it's visible.\n\t * @protected\n\t */\n\trestrictFocus_() {\n\t\tif (!this.restrictFocusHandle_) {\n\t\t\tthis.restrictFocusHandle_ = dom.on(document, 'focus', this.handleDocumentFocus_.bind(this), true);\n\t\t}\n\t}\n\n\t/**\n\t * Shifts the focus back to the last element that had been focused before the\n\t * modal was shown.\n\t * @protected\n\t */\n\tshiftFocusBack_() {\n\t\tif (this.lastFocusedElement_) {\n\t\t\tthis.lastFocusedElement_.focus();\n\t\t\tthis.lastFocusedElement_ = null;\n\t\t}\n\t}\n\n\t/**\n\t * Shows the modal, setting its `visible` state key to true.\n\t */\n\tshow() {\n\t\tthis.visible = true;\n\t}\n\n\t/**\n\t * Syncs the component according to the value of the `hideOnEscape` state key.\n\t * @param {boolean} hideOnEscape\n\t */\n\tsyncHideOnEscape(hideOnEscape) {\n\t\tif (hideOnEscape) {\n\t\t\tthis.eventHandler_.add(dom.on(document, 'keyup', this.handleKeyup_.bind(this)));\n\t\t} else {\n\t\t\tthis.eventHandler_.removeAllListeners();\n\t\t}\n\t}\n\n\t/**\n\t * Syncs the component according to the value of the `overlay` state key.\n\t * @param {boolean} overlay\n\t */\n\tsyncOverlay(overlay) {\n\t\tvar willShowOverlay = overlay && this.visible;\n\t\tdom[willShowOverlay ? 'enterDocument' : 'exitDocument'](this.overlayElement);\n\t}\n\n\t/**\n\t * Syncs the component according to the value of the `visible` state key.\n\t * @param {boolean} visible\n\t */\n\tsyncVisible(visible) {\n\t\tthis.element.style.display = visible ? 'block' : '';\n\t\tthis.syncOverlay(this.overlay);\n\t\tif (this.visible) {\n\t\t\tthis.lastFocusedElement_ = this.lastFocusedElement_ || document.activeElement;\n\t\t\tthis.autoFocus_(this.autoFocus);\n\t\t\tthis.restrictFocus_();\n\t\t} else {\n\t\t\tthis.unrestrictFocus_();\n\t\t\tthis.shiftFocusBack_();\n\t\t}\n\t}\n\n\t/**\n\t * Removes the handler that restricts focus to elements inside the modal.\n\t * @protected\n\t */\n\tunrestrictFocus_() {\n\t\tif (this.restrictFocusHandle_) {\n\t\t\tthis.restrictFocusHandle_.removeListener();\n\t\t\tthis.restrictFocusHandle_ = null;\n\t\t}\n\t}\n\n\t/**\n\t * Defines the default value for the `overlayElement` state key.\n\t * @protected\n\t */\n\tvalueOverlayElementFn_() {\n\t\treturn dom.buildFragment('<div class=\"modal-backdrop fade in\"></div>').firstChild;\n\t}\n}\n\nModal.STATE = {\n\t/**\n\t * A selector for the element that should be automatically focused when the modal\n\t * becomes visible, or `false` if no auto focus should happen. Defaults to the\n\t * modal's close button.\n\t * @type {boolean|string}\n\t */\n\tautoFocus: {\n\t\tvalidator: val => val === false || core.isString(val),\n\t\tvalue: '.close'\n\t},\n\n\t/**\n\t * Content to be placed inside modal body.\n\t * @type {string|SanitizedHtml}\n\t */\n\tbody: {\n\t\tisHtml: true\n\t},\n\n\t/**\n\t * Content to be placed inside modal footer.\n\t * @type {string|SanitizedHtml}\n\t */\n\tfooter: {\n\t\tisHtml: true\n\t},\n\n\t/**\n\t * Content to be placed inside modal header.\n\t * @type {string|SanitizedHtml}\n\t */\n\theader: {\n\t\tisHtml: true\n\t},\n\n\t/**\n\t * Whether modal should hide on esc.\n\t * @type {boolean}\n\t * @default true\n\t */\n\thideOnEscape: {\n\t\tvalidator: core.isBoolean,\n\t\tvalue: true\n\t},\n\n\t/**\n\t * Whether overlay should be visible when modal is visible.\n\t * @type {boolean}\n\t * @default true\n\t */\n\toverlay: {\n\t\tvalidator: core.isBoolean,\n\t\tvalue: true\n\t},\n\n\t/**\n\t * Element to be used as overlay.\n\t * @type {Element}\n\t */\n\toverlayElement: {\n\t\tinitOnly: true,\n\t\tvalueFn: 'valueOverlayElementFn_'\n\t},\n\n\t/**\n\t * The ARIA role to be used for this modal.\n\t * @type {string}\n\t * @default 'dialog'\n\t */\n\trole: {\n\t\tvalidator: core.isString,\n\t\tvalue: 'dialog'\n\t}\n};\n\nSoy.register(Modal, templates);\n\nexport default Modal;\nimport JQueryAdapter from 'metal-jquery-adapter/src/JQueryAdapter';JQueryAdapter.register('modal', Modal);"]}