{"version":3,"sources":["/source/Component.js"],"names":[],"mappings":"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","sourcesContent":["'use strict';\n\nimport { array, core } from 'metal';\nimport { dom, DomEventEmitterProxy } from 'metal-dom';\nimport Attribute from 'metal-attribute';\nimport ComponentCollector from './ComponentCollector';\nimport ComponentRegistry from './ComponentRegistry';\nimport ComponentRenderer from './ComponentRenderer';\nimport { EventHandler } from 'metal-events';\n\n/**\n * Component collects common behaviors to be followed by UI components, such\n * as Lifecycle, CSS classes management, events encapsulation and support for\n * different types of rendering.\n * Rendering logic can be done by either:\n *     - Listening to the `render` event and adding the rendering logic to the\n *       listener.\n *     - Using an existing implementation of `ComponentRenderer` like\n *       `SurfaceRenderer` or `SoyRenderer`, and following its patterns.\n *     - Building your own implementation of a `ComponentRenderer`.\n * Specifying the renderer that will be used can be done by setting the RENDERER\n * static variable to the renderer's constructor function.\n *\n * Example:\n *\n * <code>\n * class CustomComponent extends Component {\n *   constructor(config) {\n *     super(config);\n *   }\n *\n *   attached() {\n *   }\n *\n *   detached() {\n *   }\n * }\n *\n * CustomComponent.RENDERER = MyRenderer;\n *\n * CustomComponent.ATTRS = {\n *   title: { value: 'Title' },\n *   fontSize: { value: '10px' }\n * };\n * </code>\n *\n * @param {!Object} opt_config An object with the initial values for this component's\n *   attributes.\n * @constructor\n * @extends {Attribute}\n */\nclass Component extends Attribute {\n\tconstructor(opt_config) {\n\t\tsuper(opt_config);\n\n\t\t/**\n\t\t * Gets all nested components.\n\t\t * @type {!Array<!Component>}\n\t\t */\n\t\tthis.components = {};\n\n\t\t/**\n\t\t * Whether the element is being decorated.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.decorating_ = false;\n\n\t\t/**\n\t\t * Holds events that were listened through the `delegate` Component function.\n\t\t * @type {EventHandler}\n\t\t * @protected\n\t\t */\n\t\tthis.delegateEventHandler_ = null;\n\n\t\t/**\n\t\t * Instance of `DomEventEmitterProxy` which proxies events from the component's\n\t\t * element to the component itself.\n\t\t * @type {DomEventEmitterProxy}\n\t\t * @protected\n\t\t */\n\t\tthis.elementEventProxy_ = null;\n\n\t\t/**\n\t\t * The `EventHandler` instance for events attached from the `events` attribute.\n\t\t * @type {!EventHandler}\n\t\t * @protected\n\t\t */\n\t\tthis.eventsAttrHandler_ = new EventHandler();\n\n\t\t/**\n\t\t * Whether the element is in document.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.inDocument = false;\n\n\t\t/**\n\t\t * The initial config option passed to this constructor.\n\t\t * @type {!Object}\n\t\t * @protected\n\t\t */\n\t\tthis.initialConfig_ = opt_config || {};\n\n\t\t/**\n\t\t * Whether the element was rendered.\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.wasRendered = false;\n\n\t\t/**\n\t\t * The component's element will be appended to the element this variable is\n\t\t * set to, unless the user specifies another parent when calling `render` or\n\t\t * `attach`.\n\t\t * @type {!Element}\n\t\t */\n\t\tthis.DEFAULT_ELEMENT_PARENT = document.body;\n\n\t\tcore.mergeSuperClassesProperty(this.constructor, 'ELEMENT_CLASSES', this.mergeElementClasses_);\n\t\tcore.mergeSuperClassesProperty(this.constructor, 'ELEMENT_TAG_NAME', array.firstDefinedValue);\n\t\tcore.mergeSuperClassesProperty(this.constructor, 'RENDERER', array.firstDefinedValue);\n\n\t\tthis.renderer_ = new this.constructor.RENDERER_MERGED(this);\n\t\tthis.delegateEventHandler_ = new EventHandler();\n\n\t\tthis.created_();\n\t}\n\n\t/**\n\t * Adds the listeners specified in the given object.\n\t * @param {Object} events\n\t * @protected\n\t */\n\taddListenersFromObj_(events) {\n\t\tvar eventNames = Object.keys(events || {});\n\t\tfor (var i = 0; i < eventNames.length; i++) {\n\t\t\tvar info = this.extractListenerInfo_(events[eventNames[i]]);\n\t\t\tif (info.fn) {\n\t\t\t\tvar handler;\n\t\t\t\tif (info.selector) {\n\t\t\t\t\thandler = this.delegate(eventNames[i], info.selector, info.fn);\n\t\t\t\t} else {\n\t\t\t\t\thandler = this.on(eventNames[i], info.fn);\n\t\t\t\t}\n\t\t\t\tthis.eventsAttrHandler_.add(handler);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Overrides `addSingleListener_` from `EventEmitter`, so we can create\n\t * the `DomEventEmitterProxy` instance only when it's needed for the first\n\t * time.\n\t * @param {string} event\n\t * @param {!Function} listener\n\t * @param {boolean} opt_default Flag indicating if this listener is a default\n\t *   action for this event. Default actions are run last, and only if no previous\n\t *   listener call `preventDefault()` on the received event facade.\n\t * @param {Function=} opt_origin The original function that was added as a\n\t *   listener, if there is any.\n\t * @protected\n\t * @override\n\t */\n\taddSingleListener_(event, listener, opt_default, opt_origin) {\n\t\tif (!this.elementEventProxy_ &&\n\t\t\tdom.supportsEvent(this.constructor.ELEMENT_TAG_NAME_MERGED, event)) {\n\t\t\tthis.elementEventProxy_ = new DomEventEmitterProxy(this.element, this);\n\t\t}\n\t\tsuper.addSingleListener_(event, listener, opt_default, opt_origin);\n\t}\n\n\t/**\n\t * Invokes the attached Lifecycle. When attached, the component element is\n\t * appended to the DOM and any other action to be performed must be\n\t * implemented in this method, such as, binding DOM events. A component can\n\t * be re-attached multiple times.\n\t * @param {(string|Element)=} opt_parentElement Optional parent element\n\t *     to render the component.\n\t * @param {(string|Element)=} opt_siblingElement Optional sibling element\n\t *     to render the component before it. Relevant when the component needs\n\t *     to be rendered before an existing element in the DOM, e.g.\n\t *     `component.render(null, existingElement)`.\n\t * @protected\n\t * @chainable\n\t */\n\tattach(opt_parentElement, opt_siblingElement) {\n\t\tif (!this.inDocument) {\n\t\t\tthis.renderElement_(opt_parentElement, opt_siblingElement);\n\t\t\tthis.inDocument = true;\n\t\t\tthis.emit('attached');\n\t\t\tthis.attached();\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Lifecycle. When attached, the component element is appended to the DOM\n\t * and any other action to be performed must be implemented in this method,\n\t * such as, binding DOM events. A component can be re-attached multiple\n\t * times, therefore the undo behavior for any action performed in this phase\n\t * must be implemented on the detach phase.\n\t */\n\tattached() {}\n\n\t/**\n\t * Internal implementation for the creation phase of the component.\n\t * @protected\n\t */\n\tcreated_() {\n\t\tthis.on('eventsChanged', this.onEventsChanged_);\n\t\tthis.addListenersFromObj_(this.events);\n\n\t\tthis.on('attrsChanged', this.handleAttributesChanges_);\n\t\tComponent.componentsCollector.addComponent(this);\n\t}\n\n\t/**\n\t * Adds a sub component, creating it if it doesn't yet exist.\n\t * @param {string} componentName\n\t * @param {Object=} opt_componentData\n\t * @return {!Component}\n\t */\n\taddSubComponent(componentName, opt_componentData) {\n\t\t// Avoid accessing id from component if possible, since that may cause\n\t\t// the lookup of the component's element in the dom unnecessarily, which is\n\t\t// bad for performance.\n\t\tvar id = (opt_componentData || {}).id;\n\t\tvar component = Component.componentsCollector.createComponent(\n\t\t\tcomponentName,\n\t\t\topt_componentData\n\t\t);\n\t\tthis.components[id || component.id] = component;\n\t\treturn component;\n\t}\n\n\t/**\n\t * Lifecycle. Creates the component using existing DOM elements. Often the\n\t * component can be created using existing elements in the DOM to leverage\n\t * progressive enhancement. Any extra operation necessary to prepare the\n\t * component DOM must be implemented in this phase. Decorate phase replaces\n\t * render phase.\n\t * @chainable\n\t */\n\tdecorate() {\n\t\tthis.decorating_ = true;\n\t\tthis.render();\n\t\tthis.decorating_ = false;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Listens to a delegate event on the component's element.\n\t * @param {string} eventName The name of the event to listen to.\n\t * @param {string} selector The selector that matches the child elements that\n\t *   the event should be triggered for.\n\t * @param {!function(!Object)} callback Function to be called when the event is\n\t *   triggered. It will receive the normalized event object.\n\t * @return {!DomEventHandle} Can be used to remove the listener.\n\t */\n\tdelegate(eventName, selector, callback) {\n\t\tvar handle = dom.delegate(this.element, eventName, selector, callback);\n\t\tthis.delegateEventHandler_.add(handle);\n\t\treturn handle;\n\t}\n\n\t/**\n\t * Invokes the detached Lifecycle. When detached, the component element is\n\t * removed from the DOM and any other action to be performed must be\n\t * implemented in this method, such as, unbinding DOM events. A component\n\t * can be detached multiple times.\n\t * @chainable\n\t */\n\tdetach() {\n\t\tif (this.inDocument) {\n\t\t\tif (this.element.parentNode) {\n\t\t\t\tthis.element.parentNode.removeChild(this.element);\n\t\t\t}\n\t\t\tthis.inDocument = false;\n\t\t\tthis.detached();\n\t\t}\n\t\tthis.emit('detached');\n\t\treturn this;\n\t}\n\n\t/**\n\t * Lifecycle. When detached, the component element is removed from the DOM\n\t * and any other action to be performed must be implemented in this method,\n\t * such as, unbinding DOM events. A component can be detached multiple\n\t * times, therefore the undo behavior for any action performed in this phase\n\t * must be implemented on the attach phase.\n\t */\n\tdetached() {}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.detach();\n\n\t\tif (this.elementEventProxy_) {\n\t\t\tthis.elementEventProxy_.dispose();\n\t\t\tthis.elementEventProxy_ = null;\n\t\t}\n\n\t\tthis.delegateEventHandler_.removeAllListeners();\n\t\tthis.delegateEventHandler_ = null;\n\n\t\tthis.disposeSubComponents(Object.keys(this.components));\n\t\tthis.components = null;\n\n\t\tthis.renderer_.dispose();\n\t\tthis.renderer_ = null;\n\n\t\tsuper.disposeInternal();\n\t}\n\n\t/**\n\t * Calls `dispose` on all subcomponents.\n\t * @param {!Array<string>} ids\n\t */\n\tdisposeSubComponents(ids) {\n\t\tfor (var i = 0; i < ids.length; i++) {\n\t\t\tvar component = this.components[ids[i]];\n\t\t\tif (!component.isDisposed()) {\n\t\t\t\tComponent.componentsCollector.removeComponent(component);\n\t\t\t\tcomponent.dispose();\n\t\t\t\tdelete this.components[ids[i]];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Extracts listener info from the given value.\n\t * @param {function()|string|{selector:string,fn:function()|string}} value\n\t * @return {!{selector:string,fn:function()}}\n\t * @protected\n\t */\n\textractListenerInfo_(value) {\n\t\tvar info = {\n\t\t\tfn: value\n\t\t};\n\t\tif (core.isObject(value) && !core.isFunction(value)) {\n\t\t\tinfo.selector = value.selector;\n\t\t\tinfo.fn = value.fn;\n\t\t}\n\t\tif (core.isString(info.fn)) {\n\t\t\tinfo.fn = this.getListenerFn(info.fn);\n\t\t}\n\t\treturn info;\n\t}\n\n\t/**\n\t * Gets the configuration object that was passed to this component's constructor.\n\t * @return {!Object}\n\t */\n\tgetInitialConfig() {\n\t\treturn this.initialConfig_;\n\t}\n\n\t/**\n\t * Gets the listener function from its name. If the name is prefixed with a\n\t * component id, the function will be called on that specified component. Otherwise\n\t * it will be called on this component instead.\n\t * @param {string} fnName\n\t * @return {function()}\n\t */\n\tgetListenerFn(fnName) {\n\t\tvar fnComponent;\n\t\tvar split = fnName.split(':');\n\t\tif (split.length === 2) {\n\t\t\tfnName = split[1];\n\t\t\tfnComponent = ComponentCollector.components[split[0]];\n\t\t\tif (!fnComponent) {\n\t\t\t\tconsole.error('No component with the id \"' + split[0] + '\" has been collected' +\n\t\t\t\t\t'yet. Make sure that you specify an id for an existing component when ' +\n\t\t\t\t\t'adding inline listeners.'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tfnComponent = fnComponent || this;\n\t\tif (core.isFunction(fnComponent[fnName])) {\n\t\t\treturn fnComponent[fnName].bind(fnComponent);\n\t\t} else {\n\t\t\tconsole.error('No function named \"' + fnName + '\" was found in the component with id \"' +\n\t\t\t\tfnComponent.id + '\". Make sure that you specify valid function names when adding ' +\n\t\t\t\t'inline listeners.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Finds the element that matches the given id on this component. This searches\n\t * on the document first, for performance. If the element is not found, it's\n\t * searched in the component's element directly.\n\t * @param {string} id\n\t * @return {Element}\n\t */\n\tfindElementById(id) {\n\t\treturn document.getElementById(id) || (this.element && this.element.querySelector('#' + id));\n\t}\n\n\t/**\n\t * Fires attribute synchronization change for the attribute.\n\t * @param {Object.<string, Object>} change Object containing newVal and\n\t *     prevVal keys.\n\t * @protected\n\t */\n\tfireAttrChange_(attr, opt_change) {\n\t\tvar fn = this['sync' + attr.charAt(0).toUpperCase() + attr.slice(1)];\n\t\tif (core.isFunction(fn)) {\n\t\t\tif (!opt_change) {\n\t\t\t\topt_change = {\n\t\t\t\t\tnewVal: this[attr],\n\t\t\t\t\tprevVal: undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\tfn.call(this, opt_change.newVal, opt_change.prevVal);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a map of all subcomponents with ids that have the specified prefix.\n\t * @param {string} prefix\n\t * @return {!Object<string, !Component>}\n\t */\n\tgetComponentsWithPrefix(prefix) {\n\t\tvar ids = Object.keys(this.components)\n\t\t\t.filter(id => id.indexOf(prefix) === 0);\n\t\tvar map = {};\n\t\tids.forEach(id => map[id] = this.components[id]);\n\t\treturn map;\n\t}\n\n\t/**\n\t * Gets the name of this component. If the `NAME` static variable is set, this will\n\t * be the component's name. Otherwise, it will be formed from the constructor's\n\t * function name.\n\t * @return {string}\n\t */\n\tgetName() {\n\t\treturn this.constructor.NAME || core.getFunctionName(this.constructor);\n\t}\n\n\t/**\n\t * Gets the `ComponentRenderer` instance being used.\n\t * @return {!ComponentRenderer}\n\t */\n\tgetRenderer() {\n\t\treturn this.renderer_;\n\t}\n\n\t/**\n\t * Handles attributes batch changes. Calls any existing `sync` functions that\n\t * match the changed attributes.\n\t * @param {Event} event\n\t * @protected\n\t */\n\thandleAttributesChanges_(event) {\n\t\tthis.syncAttrsFromChanges_(event.changes);\n\t\tthis.emit('attrsSynced', event);\n\t}\n\n\t/**\n\t * Makes an unique id for the component.\n\t * @return {string} Unique id.\n\t * @protected\n\t */\n\tmakeId_() {\n\t\treturn 'metal_c_' + core.getUid(this);\n\t}\n\n\t/**\n\t * Merges an array of values for the ELEMENT_CLASSES property into a single object.\n\t * @param {!Array.<string>} values The values to be merged.\n\t * @return {!string} The merged value.\n\t * @protected\n\t */\n\tmergeElementClasses_(values) {\n\t\tvar marked = {};\n\t\treturn values.filter(function(val) {\n\t\t\tif (!val || marked[val]) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tmarked[val] = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}).join(' ');\n\t}\n\n\t/**\n\t * Fired when the `events` attribute value is changed.\n\t * @param {!Object} event\n\t * @protected\n\t */\n\tonEventsChanged_(event) {\n\t\tthis.eventsAttrHandler_.removeAllListeners();\n\t\tthis.addListenersFromObj_(event.newVal);\n\t}\n\n\t/**\n\t * Registers a Metal.js component. This is just a helper function to allow\n\t * subclasses to easily register themselves without having to import anything else.\n\t * @param {!Function} constructorFn The component's constructor function.\n\t * @param {string=} opt_name The component's name.\n\t */\n\tregisterMetalComponent(constructorFn, opt_name) {\n\t\tComponentRegistry.register(constructorFn, opt_name);\n\t}\n\n\t/**\n\t * Lifecycle. Renders the component into the DOM. Render phase replaces\n\t * decorate phase, without progressive enhancement support.\n\t *\n\t * Render Lifecycle:\n\t *   render - Decorate is manually called.\n\t *   render event - The \"render\" event is emitted. Renderers act on this step.\n\t *   attribute synchronization - All synchronization methods are called.\n\t *   attach - Attach Lifecycle is called.\n\t *\n\t * @param {(string|Element|boolean)=} opt_parentElement Optional parent element\n\t *     to render the component. If set to `false`, the element won't be\n\t *     attached to any element after rendering. In this case, `attach` should\n\t *     be called manually later to actually attach it to the dom.\n\t * @param {(string|Element)=} opt_siblingElement Optional sibling element\n\t *     to render the component before it. Relevant when the component needs\n\t *     to be rendered before an existing element in the DOM, e.g.\n\t *     `component.render(null, existingElement)`.\n\t * @chainable\n\t */\n\trender(opt_parentElement, opt_siblingElement) {\n\t\tif (this.wasRendered) {\n\t\t\tthrow new Error(Component.Error.ALREADY_RENDERED);\n\t\t}\n\n\t\tthis.emit('render', {\n\t\t\tdecorating: this.decorating_\n\t\t});\n\t\tthis.syncAttrs_();\n\t\tif (opt_parentElement !== false) {\n\t\t\tthis.attach(opt_parentElement, opt_siblingElement);\n\t\t}\n\t\tthis.wasRendered = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Renders this component as a subcomponent, meaning that no actual rendering is\n\t * needed since it was already rendered by the parent component. This just handles\n\t * other logics from the rendering lifecycle, like calling sync methods for the\n\t * attributes.\n\t */\n\trenderAsSubComponent() {\n\t\tthis.syncAttrs_();\n\t\tthis.attach();\n\t\tthis.wasRendered = true;\n\t}\n\n\t/**\n\t * Renders the component element into the DOM.\n\t * @param {(string|Element)=} opt_parentElement Optional parent element\n\t *     to render the component.\n\t * @param {(string|Element)=} opt_siblingElement Optional sibling element\n\t *     to render the component before it. Relevant when the component needs\n\t *     to be rendered before an existing element in the DOM, e.g.\n\t *     `component.render(null, existingElement)`.\n\t * @protected\n\t */\n\trenderElement_(opt_parentElement, opt_siblingElement) {\n\t\tvar element = this.element;\n\t\telement.id = this.id;\n\t\tif (opt_siblingElement || !element.parentNode) {\n\t\t\tvar parent = dom.toElement(opt_parentElement) || this.DEFAULT_ELEMENT_PARENT;\n\t\t\tparent.insertBefore(element, dom.toElement(opt_siblingElement));\n\t\t}\n\t}\n\n\t/**\n\t * Setter logic for element attribute.\n\t * @param {string|Element} val\n\t * @return {Element}\n\t * @protected\n\t */\n\tsetterElementFn_(val) {\n\t\tvar element = dom.toElement(val);\n\t\tif (!element) {\n\t\t\telement = this.valueElementFn_();\n\t\t}\n\t\treturn element;\n\t}\n\n\t/**\n\t * Fires attributes synchronization changes for attributes.\n\t * @protected\n\t */\n\tsyncAttrs_() {\n\t\tvar attrNames = this.getAttrNames();\n\t\tfor (var i = 0; i < attrNames.length; i++) {\n\t\t\tthis.fireAttrChange_(attrNames[i]);\n\t\t}\n\t}\n\n\t/**\n\t * Fires attributes synchronization changes for attributes.\n\t * @param {Object.<string, Object>} changes Object containing the attribute\n\t *     name as key and an object with newVal and prevVal as value.\n\t * @protected\n\t */\n\tsyncAttrsFromChanges_(changes) {\n\t\tfor (var attr in changes) {\n\t\t\tthis.fireAttrChange_(attr, changes[attr]);\n\t\t}\n\t}\n\n\t/**\n\t * Attribute synchronization logic for the `elementClasses` attribute.\n\t * @param {string} newVal\n\t * @param {string} prevVal\n\t */\n\tsyncElementClasses(newVal, prevVal) {\n\t\tvar classesToAdd = this.constructor.ELEMENT_CLASSES_MERGED;\n\t\tif (newVal) {\n\t\t\tclassesToAdd = classesToAdd + ' ' + newVal;\n\t\t}\n\t\tif (prevVal) {\n\t\t\tdom.removeClasses(this.element, prevVal);\n\t\t}\n\t\tdom.addClasses(this.element, classesToAdd);\n\t}\n\n\t/**\n\t * Attribute synchronization logic for `visible` attribute.\n\t * Updates the element's display value according to its visibility.\n\t * @param {boolean} newVal\n\t */\n\tsyncVisible(newVal) {\n\t\tthis.element.style.display = newVal ? '' : 'none';\n\t}\n\n\t/**\n\t * Validator logic for elementClasses attribute.\n\t * @param {string} val\n\t * @return {boolean} True if val is a valid element classes.\n\t * @protected\n\t */\n\tvalidatorElementClassesFn_(val) {\n\t\treturn core.isString(val);\n\t}\n\n\t/**\n\t * Validator logic for element attribute.\n\t * @param {string|Element} val\n\t * @return {boolean} True if val is a valid element.\n\t * @protected\n\t */\n\tvalidatorElementFn_(val) {\n\t\treturn core.isElement(val) || core.isString(val);\n\t}\n\n\t/**\n\t * Validator logic for the `events` attribute.\n\t * @param {Object} val\n\t * @return {boolean}\n\t * @protected\n\t */\n\tvalidatorEventsFn_(val) {\n\t\treturn !core.isDefAndNotNull(val) || core.isObject(val);\n\t}\n\n\t/**\n\t * Validator logic for the `id` attribute.\n\t * @param {string} val\n\t * @return {boolean} True if val is a valid id.\n\t * @protected\n\t */\n\tvalidatorIdFn_(val) {\n\t\treturn core.isString(val);\n\t}\n\n\t/**\n\t * Provides the default value for element attribute.\n\t * @return {!Element} The element.\n\t * @protected\n\t */\n\tvalueElementFn_() {\n\t\tif (!this.id) {\n\t\t\t// This may happen because the default value of \"id\" depends on \"element\",\n\t\t\t// and the default value of \"element\" depends on \"id\".\n\t\t\tthis.id = this.makeId_();\n\t\t}\n\t\treturn this.renderer_.buildElement();\n\t}\n\n\t/**\n\t * Provides the default value for id attribute.\n\t * @return {string} The id.\n\t * @protected\n\t */\n\tvalueIdFn_() {\n\t\treturn this.hasBeenSet('element') && this.element.id ? this.element.id : this.makeId_();\n\t}\n}\n\n/**\n * Helper responsible for extracting components from strings and config data.\n * @type {!ComponentCollector}\n * @protected\n * @static\n */\nComponent.componentsCollector = new ComponentCollector();\n\n/**\n * Component attributes definition.\n * @type {Object}\n * @static\n */\nComponent.ATTRS = {\n\t/**\n\t * Component element bounding box.\n\t * @type {Element}\n\t * @writeOnce\n\t */\n\telement: {\n\t\tsetter: 'setterElementFn_',\n\t\tvalidator: 'validatorElementFn_',\n\t\tvalueFn: 'valueElementFn_',\n\t\twriteOnce: true\n\t},\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @type {Array.<string>}\n\t */\n\telementClasses: {\n\t\tvalidator: 'validatorElementClassesFn_'\n\t},\n\n\t/**\n\t * Listeners that should be attached to this component. Should be provided as an object,\n\t * where the keys are event names and the values are the listener functions (or function\n\t * names).\n\t * @type {Object<string, (function()|string|{selector: string, fn: function()|string})>}\n\t */\n\tevents: {\n\t\tvalidator: 'validatorEventsFn_',\n\t\tvalue: null\n\t},\n\n\t/**\n\t * Component element id. If not specified will be generated.\n\t * @type {string}\n\t * @writeOnce\n\t */\n\tid: {\n\t\tvalidator: 'validatorIdFn_',\n\t\tvalueFn: 'valueIdFn_',\n\t\twriteOnce: true\n\t},\n\n\t/**\n\t * Indicates if the component is visible or not.\n\t * @type {boolean}\n\t */\n\tvisible: {\n\t\tvalidator: core.isBoolean,\n\t\tvalue: true\n\t}\n};\n\n/**\n * CSS classes to be applied to the element.\n * @type {string}\n * @protected\n * @static\n */\nComponent.ELEMENT_CLASSES = 'component';\n\n/**\n * Element tag name is a string that specifies the type of element to be\n * created. The nodeName of the created element is initialized with the\n * value of tag name.\n * @type {string}\n * @default div\n * @protected\n * @static\n */\nComponent.ELEMENT_TAG_NAME = 'div';\n\n/**\n * The `ComponentRenderer` that should be used. Components need to set this\n * to a subclass of `ComponentRenderer` that has the rendering logic, like\n * `SoyRenderer`.\n * @type {!ComponentRenderer}\n * @static\n */\nComponent.RENDERER = ComponentRenderer;\n\n/**\n * Errors thrown by the component.\n * @enum {string}\n */\nComponent.Error = {\n\t/**\n\t * Error when the component is already rendered and another render attempt\n\t * is made.\n\t */\n\tALREADY_RENDERED: 'Component already rendered'\n};\n\n/**\n * A list with attribute names that will automatically be rejected as invalid.\n * @type {!Array<string>}\n */\nComponent.INVALID_ATTRS = ['components'];\n\nexport default Component;\n"]}