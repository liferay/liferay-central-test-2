define("frontend-js-metal-web@1.0.6/metal-button-group/src/ButtonGroup-min", ["exports","metal/src/metal","metal-dom/src/all/dom","./ButtonGroup.soy","metal-jquery-adapter/src/JQueryAdapter"], function(e,t,n,o,r){"use strict";function l(e){return e&&e.__esModule?e:{"default":e}}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(e,"__esModule",{value:!0});var a=l(t),c=l(n),d=l(o),f=l(r),h=function(e){function t(n){s(this,t);var o=u(this,e.call(this,n));return (o.buttonElements_=null, o.on("selectedChanged",o.defaultSelectedChanged_,!0), o)}return (i(t,e), t.prototype.defaultSelectedChanged_=function(e){for(var n=0;n<this.buttonElements_.length;n++)-1!==e.newVal.indexOf(this.buttons[n].label)?c["default"].addClasses(this.buttonElements_[n],t.SELECTED_CLASS):c["default"].removeClasses(this.buttonElements_[n],t.SELECTED_CLASS)}, t.prototype.handleClick_=function(e){var t=e.delegateTarget,n=t.getAttribute("data-index"),o=this.selected.indexOf(this.buttons[n].label);-1===o?(this.selected.push(this.buttons[n].label),this.selected=this.selected):this.selected.length>this.minSelected&&(this.selected.splice(o,1),this.selected=this.selected)}, t.prototype.setterSelectedFn_=function(e){for(var t=Math.min(this.minSelected,this.buttons.length),n=0;e.length<t;)-1===e.indexOf(this.buttons[n].label)&&e.push(this.buttons[n].label),n++;return e}, t.prototype.syncButtons=function(){this.buttonElements_=this.element.querySelectorAll("button")}, t)}(d["default"]);h.prototype.registerMetalComponent&&h.prototype.registerMetalComponent(h,"ButtonGroup"),h.ATTRS={buttons:{validator:function(e){return e instanceof Array},valueFn:function(){return[]}},minSelected:{validator:a["default"].isNumber,value:0,writeOnce:!0},selected:{setter:"setterSelectedFn_",validator:Array.isArray,valueFn:function(){return[]}}},h.ELEMENT_CLASSES="btn-group",h.SELECTED_CLASS="btn-group-selected",e["default"]=h,f["default"].register("buttonGroup",h)});