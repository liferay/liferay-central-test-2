import com.liferay.gradle.util.FileUtil

bundle {
	includeTransitiveDependencies = true
}

configurations {
	projectTemplates
	mavenEmbedder
}

task mavenEmbedderDeps << {
	File mavenEmbedderDepsFile = new File(buildDir, "mavenEmbedderDeps.txt")

	buildDir.mkdirs()

	mavenEmbedderDepsFile.text = configurations.mavenEmbedder.join('\n')
}

dependencies {
	testCompile group: "biz.aQute.bnd", name: "biz.aQute.bnd", version: "3.2.0"
	testCompile group: "junit", name: "junit", version: "4.12"

	mavenEmbedder group: "org.apache.avalon.logkit", name: "avalon-logkit", version: "2.2.1"
	mavenEmbedder group: "org.apache.maven", name: "maven-embedder", version: "3.3.9"
	mavenEmbedder group: "org.apache.maven.wagon", name: "wagon-http", version: "2.10"
	mavenEmbedder group: "org.eclipse.aether", name: "aether-connector-basic", version: "1.0.2.v20150114"
	mavenEmbedder group: "org.eclipse.aether", name: "aether-transport-http", version: "1.0.2.v20150114"
	mavenEmbedder group: "org.slf4j", name: "slf4j-simple", version: "1.7.5"

	projectTemplates project(":sdk:project-templates-activator")
	projectTemplates project(":sdk:project-templates-api")
	projectTemplates project(":sdk:project-templates-contenttargetingreport")
	projectTemplates project(":sdk:project-templates-contenttargetingrule")
	projectTemplates project(":sdk:project-templates-contenttargetingtrackingaction")
	projectTemplates project(":sdk:project-templates-controlmenuentry")
	projectTemplates project(":sdk:project-templates-fragment")
	projectTemplates project(":sdk:project-templates-mvcportlet")
	projectTemplates project(":sdk:project-templates-panelapp")
	projectTemplates project(":sdk:project-templates-portlet")
	projectTemplates project(":sdk:project-templates-portletconfigurationicon")
	projectTemplates project(":sdk:project-templates-portletprovider")
	projectTemplates project(":sdk:project-templates-portlettoolbarcontributor")
	projectTemplates project(":sdk:project-templates-service")
	projectTemplates project(":sdk:project-templates-servicebuilder")
	projectTemplates project(":sdk:project-templates-servicewrapper")
	projectTemplates project(":sdk:project-templates-simulationpanelentry")
	projectTemplates project(":sdk:project-templates-templatecontextcontributor")

	provided group: "com.beust", name: "jcommander", version: "1.48"
	provided group: "org.apache.maven.archetype", name: "archetype-common", version: "2.4"

	testCompile gradleTestKit()
}

processResources {
	from configurations.projectTemplates
}

test {
	Set<Project> projectTemplateProjects = project.parent.subprojects.findAll {
		it.name.startsWith "project-templates-"
	}

	dependsOn projectTemplateProjects.collect {
		"${it.path}:install"
	}

	dependsOn install, mavenEmbedderDepsFile

	doFirst {
		Properties gradleWrapperProperties = new Properties()

		File gradleWrapperPropertiesFile = file("src/main/resources/gradle-wrapper/gradle/wrapper/gradle-wrapper.properties")

		gradleWrapperPropertiesFile.withInputStream {
			gradleWrapperProperties.load it
		}

		String gradleDistributionUrl = gradleWrapperProperties["distributionUrl"]

		File gradleDistributionFile = FileUtil.get(project, gradleDistributionUrl)

		systemProperty "gradle.distribution", uri(gradleDistributionFile)
	}

	systemProperty 'maven.multiModuleProjectDirectory', "$buildDir"

	systemProperty "repository.url", System.properties["repository.url"]
	systemProperty "http.proxyHost", System.properties["http.proxyHost"]
	systemProperty "http.proxyPort", System.properties["http.proxyPort"]
}