diff --git a/com/browseengine/bobo/sort/DocComparatorSource.java b/com/browseengine/bobo/sort/DocComparatorSource.java
index 2ad990b..961ecf5 100644
--- a/com/browseengine/bobo/sort/DocComparatorSource.java
+++ b/com/browseengine/bobo/sort/DocComparatorSource.java
@@ -1,3 +1,4 @@
+/* @generated */
 package com.browseengine.bobo.sort;
 
 import java.io.IOException;
@@ -140,6 +141,9 @@ public abstract class DocComparatorSource {
 				}
 
 				public String value(ScoreDoc doc) {
+					if (values.lookup[values.order[doc.doc]] == null) {
+						return null;
+					}
 					return String.valueOf(values.lookup[values.order[doc.doc]]);
 				}
 			};
diff --git a/com/browseengine/bobo/sort/ReverseDocComparatorSource.java b/com/browseengine/bobo/sort/ReverseDocComparatorSource.java
index 3c203d1..bc6c35b 100644
--- a/com/browseengine/bobo/sort/ReverseDocComparatorSource.java
+++ b/com/browseengine/bobo/sort/ReverseDocComparatorSource.java
@@ -1,3 +1,4 @@
+/* @generated */
 package com.browseengine.bobo.sort;
 
 import java.io.IOException;
@@ -50,6 +51,15 @@ public class ReverseDocComparatorSource extends DocComparatorSource {
 			public int compareTo(Object o) {
 				if (o instanceof ReverseComparable){
 					Comparable inner = ((ReverseComparable)o)._inner;						
+					if (_inner == null) {
+						if (inner == null) {
+							return 0;
+						}
+						return 1;
+					}
+					else if (inner == null) {
+						return -1;
+					}
 					return -_inner.compareTo(inner);
 				}
 				else{
