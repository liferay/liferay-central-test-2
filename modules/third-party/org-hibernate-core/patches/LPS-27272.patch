diff --git a/org/hibernate/cache/UpdateTimestampsCache.java b/org/hibernate/cache/UpdateTimestampsCache.java
index 31fd175..7d85cf2 100644
--- a/org/hibernate/cache/UpdateTimestampsCache.java
+++ b/org/hibernate/cache/UpdateTimestampsCache.java
@@ -1,3 +1,4 @@
+/* @generated */
 /*
  * Hibernate, Relational Persistence for Idiomatic Java
  *
@@ -60,6 +61,9 @@ public class UpdateTimestampsCache {
 
 	@SuppressWarnings({"UnnecessaryBoxing"})
 	public void preinvalidate(Serializable[] spaces) throws CacheException {
+		if (spaces.length == 0) {
+			return;
+		}
 		// TODO: to handle concurrent writes correctly, this should return a Lock to the client
 
 		readWriteLock.writeLock().lock();
@@ -83,6 +87,9 @@ public class UpdateTimestampsCache {
 
 	 @SuppressWarnings({"UnnecessaryBoxing"})
 	 public void invalidate(Serializable[] spaces) throws CacheException {
+		if (spaces.length == 0) {
+			return;
+		}
 		//TODO: to handle concurrent writes correctly, the client should pass in a Lock
 
 		 readWriteLock.writeLock().lock();
@@ -106,6 +113,9 @@ public class UpdateTimestampsCache {
 
 	@SuppressWarnings({"unchecked", "UnnecessaryUnboxing"})
 	public boolean isUpToDate(Set spaces, Long timestamp) throws HibernateException {
+		if (spaces.isEmpty()) {
+			return true;
+		}
 		readWriteLock.readLock().lock();
 
 		try {
