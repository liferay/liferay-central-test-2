<?xml version="1.0"?>

<project basedir="." name="portal-test-solr" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build-test.xml" />

	<macrodef name="prepare-solr">
		<sequential>
			<copy overwrite="true" todir="${solr.dir}/server/solr/liferay/conf">
				<fileset dir="${solr.dir}/server/solr/configsets/data_driven_schema_configs/conf">
					<exclude name="solrconfig.xml" />
				</fileset>

				<fileset dir="modules/apps/portal-search-solr/portal-search-solr/src/main/resources/META-INF/resources">
					<include name="schema.xml" />
					<include name="solrconfig.xml" />
				</fileset>
			</copy>
		</sequential>
	</macrodef>

	<macrodef name="unzip-solr">
		<sequential>
			<delete dir="${solr.dir}" />

			<if>
				<not>
					<available file="${app.server.parent.dir}/${solr.zip.name}" />
				</not>
				<then>
					<get
						dest="${app.server.parent.dir}/${solr.zip.name}"
						src="${solr.zip.url}"
						verbose="true"
					/>
				</then>
			</if>

			<unzip
				dest="${app.server.parent.dir}"
				src="${app.server.parent.dir}/${solr.zip.name}"
			/>
		</sequential>
	</macrodef>

	<target name="configure-solr-osgi-bundle-properties">
		<echo file="${liferay.home}/osgi/portal/com.liferay.portal.search.solr.configuration.SolrConfiguration.cfg">readURL=http://localhost:8983/solr/liferay
writeURL=http://localhost:8983/solr/liferay</echo>
	</target>

	<target name="delete-elasticseach-osgi-bundle">
		<delete failonerror="false">
			<fileset
				dir="${liferay.home}/osgi/portal"
				includes="com.liferay.portal.search.elasticsearch*.jar"
			/>
		</delete>
	</target>

	<target name="start-solr">
		<unzip-solr />

		<prepare-solr />

		<antcall target="delete-elasticseach-osgi-bundle" />

		<gradle-execute dir="modules/apps/portal-search-solr/portal-search-solr" task="deploy">
			<arg value="clean" />
		</gradle-execute>

		<antcall target="configure-solr-osgi-bundle-properties" />

		<local name="solr.server.not.started" />

		<if>
			<os family="unix" />
			<then>
				<chmod file="${solr.dir}/bin/solr" perm="a+x" />

				<exec dir="${solr.dir}/bin" executable="/bin/bash">
					<arg value="-c" />
					<arg value="./solr start -V" />
				</exec>

				<waitfor maxwait="10" maxwaitunit="second" timeoutproperty="solr.server.not.started">
					<http url="http://localhost:8983/solr" />
				</waitfor>

				<fail if="solr.server.not.started" message="Solr server failed to initialize." />

				<exec dir="${solr.dir}/bin" executable="/bin/bash">
					<arg value="-c" />
					<arg value="./solr create_core -c liferay -d ${solr.dir}/server/solr/liferay/conf" />
				</exec>
			</then>
			<elseif>
				<os family="windows" />
				<then>
					<exec dir="${solr.dir}/bin" executable="cmd" spawn="true">
						<arg value="/c" />
						<arg value="solr -V" />
					</exec>

					<waitfor maxwait="10" maxwaitunit="second" timeoutproperty="solr.server.not.started">
						<http url="http://localhost:8983/solr" />
					</waitfor>

					<fail if="solr.server.not.started" message="Solr server failed to initialize." />

					<exec dir="${solr.dir}/bin" executable="cmd" >
						<arg value="/c" />
						<arg value="solr create_core -c liferay -d ${solr.dir}/server/solr/liferay/conf" />
					</exec>
				</then>
			</elseif>
		</if>
	</target>
</project>