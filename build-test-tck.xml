<?xml version="1.0"?>

<project name="portal-test-tck" basedir="." default="test" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build-test.xml" />

	<macrodef name="replace-war-version">
		<attribute name="filename" />
		<attribute name="version" default="2.4" />
		<sequential>
			<mkdir dir="${basedir}/temp" />

			<unwar src="@{filename}" dest="${basedir}/temp">
				<patternset>
					<include name="WEB-INF/web.xml" />
				</patternset>
			</unwar>

			<fixcrlf file="${basedir}/temp/WEB-INF/web.xml" eol="lf" />

			<replace file="${basedir}/temp/WEB-INF/web.xml">
				<replacefilter>
					<replacetoken><![CDATA[
<!DOCTYPE web-app PUBLIC '-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN' 'http://java.sun.com/dtd/web-app_2_3.dtd'>
]]></replacetoken>
					<replacevalue></replacevalue>
				</replacefilter>
				<replacefilter token="&lt;web-app&gt;" value="&lt;web-app version=&quot;@{version}&quot;&gt;" />
			</replace>

			<zip destfile="@{filename}" update="true">
				<fileset dir="${basedir}/temp" />
			</zip>

			<delete dir="${basedir}/temp" />
		</sequential>
	</macrodef>

	<target name="deploy-tck-wars">
		<antcall target="prepare-tck" />

		<if>
			<not>
				<isset property="test.package" />
			</not>
			<then>
				<property name="test.package" value="com.sun.ts.tests" />
			</then>
		</if>

		<propertyregex
			global="true"
			input="${test.package}."
			property="test.directory"
			regexp="\."
			replace="/"
		/>

		<fileset
			dir="tools/tck/dist/${test.directory}"
			id="tck-wars"
			includes="**/*.war"
		/>

		<for param="file">
			<path>
				<fileset refid="tck-wars" />
			</path>
			<sequential>
				<replace-war-version filename="@{file}" />
			</sequential>
		</for>

		<copy todir="${liferay.home}/deploy" flatten="true">
			<fileset refid="tck-wars" />
		</copy>
	</target>

	<target name="prepare-tck">
		<delete dir="tools/tck" />

		<if>
			<isset property="portlet.tck.url" />
			<then>
				<tstamp>
					<format property="tstamp.value" pattern="yyyyMMddkkmmssSSS" />
				</tstamp>

				<mirrors-get dest="${tstamp.value}.zip" src="${portlet.tck.url}" />

				<unzip src="${tstamp.value}.zip" dest="tools/tck" />

				<delete file="${tstamp.value}.zip" />
			</then>
			<else>
				<unzip src="${portlet.tck.zip}" dest="tools/tck" />
			</else>
		</if>

		<chmod
			dir="tools/tck/bin/"
			includes="tsant*"
			perm="744"
		/>

		<replace file="tools/tck/bin/ts.jte">
			<replacefilter token="http://localhost:8080/pluto/tck" value="http://localhost:8080/c/portal/tck" />
		</replace>

		<echo file="tools/tck/bin/build.properties" append="true">

work.dir=${basedir.unix}/tools/tck/work</echo>
	</target>

	<target name="record-test-tck-package-names">
		<ant antfile="build-test-tck.xml" target="prepare-tck" />

		<script classpathref="project.classpath" language="beanshell">
			import org.apache.tools.ant.DirectoryScanner;

			DirectoryScanner directoryScanner = new DirectoryScanner();

			directoryScanner.setBasedir(project.getBaseDir());
			directoryScanner.setIncludes(new String[] {"**/com/sun/ts/tests/**/*.war"});

			directoryScanner.scan();

			String[] fileNames = directoryScanner.getIncludedFiles();

			Arrays.sort(fileNames);

			Set packageNames = new TreeSet();

			for (String fileName : fileNames) {
				int x = fileName.indexOf("com" + File.separator);
				int y = fileName.lastIndexOf(File.separatorChar);

				String packageName = fileName.substring(x, y);

				if (packageName.endsWith("PortletSessionSecondapp")) {
					continue;
				}

				packageNames.add(packageName.replace(File.separatorChar, '.'));
			}

			StringBuilder sb = new StringBuilder();

			for (String packageName : packageNames) {
				sb.append(packageName);
				sb.append(' ');
			}

			if (!packageNames.isEmpty()) {
				sb.setLength(sb.length() - 1);
			}

			project.setProperty("test.tck.package.names", sb.toString());
		</script>

		<echo file="test.tck.package.names.properties">TEST_TCK_PACKAGE_NAMES=${test.tck.package.names}</echo>
	</target>

	<target name="run-tck-tomcat">
		<antcall target="clean-up-java-processes" inheritAll="false" />

		<antcall target="prepare-portal-ext-properties">
			<param name="tck.url" value="true" />
		</antcall>

		<antcall target="rebuild-database" inheritAll="false" />

		<antcall target="deploy-tck-wars" />

		<parallel>
			<exec dir="${app.server.tomcat.bin.dir}" executable="catalina${file.suffix.bat}" resolveexecutable="true">
				<arg line="run" />
			</exec>

			<sequential>
				<waitfor>
					<http url="http://localhost:8080" />
				</waitfor>

				<condition property="tsant.file.suffix.bat" value=".bat" else="">
					<contains string="${os.name}" substring="Windows" casesensitive="false" />
				</condition>

				<exec dir="tools/tck/src/${test.directory}" executable="${basedir}/tools/tck/bin/tsant${tsant.file.suffix.bat}">
					<arg line="runclient" />
					<env key="TS_HOME" value="${basedir}/tools/tck" />
				</exec>

				<exec dir="${app.server.tomcat.bin.dir}" executable="shutdown${file.suffix.bat}" resolveexecutable="true" />
			</sequential>
		</parallel>

		<mkdir dir="portal-impl/test-results" />

		<java
			classname="com.liferay.portal.tools.TCKtoJUnitConverter"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<arg value="tools/tck/work/jtData/harness.trace" />
			<arg value="portal-impl/test-results" />
		</java>
	</target>
</project>