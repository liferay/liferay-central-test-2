<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="struts"
		module="struts"
		revision="1.2.9"
		status="release"
		publication="20060322173151"
	>
		<description homepage="http://struts.apache.org/">
		The core of the Struts framework is a flexible control layer based on standard technologies like Java Servlets, JavaBeans, ResourceBundles, and Extensible Markup Language (XML), as well as various Jakarta Commons packages. Struts encourages application architectures based on the Model 2 approach, a variation of the classic Model-View-Controller (MVC) design paradigm. Struts provides its own Controller component and integrates with other technologies to provide the Model and the View. For the Model, Struts can interact with any standard data access technology, including Enterprise Java Beans, JDBC, and Object Relational Bridge. For the View, Struts works well with JavaServer Pages, including JSTL and JSF, as well as Velocity Templates, XSLT, and other presentation systems. The Struts framework provides the invisible underpinnings every professional web application needs to survive. Struts helps you create an extensible development environment for your application, based on published standards and proven design patterns.
		</description>
		<m:maven.plugins>null__maven-surefire-plugin__null</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="struts" type="jar" ext="jar" conf="master"/>
		<artifact name="struts" type="source" ext="jar" conf="sources" m:classifier="sources"/>
	</publications>
	<dependencies>
		<dependency org="commons-beanutils" name="commons-beanutils" rev="1.7.0" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="commons-digester" name="commons-digester" rev="1.6" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="commons-fileupload" name="commons-fileupload" rev="1.0" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="commons-logging" name="commons-logging" rev="1.0.4" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="commons-validator" name="commons-validator" rev="1.1.4" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="oro" name="oro" rev="2.0.7" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="xml-apis" name="xml-apis" rev="2.0.2" force="true" conf="provided->compile(*),provided(*),runtime(*),master(*)"/>
		<dependency org="antlr" name="antlr" rev="2.7.2" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="javax.servlet" name="servlet-api" rev="2.2" force="true" conf="provided->compile(*),provided(*),runtime(*),master(*)"/>
		<dependency org="junit" name="junit" rev="3.8.1" force="true" conf="test->runtime(*),master(*)"/>
		<dependency org="cactus" name="cactus" rev="12-1.4.1" force="true" conf="test->runtime(*),master(*)"/>
		<dependency org="cactus" name="cactus-ant" rev="1.4.1" force="true" conf="test->runtime(*),master(*)"/>
		<dependency org="xalan" name="xalan" rev="2.5.1" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
	</dependencies>
</ivy-module>
