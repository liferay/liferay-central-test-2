<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="com.helger"
		module="ph-css"
		revision="3.9.1"
		status="release"
		publication="20150311114602"
	>
		<license name="Apache 2" url="http://www.apache.org/licenses/LICENSE-2.0" />
		<description homepage="https://github.com/phax/ph-css">
		Java CSS 3 parser and builder
		</description>
		<m:properties__javax.servlet-api.version>3.0.1</m:properties__javax.servlet-api.version>
		<m:properties__jsp-api.version>2.1</m:properties__jsp-api.version>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__slf4j.version>1.7.10</m:properties__slf4j.version>
		<m:properties__junit.version>4.12</m:properties__junit.version>
		<m:dependency.management__junit__junit__version>4.12</m:dependency.management__junit__junit__version>
		<m:dependency.management__javax.servlet__javax.servlet-api__version>3.0.1</m:dependency.management__javax.servlet__javax.servlet-api__version>
		<m:dependency.management__javax.servlet.jsp__jsp-api__version>2.1</m:dependency.management__javax.servlet.jsp__jsp-api__version>
		<m:dependency.management__org.slf4j__slf4j-api__version>1.7.10</m:dependency.management__org.slf4j__slf4j-api__version>
		<m:dependency.management__org.slf4j__slf4j-simple__version>1.7.10</m:dependency.management__org.slf4j__slf4j-simple__version>
		<m:dependency.management__org.slf4j__slf4j-log4j12__version>1.7.10</m:dependency.management__org.slf4j__slf4j-log4j12__version>
		<m:dependency.management__org.slf4j__jul-to-slf4j__version>1.7.10</m:dependency.management__org.slf4j__jul-to-slf4j__version>
		<m:dependency.management__org.slf4j__jcl-over-slf4j__version>1.7.10</m:dependency.management__org.slf4j__jcl-over-slf4j__version>
		<m:maven.plugins>org.apache.maven.plugins__maven-compiler-plugin__null|org.apache.maven.plugins__maven-source-plugin__null|org.apache.maven.plugins__maven-jar-plugin__null|org.apache.maven.plugins__maven-war-plugin__null|com.mycila__license-maven-plugin__null|org.apache.maven.plugins__maven-release-plugin__null|org.apache.maven.plugins__maven-idea-plugin__null|com.helger.maven__ph-buildinfo-maven-plugin__null|org.apache.maven.plugins__maven-site-plugin__null|org.apache.maven.plugins__maven-compiler-plugin__null|org.apache.maven.plugins__maven-source-plugin__null|org.apache.maven.plugins__maven-jar-plugin__null|org.apache.maven.plugins__maven-war-plugin__null|com.mycila__license-maven-plugin__null|org.apache.maven.plugins__maven-release-plugin__null|org.apache.maven.plugins__maven-idea-plugin__null|com.helger.maven__ph-buildinfo-maven-plugin__null|org.apache.maven.plugins__maven-site-plugin__null|com.helger.maven__ph-javacc-maven-plugin__2.8.0|org.apache.felix__maven-bundle-plugin__null|com.mycila__license-maven-plugin__null</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="ph-css" type="bundle" ext="jar" conf="master"/>
		<artifact name="ph-css" type="source" ext="jar" conf="sources" m:classifier="sources"/>
		<artifact name="ph-css" type="javadoc" ext="jar" conf="javadoc" m:classifier="javadoc"/>
	</publications>
	<dependencies>
		<dependency org="com.helger" name="ph-commons" rev="5.6.0" force="true" conf="compile->compile(*),master(*);runtime->runtime(*)"/>
		<dependency org="com.helger" name="ph-jdk5" rev="1.1.0" force="true" conf="test->runtime(*),master(*)"/>
		<dependency org="org.slf4j" name="slf4j-simple" rev="1.7.10" force="true" conf="test->runtime(*),master(*)"/>
		<dependency org="junit" name="junit" rev="4.12" force="true" conf="test->runtime(*),master(*)"/>
		<override org="org.slf4j" module="jul-to-slf4j" matcher="exact" rev="1.7.10"/>
		<override org="org.slf4j" module="jcl-over-slf4j" matcher="exact" rev="1.7.10"/>
		<override org="org.slf4j" module="slf4j-simple" matcher="exact" rev="1.7.10"/>
		<override org="javax.servlet" module="javax.servlet-api" matcher="exact" rev="3.0.1"/>
		<override org="org.slf4j" module="slf4j-log4j12" matcher="exact" rev="1.7.10"/>
		<override org="org.slf4j" module="slf4j-api" matcher="exact" rev="1.7.10"/>
		<override org="javax.servlet.jsp" module="jsp-api" matcher="exact" rev="2.1"/>
		<override org="junit" module="junit" matcher="exact" rev="4.12"/>
	</dependencies>
</ivy-module>
